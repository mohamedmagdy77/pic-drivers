

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Aug 31 18:55:04 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53  0000                     
    54                           ; Version 2.05
    55                           ; Generated 20/12/2018 GMT
    56                           ; 
    57                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     _TRISD	set	3989
    89  0000                     _LATD	set	3980
    90  0000                     _ADCON0	set	4034
    91  0000                     _ADRESL	set	4035
    92  0000                     _ADRESH	set	4036
    93  0000                     _ADCON2	set	4032
    94  0000                     _ADCON1	set	4033
    95  0000                     _TRISA	set	3986
    96  0000                     _LD5	set	31845
    97  0000                     _LD4	set	31844
    98                           
    99                           	psect	smallconst
   100  000800                     __psmallconst:
   101                           	opt callstack 0
   102  000800  00                 	db	0
   103  000801                     STR_3:
   104  000801  76                 	db	118	;'v'
   105  000802  6F                 	db	111	;'o'
   106  000803  6C                 	db	108	;'l'
   107  000804  74                 	db	116	;'t'
   108  000805  61                 	db	97	;'a'
   109  000806  67                 	db	103	;'g'
   110  000807  65                 	db	101	;'e'
   111  000808  00                 	db	0
   112  000809                     STR_2:
   113  000809  20                 	db	32
   114  00080A  56                 	db	86	;'V'
   115  00080B  6F                 	db	111	;'o'
   116  00080C  6C                 	db	108	;'l'
   117  00080D  74                 	db	116	;'t'
   118  00080E  00                 	db	0
   119  00080F                     STR_1:
   120  00080F  25                 	db	37
   121  000810  2E                 	db	46
   122  000811  32                 	db	50	;'2'
   123  000812  66                 	db	102	;'f'
   124  000813  00                 	db	0
   125  000814                     STR_4:
   126  000814  49                 	db	73	;'I'
   127  000815  4E                 	db	78	;'N'
   128  000816  46                 	db	70	;'F'
   129  000817  00                 	db	0
   130  000818                     STR_8:
   131  000818  4E                 	db	78	;'N'
   132  000819  41                 	db	65	;'A'
   133  00081A  4E                 	db	78	;'N'
   134  00081B  00                 	db	0
   135  00081C                     STR_5:
   136  00081C  69                 	db	105	;'i'
   137  00081D  6E                 	db	110	;'n'
   138  00081E  66                 	db	102	;'f'
   139  00081F  00                 	db	0
   140  000820                     STR_9:
   141  000820  6E                 	db	110	;'n'
   142  000821  61                 	db	97	;'a'
   143  000822  6E                 	db	110	;'n'
   144  000823  00                 	db	0
   145  000824                     STR_12:
   146  000824  6C                 	db	108	;'l'
   147  000825  66                 	db	102	;'f'
   148  000826  00                 	db	0
   149  0000                     
   150                           ; #config settings
   151  000827  00                 	db	0	; dummy byte at the end
   152  0000                     
   153                           	psect	cinit
   154  002D6C                     __pcinit:
   155                           	opt callstack 0
   156  002D6C                     start_initialization:
   157                           	opt callstack 0
   158  002D6C                     __initialization:
   159                           	opt callstack 0
   160                           
   161                           ; Clear objects allocated to BANK1 (80 bytes)
   162  002D6C  EE01  F000         	lfsr	0,__pbssBANK1
   163  002D70  0E50               	movlw	80
   164  002D72                     clear_0:
   165  002D72  6AEE               	clrf	postinc0,c
   166  002D74  06E8               	decf	wreg,f,c
   167  002D76  E1FD               	bnz	clear_0
   168                           
   169                           ; Clear objects allocated to BANK0 (14 bytes)
   170  002D78  EE00  F0BC         	lfsr	0,__pbssBANK0
   171  002D7C  0E0E               	movlw	14
   172  002D7E                     clear_1:
   173  002D7E  6AEE               	clrf	postinc0,c
   174  002D80  06E8               	decf	wreg,f,c
   175  002D82  E1FD               	bnz	clear_1
   176                           
   177                           ; Clear objects allocated to COMRAM (2 bytes)
   178  002D84  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   179  002D86  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   180  002D88                     end_of_initialization:
   181                           	opt callstack 0
   182  002D88                     __end_of__initialization:
   183                           	opt callstack 0
   184  002D88  0E00               	movlw	low (__Lmediumconst shr (0+16))
   185  002D8A  6EF8               	movwf	tblptru,c
   186  002D8C  0100               	movlb	0
   187  002D8E  EF33  F011         	goto	_main	;jump to C main() function
   188                           
   189                           	psect	bssCOMRAM
   190  00005E                     __pbssCOMRAM:
   191                           	opt callstack 0
   192  00005E                     _flags:
   193                           	opt callstack 0
   194  00005E                     	ds	2
   195                           
   196                           	psect	bssBANK0
   197  0000BC                     __pbssBANK0:
   198                           	opt callstack 0
   199  0000BC                     floorf@F524:
   200                           	opt callstack 0
   201  0000BC                     	ds	4
   202  0000C0                     ___fpclassifyf@F463:
   203                           	opt callstack 0
   204  0000C0                     	ds	4
   205  0000C4                     _nout:
   206                           	opt callstack 0
   207  0000C4                     	ds	2
   208  0000C6                     _width:
   209                           	opt callstack 0
   210  0000C6                     	ds	2
   211  0000C8                     _prec:
   212                           	opt callstack 0
   213  0000C8                     	ds	2
   214                           
   215                           	psect	bssBANK1
   216  000100                     __pbssBANK1:
   217                           	opt callstack 0
   218  000100                     _dbuf:
   219                           	opt callstack 0
   220  000100                     	ds	80
   221                           
   222                           	psect	cstackBANK0
   223  000060                     __pcstackBANK0:
   224                           	opt callstack 0
   225  000060                     efgtoa@ou:
   226                           	opt callstack 0
   227                           
   228                           ; 4 bytes @ 0x0
   229  000060                     	ds	4
   230  000064                     _efgtoa$203:
   231                           	opt callstack 0
   232                           
   233                           ; 2 bytes @ 0x4
   234  000064                     	ds	2
   235  000066                     _efgtoa$204:
   236                           	opt callstack 0
   237                           
   238                           ; 2 bytes @ 0x6
   239  000066                     	ds	2
   240  000068                     _efgtoa$209:
   241                           	opt callstack 0
   242                           
   243                           ; 2 bytes @ 0x8
   244  000068                     	ds	2
   245  00006A                     _efgtoa$213:
   246                           	opt callstack 0
   247                           
   248                           ; 2 bytes @ 0xA
   249  00006A                     	ds	2
   250  00006C                     _efgtoa$214:
   251                           	opt callstack 0
   252                           
   253                           ; 2 bytes @ 0xC
   254  00006C                     	ds	2
   255  00006E                     _efgtoa$215:
   256                           	opt callstack 0
   257                           
   258                           ; 2 bytes @ 0xE
   259  00006E                     	ds	2
   260  000070                     efgtoa@t:
   261                           	opt callstack 0
   262                           
   263                           ; 2 bytes @ 0x10
   264  000070                     	ds	2
   265  000072                     efgtoa@pp:
   266                           	opt callstack 0
   267                           
   268                           ; 2 bytes @ 0x12
   269  000072                     	ds	2
   270  000074                     efgtoa@m:
   271                           	opt callstack 0
   272                           
   273                           ; 2 bytes @ 0x14
   274  000074                     	ds	2
   275  000076                     efgtoa@ne:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0x16
   279  000076                     	ds	2
   280  000078                     efgtoa@d:
   281                           	opt callstack 0
   282                           
   283                           ; 2 bytes @ 0x18
   284  000078                     	ds	2
   285  00007A                     efgtoa@sign:
   286                           	opt callstack 0
   287                           
   288                           ; 2 bytes @ 0x1A
   289  00007A                     	ds	2
   290  00007C                     efgtoa@p:
   291                           	opt callstack 0
   292                           
   293                           ; 2 bytes @ 0x1C
   294  00007C                     	ds	2
   295  00007E                     efgtoa@nmode:
   296                           	opt callstack 0
   297                           
   298                           ; 1 bytes @ 0x1E
   299  00007E                     	ds	1
   300  00007F                     efgtoa@w:
   301                           	opt callstack 0
   302                           
   303                           ; 2 bytes @ 0x1F
   304  00007F                     	ds	2
   305  000081                     efgtoa@mode:
   306                           	opt callstack 0
   307                           
   308                           ; 1 bytes @ 0x21
   309  000081                     	ds	1
   310  000082                     efgtoa@h:
   311                           	opt callstack 0
   312                           
   313                           ; 4 bytes @ 0x22
   314  000082                     	ds	4
   315  000086                     efgtoa@l:
   316                           	opt callstack 0
   317                           
   318                           ; 4 bytes @ 0x26
   319  000086                     	ds	4
   320  00008A                     efgtoa@i:
   321                           	opt callstack 0
   322                           
   323                           ; 2 bytes @ 0x2A
   324  00008A                     	ds	2
   325  00008C                     efgtoa@g:
   326                           	opt callstack 0
   327                           
   328                           ; 4 bytes @ 0x2C
   329  00008C                     	ds	4
   330  000090                     efgtoa@e:
   331                           	opt callstack 0
   332                           
   333                           ; 2 bytes @ 0x30
   334  000090                     	ds	2
   335  000092                     efgtoa@n:
   336                           	opt callstack 0
   337                           
   338                           ; 2 bytes @ 0x32
   339  000092                     	ds	2
   340  000094                     efgtoa@u:
   341                           	opt callstack 0
   342                           
   343                           ; 4 bytes @ 0x34
   344  000094                     	ds	4
   345  000098                     ?_sprintf:
   346                           	opt callstack 0
   347  000098                     sprintf@s:
   348                           	opt callstack 0
   349                           
   350                           ; 2 bytes @ 0x38
   351  000098                     	ds	2
   352  00009A                     sprintf@fmt:
   353                           	opt callstack 0
   354                           
   355                           ; 2 bytes @ 0x3A
   356  00009A                     	ds	8
   357  0000A2                     sprintf@ap:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0x42
   361  0000A2                     	ds	2
   362  0000A4                     sprintf@f:
   363                           	opt callstack 0
   364                           
   365                           ; 6 bytes @ 0x44
   366  0000A4                     	ds	6
   367  0000AA                     main@data:
   368                           	opt callstack 0
   369                           
   370                           ; 10 bytes @ 0x4A
   371  0000AA                     	ds	10
   372  0000B4                     main@voltage:
   373                           	opt callstack 0
   374                           
   375                           ; 4 bytes @ 0x54
   376  0000B4                     	ds	4
   377  0000B8                     main@dig_old:
   378                           	opt callstack 0
   379                           
   380                           ; 2 bytes @ 0x58
   381  0000B8                     	ds	2
   382  0000BA                     main@digital:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x5A
   386  0000BA                     	ds	2
   387                           
   388                           	psect	cstackCOMRAM
   389  000001                     __pcstackCOMRAM:
   390                           	opt callstack 0
   391  000001                     ?_strlen:
   392                           	opt callstack 0
   393  000001                     ?___fpclassifyf:
   394                           	opt callstack 0
   395  000001                     ?_isupper:
   396                           	opt callstack 0
   397  000001                     ?_isdigit:
   398                           	opt callstack 0
   399  000001                     ?_strncmp:
   400                           	opt callstack 0
   401  000001                     ?_isspace:
   402                           	opt callstack 0
   403  000001                     ?_adc_read:
   404                           	opt callstack 0
   405  000001                     ?___wmul:
   406                           	opt callstack 0
   407  000001                     ?___awdiv:
   408                           	opt callstack 0
   409  000001                     ?___awmod:
   410                           	opt callstack 0
   411  000001                     ?___fladd:
   412                           	opt callstack 0
   413  000001                     ?___fldiv:
   414                           	opt callstack 0
   415  000001                     ?___flneg:
   416                           	opt callstack 0
   417  000001                     ?___fltol:
   418                           	opt callstack 0
   419  000001                     ?___xxtofl:
   420                           	opt callstack 0
   421  000001                     adc_read@adc:
   422                           	opt callstack 0
   423  000001                     MSdelay@val:
   424                           	opt callstack 0
   425  000001                     ___wmul@multiplier:
   426                           	opt callstack 0
   427  000001                     ___awdiv@dividend:
   428                           	opt callstack 0
   429  000001                     ___awmod@dividend:
   430                           	opt callstack 0
   431  000001                     isdigit@c:
   432                           	opt callstack 0
   433  000001                     isspace@c:
   434                           	opt callstack 0
   435  000001                     isupper@c:
   436                           	opt callstack 0
   437  000001                     fputc@c:
   438                           	opt callstack 0
   439  000001                     strlen@s:
   440                           	opt callstack 0
   441  000001                     strncmp@_l:
   442                           	opt callstack 0
   443  000001                     ___fleq@ff1:
   444                           	opt callstack 0
   445  000001                     ___flneg@f1:
   446                           	opt callstack 0
   447  000001                     ___fltol@f1:
   448                           	opt callstack 0
   449  000001                     ___fladd@b:
   450                           	opt callstack 0
   451  000001                     ___fldiv@b:
   452                           	opt callstack 0
   453  000001                     ___xxtofl@val:
   454                           	opt callstack 0
   455  000001                     ___fpclassifyf@x:
   456                           	opt callstack 0
   457                           
   458                           ; 4 bytes @ 0x0
   459  000001                     	ds	2
   460  000003                     ??_isupper:
   461  000003                     ??_isdigit:
   462  000003                     ??_isspace:
   463  000003                     ??_adc_read:
   464  000003                     MSdelay@i:
   465                           	opt callstack 0
   466  000003                     ___wmul@multiplicand:
   467                           	opt callstack 0
   468  000003                     ___awdiv@divisor:
   469                           	opt callstack 0
   470  000003                     ___awmod@divisor:
   471                           	opt callstack 0
   472  000003                     fputc@fp:
   473                           	opt callstack 0
   474  000003                     strlen@a:
   475                           	opt callstack 0
   476  000003                     strncmp@_r:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x2
   480  000003                     	ds	2
   481  000005                     ??_fputc:
   482  000005                     ??___fpclassifyf:
   483  000005                     ??___fltol:
   484  000005                     ??___xxtofl:
   485  000005                     ___awdiv@counter:
   486                           	opt callstack 0
   487  000005                     ___awmod@counter:
   488                           	opt callstack 0
   489  000005                     adc_read@digital:
   490                           	opt callstack 0
   491  000005                     MSdelay@j:
   492                           	opt callstack 0
   493  000005                     ___wmul@product:
   494                           	opt callstack 0
   495  000005                     strcpy@dest:
   496                           	opt callstack 0
   497  000005                     strncmp@n:
   498                           	opt callstack 0
   499  000005                     ___fleq@ff2:
   500                           	opt callstack 0
   501  000005                     ___fladd@a:
   502                           	opt callstack 0
   503  000005                     ___fldiv@a:
   504                           	opt callstack 0
   505                           
   506                           ; 4 bytes @ 0x4
   507  000005                     	ds	1
   508  000006                     ___awdiv@sign:
   509                           	opt callstack 0
   510  000006                     ___awmod@sign:
   511                           	opt callstack 0
   512                           
   513                           ; 1 bytes @ 0x5
   514  000006                     	ds	1
   515  000007                     ??_strncmp:
   516  000007                     ??_send_cmd:
   517  000007                     ??_send_chr:
   518  000007                     ?_tolower:
   519                           	opt callstack 0
   520  000007                     _isspace$735:
   521                           	opt callstack 0
   522  000007                     ___awdiv@quotient:
   523                           	opt callstack 0
   524  000007                     strcpy@src:
   525                           	opt callstack 0
   526  000007                     tolower@c:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x6
   530  000007                     	ds	1
   531  000008                     ?_atoi:
   532                           	opt callstack 0
   533  000008                     send_cmd@copy:
   534                           	opt callstack 0
   535  000008                     send_chr@copy:
   536                           	opt callstack 0
   537  000008                     atoi@s:
   538                           	opt callstack 0
   539  000008                     strncmp@l:
   540                           	opt callstack 0
   541                           
   542                           ; 2 bytes @ 0x7
   543  000008                     	ds	1
   544  000009                     ??_strcpy:
   545  000009                     ??_tolower:
   546  000009                     ??___fladd:
   547  000009                     ??___fldiv:
   548  000009                     ??___fleq:
   549  000009                     send_cmd@cmd:
   550                           	opt callstack 0
   551  000009                     send_chr@chr:
   552                           	opt callstack 0
   553  000009                     ___fltol@sign1:
   554                           	opt callstack 0
   555  000009                     ___xxtofl@sign:
   556                           	opt callstack 0
   557  000009                     ___fpclassifyf@e:
   558                           	opt callstack 0
   559                           
   560                           ; 2 bytes @ 0x8
   561  000009                     	ds	1
   562  00000A                     ??_atoi:
   563  00000A                     send_string@col:
   564                           	opt callstack 0
   565  00000A                     ___fltol@exp1:
   566                           	opt callstack 0
   567  00000A                     ___xxtofl@exp:
   568                           	opt callstack 0
   569  00000A                     fputs@s:
   570                           	opt callstack 0
   571  00000A                     strncmp@r:
   572                           	opt callstack 0
   573                           
   574                           ; 2 bytes @ 0x9
   575  00000A                     	ds	1
   576  00000B                     send_string@string:
   577                           	opt callstack 0
   578  00000B                     strcpy@s:
   579                           	opt callstack 0
   580  00000B                     ___xxtofl@arg:
   581                           	opt callstack 0
   582  00000B                     ___fpclassifyf@u:
   583                           	opt callstack 0
   584                           
   585                           ; 4 bytes @ 0xA
   586  00000B                     	ds	1
   587  00000C                     fputs@fp:
   588                           	opt callstack 0
   589                           
   590                           ; 2 bytes @ 0xB
   591  00000C                     	ds	1
   592  00000D                     send_string@row:
   593                           	opt callstack 0
   594  00000D                     ___fladd@signs:
   595                           	opt callstack 0
   596  00000D                     strcpy@d:
   597                           	opt callstack 0
   598  00000D                     _tolower$827:
   599                           	opt callstack 0
   600  00000D                     ___fldiv@rem:
   601                           	opt callstack 0
   602                           
   603                           ; 4 bytes @ 0xC
   604  00000D                     	ds	1
   605  00000E                     send_string@loc:
   606                           	opt callstack 0
   607  00000E                     ___fladd@aexp:
   608                           	opt callstack 0
   609  00000E                     fputs@c:
   610                           	opt callstack 0
   611  00000E                     atoi@neg:
   612                           	opt callstack 0
   613                           
   614                           ; 2 bytes @ 0xD
   615  00000E                     	ds	1
   616  00000F                     ?___flmul:
   617                           	opt callstack 0
   618  00000F                     ___fladd@bexp:
   619                           	opt callstack 0
   620  00000F                     fputs@i:
   621                           	opt callstack 0
   622  00000F                     strcat@dest:
   623                           	opt callstack 0
   624  00000F                     ___flmul@b:
   625                           	opt callstack 0
   626                           
   627                           ; 4 bytes @ 0xE
   628  00000F                     	ds	1
   629  000010                     ___fladd@grs:
   630                           	opt callstack 0
   631  000010                     _atoi$704:
   632                           	opt callstack 0
   633                           
   634                           ; 2 bytes @ 0xF
   635  000010                     	ds	1
   636  000011                     ?_pad:
   637                           	opt callstack 0
   638  000011                     ___fldiv@sign:
   639                           	opt callstack 0
   640  000011                     pad@fp:
   641                           	opt callstack 0
   642  000011                     strcat@src:
   643                           	opt callstack 0
   644                           
   645                           ; 2 bytes @ 0x10
   646  000011                     	ds	1
   647  000012                     ___fldiv@new_exp:
   648                           	opt callstack 0
   649  000012                     _atoi$706:
   650                           	opt callstack 0
   651                           
   652                           ; 2 bytes @ 0x11
   653  000012                     	ds	1
   654  000013                     pad@buf:
   655                           	opt callstack 0
   656  000013                     ___flmul@a:
   657                           	opt callstack 0
   658                           
   659                           ; 4 bytes @ 0x12
   660  000013                     	ds	1
   661  000014                     _atoi$705:
   662                           	opt callstack 0
   663  000014                     ___fldiv@grs:
   664                           	opt callstack 0
   665                           
   666                           ; 4 bytes @ 0x13
   667  000014                     	ds	1
   668  000015                     pad@p:
   669                           	opt callstack 0
   670  000015                     atoi@n:
   671                           	opt callstack 0
   672                           
   673                           ; 2 bytes @ 0x14
   674  000015                     	ds	2
   675  000017                     ??___flmul:
   676  000017                     ??_pad:
   677                           
   678                           ; 1 bytes @ 0x16
   679  000017                     	ds	1
   680  000018                     ___fldiv@bexp:
   681                           	opt callstack 0
   682  000018                     pad@i:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x17
   686  000018                     	ds	1
   687  000019                     ___fldiv@aexp:
   688                           	opt callstack 0
   689                           
   690                           ; 1 bytes @ 0x18
   691  000019                     	ds	1
   692  00001A                     ?_floorf:
   693                           	opt callstack 0
   694  00001A                     pad@w:
   695                           	opt callstack 0
   696  00001A                     floorf@x:
   697                           	opt callstack 0
   698                           
   699                           ; 4 bytes @ 0x19
   700  00001A                     	ds	1
   701  00001B                     ___flmul@sign:
   702                           	opt callstack 0
   703                           
   704                           ; 1 bytes @ 0x1A
   705  00001B                     	ds	1
   706  00001C                     ___flmul@grs:
   707                           	opt callstack 0
   708                           
   709                           ; 4 bytes @ 0x1B
   710  00001C                     	ds	2
   711  00001E                     ??_floorf:
   712                           
   713                           ; 1 bytes @ 0x1D
   714  00001E                     	ds	2
   715  000020                     ___flmul@aexp:
   716                           	opt callstack 0
   717                           
   718                           ; 1 bytes @ 0x1F
   719  000020                     	ds	1
   720  000021                     ___flmul@bexp:
   721                           	opt callstack 0
   722                           
   723                           ; 1 bytes @ 0x20
   724  000021                     	ds	1
   725  000022                     ___flmul@prod:
   726                           	opt callstack 0
   727                           
   728                           ; 4 bytes @ 0x21
   729  000022                     	ds	2
   730  000024                     floorf@m:
   731                           	opt callstack 0
   732                           
   733                           ; 4 bytes @ 0x23
   734  000024                     	ds	2
   735  000026                     ___flmul@temp:
   736                           	opt callstack 0
   737                           
   738                           ; 2 bytes @ 0x25
   739  000026                     	ds	2
   740  000028                     ?___flsub:
   741                           	opt callstack 0
   742  000028                     floorf@e:
   743                           	opt callstack 0
   744  000028                     ___flge@ff1:
   745                           	opt callstack 0
   746  000028                     ___flsub@b:
   747                           	opt callstack 0
   748                           
   749                           ; 4 bytes @ 0x27
   750  000028                     	ds	2
   751  00002A                     floorf@u:
   752                           	opt callstack 0
   753                           
   754                           ; 4 bytes @ 0x29
   755  00002A                     	ds	2
   756  00002C                     ___flge@ff2:
   757                           	opt callstack 0
   758  00002C                     ___flsub@a:
   759                           	opt callstack 0
   760                           
   761                           ; 4 bytes @ 0x2B
   762  00002C                     	ds	4
   763  000030                     ??___flge:
   764                           
   765                           ; 1 bytes @ 0x2F
   766  000030                     	ds	4
   767  000034                     ?_efgtoa:
   768                           	opt callstack 0
   769  000034                     efgtoa@fp:
   770                           	opt callstack 0
   771                           
   772                           ; 2 bytes @ 0x33
   773  000034                     	ds	2
   774  000036                     efgtoa@f:
   775                           	opt callstack 0
   776                           
   777                           ; 4 bytes @ 0x35
   778  000036                     	ds	4
   779  00003A                     efgtoa@c:
   780                           	opt callstack 0
   781                           
   782                           ; 1 bytes @ 0x39
   783  00003A                     	ds	1
   784  00003B                     ??_efgtoa:
   785                           
   786                           ; 1 bytes @ 0x3A
   787  00003B                     	ds	5
   788  000040                     ?_vfpfcnvrt:
   789                           	opt callstack 0
   790  000040                     vfpfcnvrt@fp:
   791                           	opt callstack 0
   792                           
   793                           ; 2 bytes @ 0x3F
   794  000040                     	ds	2
   795  000042                     vfpfcnvrt@fmt:
   796                           	opt callstack 0
   797                           
   798                           ; 2 bytes @ 0x41
   799  000042                     	ds	2
   800  000044                     vfpfcnvrt@ap:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x43
   804  000044                     	ds	2
   805  000046                     ??_vfpfcnvrt:
   806                           
   807                           ; 1 bytes @ 0x45
   808  000046                     	ds	4
   809  00004A                     _vfpfcnvrt$229:
   810                           	opt callstack 0
   811                           
   812                           ; 2 bytes @ 0x49
   813  00004A                     	ds	2
   814  00004C                     _vfpfcnvrt$233:
   815                           	opt callstack 0
   816                           
   817                           ; 2 bytes @ 0x4B
   818  00004C                     	ds	2
   819  00004E                     vfpfcnvrt@f:
   820                           	opt callstack 0
   821                           
   822                           ; 4 bytes @ 0x4D
   823  00004E                     	ds	4
   824  000052                     vfpfcnvrt@ct:
   825                           	opt callstack 0
   826                           
   827                           ; 3 bytes @ 0x51
   828  000052                     	ds	3
   829  000055                     vfpfcnvrt@c:
   830                           	opt callstack 0
   831                           
   832                           ; 1 bytes @ 0x54
   833  000055                     	ds	1
   834  000056                     ?_vfprintf:
   835                           	opt callstack 0
   836  000056                     vfprintf@fp:
   837                           	opt callstack 0
   838                           
   839                           ; 2 bytes @ 0x55
   840  000056                     	ds	2
   841  000058                     vfprintf@fmt:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x57
   845  000058                     	ds	2
   846  00005A                     vfprintf@ap:
   847                           	opt callstack 0
   848                           
   849                           ; 2 bytes @ 0x59
   850  00005A                     	ds	2
   851  00005C                     vfprintf@cfmt:
   852                           	opt callstack 0
   853                           
   854                           ; 2 bytes @ 0x5B
   855  00005C                     	ds	2
   856  00005E                     
   857                           ; 1 bytes @ 0x5D
   858 ;;
   859 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   860 ;;
   861 ;; *************** function _main *****************
   862 ;; Defined at:
   863 ;;		line 17 in file "main.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  data           10   74[BANK0 ] unsigned char [10]
   868 ;;  voltage         4   84[BANK0 ] float 
   869 ;;  digital         2   90[BANK0 ] int 
   870 ;;  dig_old         2   88[BANK0 ] int 
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   880 ;;      Params:         0       0       0       0       0       0       0       0       0
   881 ;;      Locals:         0      18       0       0       0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0       0       0       0       0
   883 ;;      Totals:         0      18       0       0       0       0       0       0       0
   884 ;;Total ram usage:       18 bytes
   885 ;; Hardware stack levels required when called:    8
   886 ;; This function calls:
   887 ;;		___flmul
   888 ;;		___xxtofl
   889 ;;		__init_lcd
   890 ;;		_adc_init
   891 ;;		_adc_read
   892 ;;		_send_string
   893 ;;		_sprintf
   894 ;;		_strcat
   895 ;; This function is called by:
   896 ;;		Startup code after reset
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text0
   901  002266                     __ptext0:
   902                           	opt callstack 0
   903  002266                     _main:
   904                           	opt callstack 23
   905                           
   906                           ;main.c: 18:     char data[10];;main.c: 19:     int digital;;main.c: 20:     float volta
      +                          ge;;main.c: 21:     int dig_old=-1;
   907                           
   908                           ;incstack = 0
   909  002266  0100               	movlb	0	; () banked
   910  002268  69B8               	setf	main@dig_old& (0+255),b
   911  00226A  69B9               	setf	(main@dig_old+1)& (0+255),b
   912                           
   913                           ; BSR set to: 0
   914                           ;main.c: 22:     adc_init();
   915  00226C  ECEF  F016         	call	_adc_init	;wreg free
   916                           
   917                           ;main.c: 23:     _init_lcd();
   918  002270  EC25  F016         	call	__init_lcd	;wreg free
   919  002274                     l3961:
   920                           
   921                           ;main.c: 25:         digital = adc_read(1);
   922  002274  0E00               	movlw	0
   923  002276  6E02               	movwf	adc_read@adc+1,c
   924  002278  0E01               	movlw	1
   925  00227A  6E01               	movwf	adc_read@adc,c
   926  00227C  EC09  F016         	call	_adc_read	;wreg free
   927  002280  C001  F0BA         	movff	?_adc_read,main@digital
   928  002284  C002  F0BB         	movff	?_adc_read+1,main@digital+1
   929                           
   930                           ;main.c: 26:         if(digital != dig_old){
   931  002288  0100               	movlb	0	; () banked
   932  00228A  51B8               	movf	main@dig_old& (0+255),w,b
   933  00228C  19BA               	xorwf	main@digital& (0+255),w,b
   934  00228E  E104               	bnz	u4880
   935  002290  51B9               	movf	(main@dig_old+1)& (0+255),w,b
   936  002292  19BB               	xorwf	(main@digital+1)& (0+255),w,b
   937  002294  B4D8               	btfsc	status,2,c
   938  002296  D7EE               	goto	l3961
   939  002298                     u4880:
   940                           
   941                           ; BSR set to: 0
   942                           ;main.c: 27:             dig_old = digital;
   943  002298  C0BA  F0B8         	movff	main@digital,main@dig_old
   944  00229C  C0BB  F0B9         	movff	main@digital+1,main@dig_old+1
   945                           
   946                           ; BSR set to: 0
   947                           ;main.c: 28:             voltage= digital*((float)5/(float)1023);
   948  0022A0  C0BA  F001         	movff	main@digital,___xxtofl@val
   949  0022A4  C0BB  F002         	movff	main@digital+1,___xxtofl@val+1
   950  0022A8  0E00               	movlw	0
   951  0022AA  BE02               	btfsc	___xxtofl@val+1,7,c
   952  0022AC  0EFF               	movlw	-1
   953  0022AE  6E03               	movwf	___xxtofl@val+2,c
   954  0022B0  6E04               	movwf	___xxtofl@val+3,c
   955  0022B2  0E01               	movlw	1
   956  0022B4  EC93  F010         	call	___xxtofl
   957  0022B8  C001  F00F         	movff	?___xxtofl,___flmul@b
   958  0022BC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   959  0022C0  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   960  0022C4  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   961  0022C8  0E0A               	movlw	10
   962  0022CA  6E13               	movwf	___flmul@a,c
   963  0022CC  0E28               	movlw	40
   964  0022CE  6E14               	movwf	___flmul@a+1,c
   965  0022D0  0EA0               	movlw	160
   966  0022D2  6E15               	movwf	___flmul@a+2,c
   967  0022D4  0E3B               	movlw	59
   968  0022D6  6E16               	movwf	___flmul@a+3,c
   969  0022D8  ECA5  F00A         	call	___flmul	;wreg free
   970  0022DC  C00F  F0B4         	movff	?___flmul,main@voltage
   971  0022E0  C010  F0B5         	movff	?___flmul+1,main@voltage+1
   972  0022E4  C011  F0B6         	movff	?___flmul+2,main@voltage+2
   973  0022E8  C012  F0B7         	movff	?___flmul+3,main@voltage+3
   974                           
   975                           ;main.c: 31:             sprintf(data,"%.2f",voltage);
   976  0022EC  0EAA               	movlw	low main@data
   977  0022EE  0100               	movlb	0	; () banked
   978  0022F0  6F98               	movwf	sprintf@s& (0+255),b
   979  0022F2  0E00               	movlw	high main@data
   980  0022F4  6F99               	movwf	(sprintf@s+1)& (0+255),b
   981  0022F6  0E0F               	movlw	low STR_1
   982  0022F8  6F9A               	movwf	sprintf@fmt& (0+255),b
   983  0022FA  0E08               	movlw	high STR_1
   984  0022FC  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
   985  0022FE  C0B4  F09C         	movff	main@voltage,?_sprintf+4
   986  002302  C0B5  F09D         	movff	main@voltage+1,?_sprintf+5
   987  002306  C0B6  F09E         	movff	main@voltage+2,?_sprintf+6
   988  00230A  C0B7  F09F         	movff	main@voltage+3,?_sprintf+7
   989  00230E  ECE3  F014         	call	_sprintf	;wreg free
   990                           
   991                           ;main.c: 33:             strcat(data," Volt");
   992  002312  0EAA               	movlw	low main@data
   993  002314  6E0F               	movwf	strcat@dest,c
   994  002316  0E00               	movlw	high main@data
   995  002318  6E10               	movwf	strcat@dest+1,c
   996  00231A  0E09               	movlw	low STR_2
   997  00231C  6E11               	movwf	strcat@src,c
   998  00231E  0E08               	movlw	high STR_2
   999  002320  6E12               	movwf	strcat@src+1,c
  1000  002322  ECC9  F016         	call	_strcat	;wreg free
  1001                           
  1002                           ;main.c: 34:             send_string(1,4,"voltage");
  1003  002326  0E04               	movlw	4
  1004  002328  6E0A               	movwf	send_string@col,c
  1005  00232A  0E01               	movlw	low STR_3
  1006  00232C  6E0B               	movwf	send_string@string,c
  1007  00232E  0E08               	movlw	high STR_3
  1008  002330  6E0C               	movwf	send_string@string+1,c
  1009  002332  0E01               	movlw	1
  1010  002334  EC44  F014         	call	_send_string
  1011                           
  1012                           ;main.c: 35:             send_string(2,4,data);
  1013  002338  0E04               	movlw	4
  1014  00233A  6E0A               	movwf	send_string@col,c
  1015  00233C  0EAA               	movlw	low main@data
  1016  00233E  6E0B               	movwf	send_string@string,c
  1017  002340  0E00               	movlw	high main@data
  1018  002342  6E0C               	movwf	send_string@string+1,c
  1019  002344  0E02               	movlw	2
  1020  002346  EC44  F014         	call	_send_string
  1021  00234A  D794               	goto	l3961
  1022  00234C                     __end_of_main:
  1023                           	opt callstack 0
  1024                           
  1025 ;; *************** function _strcat *****************
  1026 ;; Defined at:
  1027 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcat.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  dest            2   14[COMRAM] PTR unsigned char 
  1030 ;;		 -> main@data(10), 
  1031 ;;  src             2   16[COMRAM] PTR const unsigned char 
  1032 ;;		 -> STR_2(6), 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;		None
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  2   14[COMRAM] PTR unsigned char 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1044 ;;      Params:         4       0       0       0       0       0       0       0       0
  1045 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1047 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1048 ;;Total ram usage:        4 bytes
  1049 ;; Hardware stack levels used:    1
  1050 ;; Hardware stack levels required when called:    1
  1051 ;; This function calls:
  1052 ;;		_strcpy
  1053 ;;		_strlen
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text1
  1060  002D92                     __ptext1:
  1061                           	opt callstack 0
  1062  002D92                     _strcat:
  1063                           	opt callstack 29
  1064                           
  1065                           ;incstack = 0
  1066  002D92  C00F  F001         	movff	strcat@dest,strlen@s
  1067  002D96  C010  F002         	movff	strcat@dest+1,strlen@s+1
  1068  002D9A  ECA1  F016         	call	_strlen	;wreg free
  1069  002D9E  5001               	movf	?_strlen,w,c
  1070  002DA0  240F               	addwf	strcat@dest,w,c
  1071  002DA2  6E05               	movwf	strcpy@dest,c
  1072  002DA4  5002               	movf	?_strlen+1,w,c
  1073  002DA6  2010               	addwfc	strcat@dest+1,w,c
  1074  002DA8  6E06               	movwf	strcpy@dest+1,c
  1075  002DAA  C011  F007         	movff	strcat@src,strcpy@src
  1076  002DAE  C012  F008         	movff	strcat@src+1,strcpy@src+1
  1077  002DB2  EC0C  F015         	call	_strcpy	;wreg free
  1078  002DB6  0012               	return		;funcret
  1079  002DB8                     __end_of_strcat:
  1080                           	opt callstack 0
  1081                           
  1082 ;; *************** function _sprintf *****************
  1083 ;; Defined at:
  1084 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  s               2   56[BANK0 ] PTR unsigned char 
  1087 ;;		 -> main@data(10), 
  1088 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1089 ;;		 -> STR_1(5), 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  f               6   68[BANK0 ] struct _IO_FILE
  1092 ;;  ap              2   66[BANK0 ] PTR void [1]
  1093 ;;		 -> ?_sprintf(2), 
  1094 ;;  ret             2    0        int 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  2   56[BANK0 ] int 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1104 ;;      Params:         0       8       0       0       0       0       0       0       0
  1105 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1107 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1108 ;;Total ram usage:       18 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; Hardware stack levels required when called:    7
  1111 ;; This function calls:
  1112 ;;		_vfprintf
  1113 ;; This function is called by:
  1114 ;;		_main
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text2
  1119  0029C6                     __ptext2:
  1120                           	opt callstack 0
  1121  0029C6                     _sprintf:
  1122                           	opt callstack 23
  1123                           
  1124                           ;incstack = 0
  1125  0029C6  0E9C               	movlw	low (?_sprintf+4)
  1126  0029C8  0100               	movlb	0	; () banked
  1127  0029CA  6FA2               	movwf	sprintf@ap& (0+255),b
  1128  0029CC  0E00               	movlw	high (?_sprintf+4)
  1129  0029CE  6FA3               	movwf	(sprintf@ap+1)& (0+255),b
  1130  0029D0  C098  F0A4         	movff	sprintf@s,sprintf@f
  1131  0029D4  C099  F0A5         	movff	sprintf@s+1,sprintf@f+1
  1132                           
  1133                           ; BSR set to: 0
  1134  0029D8  0E00               	movlw	0
  1135  0029DA  6FA7               	movwf	(sprintf@f+3)& (0+255),b
  1136  0029DC  0E00               	movlw	0
  1137  0029DE  6FA6               	movwf	(sprintf@f+2)& (0+255),b
  1138                           
  1139                           ; BSR set to: 0
  1140  0029E0  0E00               	movlw	0
  1141  0029E2  6FA9               	movwf	(sprintf@f+5)& (0+255),b
  1142  0029E4  0E00               	movlw	0
  1143  0029E6  6FA8               	movwf	(sprintf@f+4)& (0+255),b
  1144                           
  1145                           ; BSR set to: 0
  1146  0029E8  0EA4               	movlw	low sprintf@f
  1147  0029EA  6E56               	movwf	vfprintf@fp,c
  1148  0029EC  0E00               	movlw	high sprintf@f
  1149  0029EE  6E57               	movwf	vfprintf@fp+1,c
  1150  0029F0  C09A  F058         	movff	sprintf@fmt,vfprintf@fmt
  1151  0029F4  C09B  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1152  0029F8  0EA2               	movlw	low sprintf@ap
  1153  0029FA  6E5A               	movwf	vfprintf@ap,c
  1154  0029FC  0E00               	movlw	high sprintf@ap
  1155  0029FE  6E5B               	movwf	vfprintf@ap+1,c
  1156  002A00  ECB8  F014         	call	_vfprintf	;wreg free
  1157  002A04  0100               	movlb	0	; () banked
  1158  002A06  51A6               	movf	(sprintf@f+2)& (0+255),w,b
  1159  002A08  2598               	addwf	sprintf@s& (0+255),w,b
  1160  002A0A  6ED9               	movwf	fsr2l,c
  1161  002A0C  51A7               	movf	(sprintf@f+3)& (0+255),w,b
  1162  002A0E  2199               	addwfc	(sprintf@s+1)& (0+255),w,b
  1163  002A10  6EDA               	movwf	fsr2h,c
  1164  002A12  0E00               	movlw	0
  1165  002A14  6EDF               	movwf	indf2,c
  1166                           
  1167                           ; BSR set to: 0
  1168  002A16  0012               	return		;funcret
  1169  002A18                     __end_of_sprintf:
  1170                           	opt callstack 0
  1171                           
  1172 ;; *************** function _vfprintf *****************
  1173 ;; Defined at:
  1174 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1177 ;;		 -> sprintf@f(6), 
  1178 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1179 ;;		 -> STR_1(5), 
  1180 ;;  ap              2   89[COMRAM] PTR PTR void 
  1181 ;;		 -> sprintf@ap(2), 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1184 ;;		 -> STR_1(5), 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  2   85[COMRAM] int 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1194 ;;      Params:         6       0       0       0       0       0       0       0       0
  1195 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1197 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1198 ;;Total ram usage:        8 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    6
  1201 ;; This function calls:
  1202 ;;		_vfpfcnvrt
  1203 ;; This function is called by:
  1204 ;;		_sprintf
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text3
  1209  002970                     __ptext3:
  1210                           	opt callstack 0
  1211  002970                     _vfprintf:
  1212                           	opt callstack 23
  1213                           
  1214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;incstack = 0
  1218  002970  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1219  002974  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1220                           
  1221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1222  002978  0E00               	movlw	0
  1223  00297A  0100               	movlb	0	; () banked
  1224  00297C  6FC5               	movwf	(_nout+1)& (0+255),b
  1225  00297E  0E00               	movlw	0
  1226  002980  6FC4               	movwf	_nout& (0+255),b
  1227                           
  1228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1229  002982  D013               	goto	l3843
  1230  002984                     l3841:
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1234  002984  C056  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1235  002988  C057  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1236  00298C  0E5C               	movlw	low vfprintf@cfmt
  1237  00298E  6E42               	movwf	vfpfcnvrt@fmt,c
  1238  002990  0E00               	movlw	high vfprintf@cfmt
  1239  002992  6E43               	movwf	vfpfcnvrt@fmt+1,c
  1240  002994  C05A  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1241  002998  C05B  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1242  00299C  ECD3  F008         	call	_vfpfcnvrt	;wreg free
  1243  0029A0  5040               	movf	?_vfpfcnvrt,w,c
  1244  0029A2  0100               	movlb	0	; () banked
  1245  0029A4  27C4               	addwf	_nout& (0+255),f,b
  1246  0029A6  5041               	movf	?_vfpfcnvrt+1,w,c
  1247  0029A8  23C5               	addwfc	(_nout+1)& (0+255),f,b
  1248  0029AA                     l3843:
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1252  0029AA  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1253  0029AE  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1254  0029B2                     	if	0	;tblptru may be non-zero
  1255  0029B2                     	endif
  1256  0029B2                     	if	0	;tblptru may be non-zero
  1257  0029B2                     	endif
  1258  0029B2  0008               	tblrd		*
  1259  0029B4  50F5               	movf	tablat,w,c
  1260  0029B6  0900               	iorlw	0
  1261  0029B8  A4D8               	btfss	status,2,c
  1262  0029BA  D7E4               	goto	l3841
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1266  0029BC  C0C4  F056         	movff	_nout,?_vfprintf
  1267  0029C0  C0C5  F057         	movff	_nout+1,?_vfprintf+1
  1268                           
  1269                           ; BSR set to: 0
  1270  0029C4  0012               	return		;funcret
  1271  0029C6                     __end_of_vfprintf:
  1272                           	opt callstack 0
  1273                           
  1274 ;; *************** function _vfpfcnvrt *****************
  1275 ;; Defined at:
  1276 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1279 ;;		 -> sprintf@f(6), 
  1280 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1281 ;;		 -> vfprintf@cfmt(2), 
  1282 ;;  ap              2   67[COMRAM] PTR PTR void 
  1283 ;;		 -> sprintf@ap(2), 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  llu             8    0        unsigned long long 
  1286 ;;  ll              8    0        long long 
  1287 ;;  f               4   77[COMRAM] long long 
  1288 ;;  ct              3   81[COMRAM] unsigned char [3]
  1289 ;;  vp              3    0        PTR void 
  1290 ;;  cp              3    0        PTR unsigned char 
  1291 ;;  i               2    0        int 
  1292 ;;  done            2    0        int 
  1293 ;;  c               1   84[COMRAM] unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  2   63[COMRAM] int 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1303 ;;      Params:         6       0       0       0       0       0       0       0       0
  1304 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1305 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1306 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1307 ;;Total ram usage:       22 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    5
  1310 ;; This function calls:
  1311 ;;		_atoi
  1312 ;;		_efgtoa
  1313 ;;		_fputc
  1314 ;;		_isdigit
  1315 ;;		_isupper
  1316 ;;		_strncmp
  1317 ;;		_tolower
  1318 ;; This function is called by:
  1319 ;;		_vfprintf
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text4
  1324  0011A6                     __ptext4:
  1325                           	opt callstack 0
  1326  0011A6                     _vfpfcnvrt:
  1327                           	opt callstack 23
  1328                           
  1329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;incstack = 0
  1333  0011A6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1334  0011AA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1335  0011AE  CFDE FFF6          	movff	postinc2,tblptrl
  1336  0011B2  CFDD FFF7          	movff	postdec2,tblptrh
  1337  0011B6                     	if	0	;tblptru may be non-zero
  1338  0011B6                     	endif
  1339  0011B6                     	if	0	;tblptru may be non-zero
  1340  0011B6                     	endif
  1341  0011B6  0008               	tblrd		*
  1342  0011B8  50F5               	movf	tablat,w,c
  1343  0011BA  0A25               	xorlw	37
  1344  0011BC  A4D8               	btfss	status,2,c
  1345  0011BE  D1AB               	goto	l3781
  1346                           
  1347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1348  0011C0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1349  0011C4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1350  0011C8  2ADE               	incf	postinc2,f,c
  1351  0011CA  0E00               	movlw	0
  1352  0011CC  22DD               	addwfc	postdec2,f,c
  1353                           
  1354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1355  0011CE  0E00               	movlw	0
  1356  0011D0  0100               	movlb	0	; () banked
  1357  0011D2  6FC7               	movwf	(_width+1)& (0+255),b
  1358  0011D4  0E00               	movlw	0
  1359  0011D6  6FC6               	movwf	_width& (0+255),b
  1360  0011D8  C0C6  F05E         	movff	_width,_flags
  1361  0011DC  C0C7  F05F         	movff	_width+1,_flags+1
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1365  0011E0  69C8               	setf	_prec& (0+255),b
  1366  0011E2  69C9               	setf	(_prec+1)& (0+255),b
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1370  0011E4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1371  0011E8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1372  0011EC  CFDE FFF6          	movff	postinc2,tblptrl
  1373  0011F0  CFDD FFF7          	movff	postdec2,tblptrh
  1374  0011F4                     	if	0	;tblptru may be non-zero
  1375  0011F4                     	endif
  1376  0011F4                     	if	0	;tblptru may be non-zero
  1377  0011F4                     	endif
  1378  0011F4  0008               	tblrd		*
  1379  0011F6  50F5               	movf	tablat,w,c
  1380  0011F8  0A2E               	xorlw	46
  1381  0011FA  A4D8               	btfss	status,2,c
  1382  0011FC  D06D               	goto	u4630
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1386  0011FE  0E00               	movlw	0
  1387  001200  6FC9               	movwf	(_prec+1)& (0+255),b
  1388  001202  0E00               	movlw	0
  1389  001204  6FC8               	movwf	_prec& (0+255),b
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1393  001206  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1394  00120A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1395  00120E  2ADE               	incf	postinc2,f,c
  1396  001210  0E00               	movlw	0
  1397  001212  22DD               	addwfc	postdec2,f,c
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1401  001214  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1402  001218  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1403  00121C  CFDE FFF6          	movff	postinc2,tblptrl
  1404  001220  CFDD FFF7          	movff	postdec2,tblptrh
  1405  001224                     	if	0	;tblptru may be non-zero
  1406  001224                     	endif
  1407  001224                     	if	0	;tblptru may be non-zero
  1408  001224                     	endif
  1409  001224  0008               	tblrd		*
  1410  001226  50F5               	movf	tablat,w,c
  1411  001228  0A2A               	xorlw	42
  1412  00122A  A4D8               	btfss	status,2,c
  1413  00122C  D01C               	goto	l3717
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1417  00122E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1418  001232  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1419  001236  2ADE               	incf	postinc2,f,c
  1420  001238  0E00               	movlw	0
  1421  00123A  22DD               	addwfc	postdec2,f,c
  1422                           
  1423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1424  00123C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1425  001240  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1426  001244  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1427  001248  0E02               	movlw	2
  1428  00124A  26DE               	addwf	postinc2,f,c
  1429  00124C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1430  001250  0E00               	movlw	0
  1431  001252  22DD               	addwfc	postdec2,f,c
  1432  001254  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1433  001258  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1434  00125C  CFDE F0C8          	movff	postinc2,_prec
  1435  001260  CFDD F0C9          	movff	postdec2,_prec+1
  1436                           
  1437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1438  001264  D039               	goto	u4630
  1439  001266                     l3717:
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1443  001266  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1444  00126A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1445  00126E  CFDE F008          	movff	postinc2,atoi@s
  1446  001272  CFDD F009          	movff	postdec2,atoi@s+1
  1447  001276  ECF3  F00F         	call	_atoi	;wreg free
  1448  00127A  C008  F0C8         	movff	?_atoi,_prec
  1449  00127E  C009  F0C9         	movff	?_atoi+1,_prec+1
  1450                           
  1451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1452  001282  D007               	goto	l3721
  1453  001284                     l3719:
  1454                           
  1455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  1456  001284  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1457  001288  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1458  00128C  2ADE               	incf	postinc2,f,c
  1459  00128E  0E00               	movlw	0
  1460  001290  22DD               	addwfc	postdec2,f,c
  1461  001292                     l3721:
  1462  001292  0ED0               	movlw	208
  1463  001294  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  1464  001296  0EFF               	movlw	255
  1465  001298  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1466  00129A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1467  00129E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1468  0012A2  CFDE FFF6          	movff	postinc2,tblptrl
  1469  0012A6  CFDD FFF7          	movff	postdec2,tblptrh
  1470  0012AA                     	if	0	;tblptru may be non-zero
  1471  0012AA                     	endif
  1472  0012AA                     	if	0	;tblptru may be non-zero
  1473  0012AA                     	endif
  1474  0012AA  0008               	tblrd		*
  1475  0012AC  50F5               	movf	tablat,w,c
  1476  0012AE  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1477  0012B0  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1478  0012B2  5046               	movf	??_vfpfcnvrt,w,c
  1479  0012B4  2648               	addwf	??_vfpfcnvrt+2,f,c
  1480  0012B6  5047               	movf	??_vfpfcnvrt+1,w,c
  1481  0012B8  2249               	addwfc	??_vfpfcnvrt+3,f,c
  1482  0012BA  5049               	movf	??_vfpfcnvrt+3,w,c
  1483  0012BC  E106               	bnz	u4610
  1484  0012BE  0E0A               	movlw	10
  1485  0012C0  5C48               	subwf	??_vfpfcnvrt+2,w,c
  1486  0012C2  B0D8               	btfsc	status,0,c
  1487  0012C4  D002               	goto	u4610
  1488  0012C6  0E01               	movlw	1
  1489  0012C8  D001               	goto	u4620
  1490  0012CA                     u4610:
  1491  0012CA  0E00               	movlw	0
  1492  0012CC                     u4620:
  1493  0012CC  6E4A               	movwf	_vfpfcnvrt$229,c
  1494  0012CE  6A4B               	clrf	_vfpfcnvrt$229+1,c
  1495  0012D0  504A               	movf	_vfpfcnvrt$229,w,c
  1496  0012D2  104B               	iorwf	_vfpfcnvrt$229+1,w,c
  1497  0012D4  A4D8               	btfss	status,2,c
  1498  0012D6  D7D6               	goto	l3719
  1499  0012D8                     u4630:
  1500                           
  1501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  1502  0012D8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1503  0012DC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1504  0012E0  CFDE FFF6          	movff	postinc2,tblptrl
  1505  0012E4  CFDD FFF7          	movff	postdec2,tblptrh
  1506  0012E8                     	if	0	;tblptru may be non-zero
  1507  0012E8                     	endif
  1508  0012E8                     	if	0	;tblptru may be non-zero
  1509  0012E8                     	endif
  1510  0012E8  0008               	tblrd		*
  1511  0012EA  50F5               	movf	tablat,w,c
  1512  0012EC  6E07               	movwf	tolower@c,c
  1513  0012EE  6A08               	clrf	tolower@c+1,c
  1514  0012F0  EC85  F015         	call	_tolower	;wreg free
  1515  0012F4  5007               	movf	?_tolower,w,c
  1516  0012F6  6E52               	movwf	vfpfcnvrt@ct,c
  1517                           
  1518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  1519  0012F8  5052               	movf	vfpfcnvrt@ct,w,c
  1520  0012FA  B4D8               	btfsc	status,2,c
  1521  0012FC  D033               	goto	l3737
  1522                           
  1523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  1524  0012FE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1525  001302  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1526  001306  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1527  00130A  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1528  00130E  0E01               	movlw	1
  1529  001310  2646               	addwf	??_vfpfcnvrt,f,c
  1530  001312  0E00               	movlw	0
  1531  001314  2247               	addwfc	??_vfpfcnvrt+1,f,c
  1532  001316  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1533  00131A  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1534  00131E                     	if	0	;tblptru may be non-zero
  1535  00131E                     	endif
  1536  00131E                     	if	0	;tblptru may be non-zero
  1537  00131E                     	endif
  1538  00131E  0008               	tblrd		*
  1539  001320  50F5               	movf	tablat,w,c
  1540  001322  6E07               	movwf	tolower@c,c
  1541  001324  6A08               	clrf	tolower@c+1,c
  1542  001326  EC85  F015         	call	_tolower	;wreg free
  1543  00132A  5007               	movf	?_tolower,w,c
  1544  00132C  6E53               	movwf	vfpfcnvrt@ct+1,c
  1545                           
  1546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  1547  00132E  5053               	movf	vfpfcnvrt@ct+1,w,c
  1548  001330  B4D8               	btfsc	status,2,c
  1549  001332  D018               	goto	l3737
  1550                           
  1551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  1552  001334  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1553  001338  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1554  00133C  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1555  001340  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1556  001344  0E02               	movlw	2
  1557  001346  2646               	addwf	??_vfpfcnvrt,f,c
  1558  001348  0E00               	movlw	0
  1559  00134A  2247               	addwfc	??_vfpfcnvrt+1,f,c
  1560  00134C  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1561  001350  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1562  001354                     	if	0	;tblptru may be non-zero
  1563  001354                     	endif
  1564  001354                     	if	0	;tblptru may be non-zero
  1565  001354                     	endif
  1566  001354  0008               	tblrd		*
  1567  001356  50F5               	movf	tablat,w,c
  1568  001358  6E07               	movwf	tolower@c,c
  1569  00135A  6A08               	clrf	tolower@c+1,c
  1570  00135C  EC85  F015         	call	_tolower	;wreg free
  1571  001360  5007               	movf	?_tolower,w,c
  1572  001362  6E54               	movwf	vfpfcnvrt@ct+2,c
  1573  001364                     l3737:
  1574                           
  1575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  1576  001364  0E66               	movlw	102
  1577  001366  1852               	xorwf	vfpfcnvrt@ct,w,c
  1578  001368  A4D8               	btfss	status,2,c
  1579  00136A  D03F               	goto	l3749
  1580                           
  1581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  1582  00136C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1583  001370  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1584  001374  CFDE FFF6          	movff	postinc2,tblptrl
  1585  001378  CFDD FFF7          	movff	postdec2,tblptrh
  1586  00137C                     	if	0	;tblptru may be non-zero
  1587  00137C                     	endif
  1588  00137C                     	if	0	;tblptru may be non-zero
  1589  00137C                     	endif
  1590  00137C  0008               	tblrd		*
  1591  00137E  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  1592                           
  1593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  1594  001382  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1595  001386  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1596  00138A  2ADE               	incf	postinc2,f,c
  1597  00138C  0E00               	movlw	0
  1598  00138E  22DD               	addwfc	postdec2,f,c
  1599                           
  1600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1601  001390  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1602  001394  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1603  001398  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1604  00139C  0E04               	movlw	4
  1605  00139E  26DE               	addwf	postinc2,f,c
  1606  0013A0  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1607  0013A4  0E00               	movlw	0
  1608  0013A6  22DD               	addwfc	postdec2,f,c
  1609  0013A8  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1610  0013AC  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1611  0013B0  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  1612  0013B4  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  1613  0013B8  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  1614  0013BC  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  1615  0013C0                     l3745:
  1616                           
  1617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  1618  0013C0  C040  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  1619  0013C4  C041  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1620  0013C8  C04E  F036         	movff	vfpfcnvrt@f,efgtoa@f
  1621  0013CC  C04F  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1622  0013D0  C050  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1623  0013D4  C051  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1624  0013D8  C055  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  1625  0013DC  EC14  F004         	call	_efgtoa	;wreg free
  1626  0013E0  C034  F040         	movff	?_efgtoa,?_vfpfcnvrt
  1627  0013E4  C035  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1628  0013E8  0012               	return	
  1629  0013EA                     l3749:
  1630                           
  1631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1632  0013EA  0E52               	movlw	low vfpfcnvrt@ct
  1633  0013EC  6E01               	movwf	strncmp@_l,c
  1634  0013EE  0E00               	movlw	high vfpfcnvrt@ct
  1635  0013F0  6E02               	movwf	strncmp@_l+1,c
  1636  0013F2  0E24               	movlw	low STR_12
  1637  0013F4  6E03               	movwf	strncmp@_r,c
  1638  0013F6  0E08               	movlw	high STR_12
  1639  0013F8  6E04               	movwf	strncmp@_r+1,c
  1640  0013FA  0E00               	movlw	0
  1641  0013FC  6E06               	movwf	strncmp@n+1,c
  1642  0013FE  0E02               	movlw	2
  1643  001400  6E05               	movwf	strncmp@n,c
  1644  001402  ECD1  F012         	call	_strncmp	;wreg free
  1645  001406  5001               	movf	?_strncmp,w,c
  1646  001408  1002               	iorwf	?_strncmp+1,w,c
  1647  00140A  A4D8               	btfss	status,2,c
  1648  00140C  D055               	goto	l3765
  1649                           
  1650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1651  00140E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1652  001412  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1653  001416  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1654  00141A  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1655  00141E  0E01               	movlw	1
  1656  001420  2646               	addwf	??_vfpfcnvrt,f,c
  1657  001422  0E00               	movlw	0
  1658  001424  2247               	addwfc	??_vfpfcnvrt+1,f,c
  1659  001426  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1660  00142A  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1661  00142E                     	if	0	;tblptru may be non-zero
  1662  00142E                     	endif
  1663  00142E                     	if	0	;tblptru may be non-zero
  1664  00142E                     	endif
  1665  00142E  0008               	tblrd		*
  1666  001430  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  1667  001434  0EBF               	movlw	191
  1668  001436  6E46               	movwf	??_vfpfcnvrt& (0+255),c
  1669  001438  0EFF               	movlw	255
  1670  00143A  6E47               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1671  00143C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1672  001440  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1673  001444  CFDE FFF6          	movff	postinc2,tblptrl
  1674  001448  CFDD FFF7          	movff	postdec2,tblptrh
  1675  00144C                     	if	0	;tblptru may be non-zero
  1676  00144C                     	endif
  1677  00144C                     	if	0	;tblptru may be non-zero
  1678  00144C                     	endif
  1679  00144C  0008               	tblrd		*
  1680  00144E  50F5               	movf	tablat,w,c
  1681  001450  6E48               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1682  001452  6A49               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1683  001454  5046               	movf	??_vfpfcnvrt,w,c
  1684  001456  2648               	addwf	??_vfpfcnvrt+2,f,c
  1685  001458  5047               	movf	??_vfpfcnvrt+1,w,c
  1686  00145A  2249               	addwfc	??_vfpfcnvrt+3,f,c
  1687  00145C  5049               	movf	??_vfpfcnvrt+3,w,c
  1688  00145E  E106               	bnz	u4680
  1689  001460  0E1A               	movlw	26
  1690  001462  5C48               	subwf	??_vfpfcnvrt+2,w,c
  1691  001464  B0D8               	btfsc	status,0,c
  1692  001466  D002               	goto	u4680
  1693  001468  0E01               	movlw	1
  1694  00146A  D001               	goto	u4690
  1695  00146C                     u4680:
  1696  00146C  0E00               	movlw	0
  1697  00146E                     u4690:
  1698  00146E  6E4C               	movwf	_vfpfcnvrt$233,c
  1699  001470  6A4D               	clrf	_vfpfcnvrt$233+1,c
  1700  001472  504C               	movf	_vfpfcnvrt$233,w,c
  1701  001474  104D               	iorwf	_vfpfcnvrt$233+1,w,c
  1702                           
  1703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1704                           
  1705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  1706                           
  1707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1708  001476  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1709  00147A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1710  00147E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1711  001482  0E04               	movlw	4
  1712  001484  26DE               	addwf	postinc2,f,c
  1713  001486  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1714  00148A  0E00               	movlw	0
  1715  00148C  22DD               	addwfc	postdec2,f,c
  1716  00148E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1717  001492  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1718  001496  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  1719  00149A  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  1720  00149E  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  1721  0014A2  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  1722                           
  1723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1724                           
  1725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  1726  0014A6  0E02               	movlw	2
  1727  0014A8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1728  0014AC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1729  0014B0  26DE               	addwf	postinc2,f,c
  1730  0014B2  0E00               	movlw	0
  1731  0014B4  22DD               	addwfc	postdec2,f,c
  1732  0014B6  D784               	goto	l3745
  1733  0014B8                     l3765:
  1734                           
  1735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1736  0014B8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1737  0014BC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1738  0014C0  CFDE FFF6          	movff	postinc2,tblptrl
  1739  0014C4  CFDD FFF7          	movff	postdec2,tblptrh
  1740  0014C8                     	if	0	;tblptru may be non-zero
  1741  0014C8                     	endif
  1742  0014C8                     	if	0	;tblptru may be non-zero
  1743  0014C8                     	endif
  1744  0014C8  0008               	tblrd		*
  1745  0014CA  50F5               	movf	tablat,w,c
  1746  0014CC  0A25               	xorlw	37
  1747  0014CE  A4D8               	btfss	status,2,c
  1748  0014D0  D016               	goto	l3775
  1749                           
  1750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1751  0014D2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1752  0014D6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1753  0014DA  2ADE               	incf	postinc2,f,c
  1754  0014DC  0E00               	movlw	0
  1755  0014DE  22DD               	addwfc	postdec2,f,c
  1756                           
  1757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1758  0014E0  0E00               	movlw	0
  1759  0014E2  6E02               	movwf	fputc@c+1,c
  1760  0014E4  0E25               	movlw	37
  1761  0014E6  6E01               	movwf	fputc@c,c
  1762  0014E8  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1763  0014EC  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1764  0014F0  EC22  F013         	call	_fputc	;wreg free
  1765  0014F4                     l3771:
  1766                           
  1767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1768  0014F4  0E00               	movlw	0
  1769  0014F6  6E41               	movwf	?_vfpfcnvrt+1,c
  1770  0014F8  0E01               	movlw	1
  1771  0014FA  6E40               	movwf	?_vfpfcnvrt,c
  1772  0014FC  0012               	return	
  1773  0014FE                     l3775:
  1774                           
  1775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1776  0014FE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1777  001502  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1778  001506  2ADE               	incf	postinc2,f,c
  1779  001508  0E00               	movlw	0
  1780  00150A  22DD               	addwfc	postdec2,f,c
  1781                           
  1782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1783  00150C  0E00               	movlw	0
  1784  00150E  6E41               	movwf	?_vfpfcnvrt+1,c
  1785  001510  0E00               	movlw	0
  1786  001512  6E40               	movwf	?_vfpfcnvrt,c
  1787  001514  0012               	return	
  1788  001516                     l3781:
  1789                           
  1790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1791  001516  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1792  00151A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1793  00151E  CFDE FFF6          	movff	postinc2,tblptrl
  1794  001522  CFDD FFF7          	movff	postdec2,tblptrh
  1795  001526                     	if	0	;tblptru may be non-zero
  1796  001526                     	endif
  1797  001526                     	if	0	;tblptru may be non-zero
  1798  001526                     	endif
  1799  001526  0008               	tblrd		*
  1800  001528  50F5               	movf	tablat,w,c
  1801  00152A  6E01               	movwf	fputc@c,c
  1802  00152C  6A02               	clrf	fputc@c+1,c
  1803  00152E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1804  001532  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1805  001536  EC22  F013         	call	_fputc	;wreg free
  1806                           
  1807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1808  00153A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1809  00153E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1810  001542  2ADE               	incf	postinc2,f,c
  1811  001544  0E00               	movlw	0
  1812  001546  22DD               	addwfc	postdec2,f,c
  1813  001548  D7D5               	goto	l3771
  1814  00154A                     __end_of_vfpfcnvrt:
  1815                           	opt callstack 0
  1816                           
  1817 ;; *************** function _strncmp *****************
  1818 ;; Defined at:
  1819 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1822 ;;		 -> vfpfcnvrt@ct(3), 
  1823 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1824 ;;		 -> STR_14(3), 
  1825 ;;  n               2    4[COMRAM] unsigned int 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1828 ;;		 -> STR_14(3), 
  1829 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1830 ;;		 -> vfpfcnvrt@ct(3), 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  2    0[COMRAM] int 
  1833 ;; Registers used:
  1834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1840 ;;      Params:         6       0       0       0       0       0       0       0       0
  1841 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1842 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1843 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1844 ;;Total ram usage:       11 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_vfpfcnvrt
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text5
  1854  0025A2                     __ptext5:
  1855                           	opt callstack 0
  1856  0025A2                     _strncmp:
  1857                           	opt callstack 27
  1858                           
  1859                           ;incstack = 0
  1860  0025A2  C001  F008         	movff	strncmp@_l,strncmp@l
  1861  0025A6  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1862  0025AA  C003  F00A         	movff	strncmp@_r,strncmp@r
  1863  0025AE  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1864  0025B2  0605               	decf	strncmp@n,f,c
  1865  0025B4  A0D8               	btfss	status,0,c
  1866  0025B6  0606               	decf	strncmp@n+1,f,c
  1867  0025B8  2805               	incf	strncmp@n,w,c
  1868  0025BA  E10F               	bnz	l3671
  1869  0025BC  2806               	incf	strncmp@n+1,w,c
  1870  0025BE  A4D8               	btfss	status,2,c
  1871  0025C0  D00C               	goto	l3671
  1872  0025C2  0E00               	movlw	0
  1873  0025C4  6E02               	movwf	?_strncmp+1,c
  1874  0025C6  0E00               	movlw	0
  1875  0025C8  6E01               	movwf	?_strncmp,c
  1876  0025CA  0012               	return	
  1877  0025CC                     l3669:
  1878  0025CC  4A08               	infsnz	strncmp@l,f,c
  1879  0025CE  2A09               	incf	strncmp@l+1,f,c
  1880  0025D0  4A0A               	infsnz	strncmp@r,f,c
  1881  0025D2  2A0B               	incf	strncmp@r+1,f,c
  1882  0025D4  0605               	decf	strncmp@n,f,c
  1883  0025D6  A0D8               	btfss	status,0,c
  1884  0025D8  0606               	decf	strncmp@n+1,f,c
  1885  0025DA                     l3671:
  1886  0025DA  C008  FFD9         	movff	strncmp@l,fsr2l
  1887  0025DE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1888  0025E2  50DF               	movf	indf2,w,c
  1889  0025E4  B4D8               	btfsc	status,2,c
  1890  0025E6  D01C               	goto	u4550
  1891  0025E8  C00A  FFF6         	movff	strncmp@r,tblptrl
  1892  0025EC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1893  0025F0                     	if	0	;tblptru may be non-zero
  1894  0025F0                     	endif
  1895  0025F0                     	if	0	;tblptru may be non-zero
  1896  0025F0                     	endif
  1897  0025F0  0008               	tblrd		*
  1898  0025F2  50F5               	movf	tablat,w,c
  1899  0025F4  0900               	iorlw	0
  1900  0025F6  B4D8               	btfsc	status,2,c
  1901  0025F8  D013               	goto	u4550
  1902  0025FA  5005               	movf	strncmp@n,w,c
  1903  0025FC  1006               	iorwf	strncmp@n+1,w,c
  1904  0025FE  B4D8               	btfsc	status,2,c
  1905  002600  D00F               	goto	u4550
  1906  002602  C008  FFD9         	movff	strncmp@l,fsr2l
  1907  002606  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1908  00260A  50DF               	movf	indf2,w,c
  1909  00260C  6E07               	movwf	??_strncmp& (0+255),c
  1910  00260E  C00A  FFF6         	movff	strncmp@r,tblptrl
  1911  002612  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1912  002616                     	if	0	;tblptru may be non-zero
  1913  002616                     	endif
  1914  002616                     	if	0	;tblptru may be non-zero
  1915  002616                     	endif
  1916  002616  0008               	tblrd		*
  1917  002618  50F5               	movf	tablat,w,c
  1918  00261A  1807               	xorwf	??_strncmp,w,c
  1919  00261C  B4D8               	btfsc	status,2,c
  1920  00261E  D7D6               	goto	l3669
  1921  002620                     u4550:
  1922  002620  C008  FFD9         	movff	strncmp@l,fsr2l
  1923  002624  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1924  002628  50DF               	movf	indf2,w,c
  1925  00262A  6E07               	movwf	??_strncmp& (0+255),c
  1926  00262C  C00A  FFF6         	movff	strncmp@r,tblptrl
  1927  002630  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1928  002634                     	if	0	;tblptru may be non-zero
  1929  002634                     	endif
  1930  002634                     	if	0	;tblptru may be non-zero
  1931  002634                     	endif
  1932  002634  0008               	tblrd		*
  1933  002636  50F5               	movf	tablat,w,c
  1934  002638  5C07               	subwf	??_strncmp,w,c
  1935  00263A  6E01               	movwf	?_strncmp,c
  1936  00263C  6A02               	clrf	?_strncmp+1,c
  1937  00263E  A0D8               	btfss	status,0,c
  1938  002640  0602               	decf	?_strncmp+1,f,c
  1939  002642  0012               	return		;funcret
  1940  002644                     __end_of_strncmp:
  1941                           	opt callstack 0
  1942                           
  1943 ;; *************** function _efgtoa *****************
  1944 ;; Defined at:
  1945 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  1948 ;;		 -> sprintf@f(6), 
  1949 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  1950 ;;  c               1   57[COMRAM] unsigned char 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  u               4   52[BANK0 ] unsigned char 
  1953 ;;  g               4   44[BANK0 ] unsigned char 
  1954 ;;  l               4   38[BANK0 ] unsigned char 
  1955 ;;  h               4   34[BANK0 ] unsigned char 
  1956 ;;  ou              4    0[BANK0 ] unsigned char 
  1957 ;;  n               2   50[BANK0 ] int 
  1958 ;;  e               2   48[BANK0 ] int 
  1959 ;;  i               2   42[BANK0 ] int 
  1960 ;;  w               2   31[BANK0 ] int 
  1961 ;;  p               2   28[BANK0 ] int 
  1962 ;;  sign            2   26[BANK0 ] int 
  1963 ;;  d               2   24[BANK0 ] int 
  1964 ;;  ne              2   22[BANK0 ] int 
  1965 ;;  m               2   20[BANK0 ] int 
  1966 ;;  pp              2   18[BANK0 ] int 
  1967 ;;  t               2   16[BANK0 ] int 
  1968 ;;  mode            1   33[BANK0 ] unsigned char 
  1969 ;;  nmode           1   30[BANK0 ] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  2   51[COMRAM] int 
  1972 ;; Registers used:
  1973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1979 ;;      Params:         7       0       0       0       0       0       0       0       0
  1980 ;;      Locals:         0      56       0       0       0       0       0       0       0
  1981 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1982 ;;      Totals:        12      56       0       0       0       0       0       0       0
  1983 ;;Total ram usage:       68 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    4
  1986 ;; This function calls:
  1987 ;;		___awdiv
  1988 ;;		___awmod
  1989 ;;		___fladd
  1990 ;;		___fldiv
  1991 ;;		___fleq
  1992 ;;		___flge
  1993 ;;		___flmul
  1994 ;;		___flneg
  1995 ;;		___flsub
  1996 ;;		___fltol
  1997 ;;		___fpclassifyf
  1998 ;;		_floorf
  1999 ;;		_isupper
  2000 ;;		_pad
  2001 ;;		_strcpy
  2002 ;;		_tolower
  2003 ;; This function is called by:
  2004 ;;		_vfpfcnvrt
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text6
  2009  000828                     __ptext6:
  2010                           	opt callstack 0
  2011  000828                     _efgtoa:
  2012                           	opt callstack 23
  2013                           
  2014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2015                           
  2016                           ;incstack = 0
  2017  000828  0E00               	movlw	0
  2018  00082A  0100               	movlb	0	; () banked
  2019  00082C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2020  00082E  0E00               	movlw	0
  2021  000830  6F7A               	movwf	efgtoa@sign& (0+255),b
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2025  000832  C036  F08C         	movff	efgtoa@f,efgtoa@g
  2026  000836  C037  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2027  00083A  C038  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2028  00083E  C039  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2032  000842  AF8F               	btfss	(efgtoa@g+3)& (0+255),7,b
  2033  000844  D016               	goto	l3333
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2037  000846  0E00               	movlw	0
  2038  000848  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2039  00084A  0E01               	movlw	1
  2040  00084C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2044  00084E  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2045  000852  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2046  000856  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2047  00085A  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2048  00085E  EC8A  F016         	call	___flneg	;wreg free
  2049  000862  C001  F08C         	movff	?___flneg,efgtoa@g
  2050  000866  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2051  00086A  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2052  00086E  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2053  000872                     l3333:
  2054                           
  2055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2056  000872  0E00               	movlw	0
  2057  000874  0100               	movlb	0	; () banked
  2058  000876  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2059  000878  0E00               	movlw	0
  2060  00087A  6F92               	movwf	efgtoa@n& (0+255),b
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2064  00087C  C0C6  F07F         	movff	_width,efgtoa@w
  2065  000880  C0C7  F080         	movff	_width+1,efgtoa@w+1
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2069  000884  517A               	movf	efgtoa@sign& (0+255),w,b
  2070  000886  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2071  000888  A4D8               	btfss	status,2,c
  2072  00088A  D002               	goto	u3940
  2073                           
  2074                           ; BSR set to: 0
  2075  00088C  A45E               	btfss	_flags,2,c
  2076  00088E  D013               	goto	l3353
  2077  000890                     u3940:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2081  000890  517A               	movf	efgtoa@sign& (0+255),w,b
  2082  000892  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2083  000894  A4D8               	btfss	status,2,c
  2084  000896  D004               	goto	l3345
  2085                           
  2086                           ; BSR set to: 0
  2087  000898  0E00               	movlw	0
  2088  00089A  6F65               	movwf	(_efgtoa$203+1)& (0+255),b
  2089  00089C  0E2B               	movlw	43
  2090  00089E  D003               	goto	L1
  2091  0008A0                     l3345:
  2092                           
  2093                           ; BSR set to: 0
  2094  0008A0  0E00               	movlw	0
  2095  0008A2  6F65               	movwf	(_efgtoa$203+1)& (0+255),b
  2096  0008A4  0E2D               	movlw	45
  2097  0008A6                     L1:
  2098  0008A6  6F64               	movwf	_efgtoa$203& (0+255),b
  2099                           
  2100                           ; BSR set to: 0
  2101  0008A8  C064  F100         	movff	_efgtoa$203,_dbuf
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2105  0008AC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2106  0008AE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2110  0008B0  077F               	decf	efgtoa@w& (0+255),f,b
  2111  0008B2  A0D8               	btfss	status,0,c
  2112  0008B4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2113  0008B6                     l3353:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2117  0008B6  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2118  0008BA  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2119  0008BE  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2120  0008C2  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2121  0008C6  EC0E  F012         	call	___fpclassifyf	;wreg free
  2122  0008CA  0401               	decf	?___fpclassifyf,w,c
  2123  0008CC  1002               	iorwf	?___fpclassifyf+1,w,c
  2124  0008CE  A4D8               	btfss	status,2,c
  2125  0008D0  D04C               	goto	l3371
  2126  0008D2  0EBF               	movlw	191
  2127  0008D4  6E3B               	movwf	??_efgtoa& (0+255),c
  2128  0008D6  0EFF               	movlw	255
  2129  0008D8  6E3C               	movwf	(??_efgtoa+1)& (0+255),c
  2130  0008DA  503A               	movf	efgtoa@c,w,c
  2131  0008DC  6E3D               	movwf	(??_efgtoa+2)& (0+255),c
  2132  0008DE  6A3E               	clrf	(??_efgtoa+3)& (0+255),c
  2133  0008E0  503B               	movf	??_efgtoa,w,c
  2134  0008E2  263D               	addwf	??_efgtoa+2,f,c
  2135  0008E4  503C               	movf	??_efgtoa+1,w,c
  2136  0008E6  223E               	addwfc	??_efgtoa+3,f,c
  2137  0008E8  503E               	movf	??_efgtoa+3,w,c
  2138  0008EA  E106               	bnz	u3970
  2139  0008EC  0E1A               	movlw	26
  2140  0008EE  5C3D               	subwf	??_efgtoa+2,w,c
  2141  0008F0  B0D8               	btfsc	status,0,c
  2142  0008F2  D002               	goto	u3970
  2143  0008F4  0E01               	movlw	1
  2144  0008F6  D001               	goto	u3980
  2145  0008F8                     u3970:
  2146  0008F8  0E00               	movlw	0
  2147  0008FA                     u3980:
  2148  0008FA  0100               	movlb	0	; () banked
  2149  0008FC  6F66               	movwf	_efgtoa$204& (0+255),b
  2150  0008FE  6B67               	clrf	(_efgtoa$204+1)& (0+255),b
  2151                           
  2152                           ; BSR set to: 0
  2153  000900  5166               	movf	_efgtoa$204& (0+255),w,b
  2154  000902  1167               	iorwf	(_efgtoa$204+1)& (0+255),w,b
  2155  000904  B4D8               	btfsc	status,2,c
  2156  000906  D00D               	goto	l3363
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2160  000908  0E00               	movlw	low _dbuf
  2161  00090A  2592               	addwf	efgtoa@n& (0+255),w,b
  2162  00090C  6E05               	movwf	strcpy@dest,c
  2163  00090E  0E01               	movlw	high _dbuf
  2164  000910  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2165  000912  6E06               	movwf	strcpy@dest+1,c
  2166  000914  0E14               	movlw	low STR_4
  2167  000916  6E07               	movwf	strcpy@src,c
  2168  000918  0E08               	movlw	high STR_4
  2169  00091A  6E08               	movwf	strcpy@src+1,c
  2170  00091C  EC0C  F015         	call	_strcpy	;wreg free
  2171                           
  2172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2173  000920  D00C               	goto	l3365
  2174  000922                     l3363:
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2178  000922  0E00               	movlw	low _dbuf
  2179  000924  2592               	addwf	efgtoa@n& (0+255),w,b
  2180  000926  6E05               	movwf	strcpy@dest,c
  2181  000928  0E01               	movlw	high _dbuf
  2182  00092A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2183  00092C  6E06               	movwf	strcpy@dest+1,c
  2184  00092E  0E1C               	movlw	low STR_5
  2185  000930  6E07               	movwf	strcpy@src,c
  2186  000932  0E08               	movlw	high STR_5
  2187  000934  6E08               	movwf	strcpy@src+1,c
  2188  000936  EC0C  F015         	call	_strcpy	;wreg free
  2189  00093A                     l3365:
  2190                           
  2191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2192  00093A  0100               	movlb	0	; () banked
  2193  00093C  0EFD               	movlw	253
  2194  00093E  277F               	addwf	efgtoa@w& (0+255),f,b
  2195  000940  0EFF               	movlw	255
  2196  000942  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2197  000944                     l3367:
  2198                           
  2199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2200  000944  C034  F011         	movff	efgtoa@fp,pad@fp
  2201  000948  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  2202  00094C  0E00               	movlw	low _dbuf
  2203  00094E  6E13               	movwf	pad@buf,c
  2204  000950  0E01               	movlw	high _dbuf
  2205  000952  6E14               	movwf	pad@buf+1,c
  2206  000954  C07F  F015         	movff	efgtoa@w,pad@p
  2207  000958  C080  F016         	movff	efgtoa@w+1,pad@p+1
  2208  00095C  EC72  F013         	call	_pad	;wreg free
  2209  000960  C011  F034         	movff	?_pad,?_efgtoa
  2210  000964  C012  F035         	movff	?_pad+1,?_efgtoa+1
  2211  000968  0012               	return	
  2212  00096A                     l3371:
  2213                           
  2214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2215  00096A  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2216  00096E  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2217  000972  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2218  000976  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2219  00097A  EC0E  F012         	call	___fpclassifyf	;wreg free
  2220  00097E  5001               	movf	?___fpclassifyf,w,c
  2221  000980  1002               	iorwf	?___fpclassifyf+1,w,c
  2222  000982  A4D8               	btfss	status,2,c
  2223  000984  D035               	goto	l3389
  2224  000986  0EBF               	movlw	191
  2225  000988  6E3B               	movwf	??_efgtoa& (0+255),c
  2226  00098A  0EFF               	movlw	255
  2227  00098C  6E3C               	movwf	(??_efgtoa+1)& (0+255),c
  2228  00098E  503A               	movf	efgtoa@c,w,c
  2229  000990  6E3D               	movwf	(??_efgtoa+2)& (0+255),c
  2230  000992  6A3E               	clrf	(??_efgtoa+3)& (0+255),c
  2231  000994  503B               	movf	??_efgtoa,w,c
  2232  000996  263D               	addwf	??_efgtoa+2,f,c
  2233  000998  503C               	movf	??_efgtoa+1,w,c
  2234  00099A  223E               	addwfc	??_efgtoa+3,f,c
  2235  00099C  503E               	movf	??_efgtoa+3,w,c
  2236  00099E  E106               	bnz	u4010
  2237  0009A0  0E1A               	movlw	26
  2238  0009A2  5C3D               	subwf	??_efgtoa+2,w,c
  2239  0009A4  B0D8               	btfsc	status,0,c
  2240  0009A6  D002               	goto	u4010
  2241  0009A8  0E01               	movlw	1
  2242  0009AA  D001               	goto	u4020
  2243  0009AC                     u4010:
  2244  0009AC  0E00               	movlw	0
  2245  0009AE                     u4020:
  2246  0009AE  0100               	movlb	0	; () banked
  2247  0009B0  6F68               	movwf	_efgtoa$209& (0+255),b
  2248  0009B2  6B69               	clrf	(_efgtoa$209+1)& (0+255),b
  2249                           
  2250                           ; BSR set to: 0
  2251  0009B4  5168               	movf	_efgtoa$209& (0+255),w,b
  2252  0009B6  1169               	iorwf	(_efgtoa$209+1)& (0+255),w,b
  2253  0009B8  B4D8               	btfsc	status,2,c
  2254  0009BA  D00D               	goto	l3381
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  2258  0009BC  0E00               	movlw	low _dbuf
  2259  0009BE  2592               	addwf	efgtoa@n& (0+255),w,b
  2260  0009C0  6E05               	movwf	strcpy@dest,c
  2261  0009C2  0E01               	movlw	high _dbuf
  2262  0009C4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2263  0009C6  6E06               	movwf	strcpy@dest+1,c
  2264  0009C8  0E18               	movlw	low STR_8
  2265  0009CA  6E07               	movwf	strcpy@src,c
  2266  0009CC  0E08               	movlw	high STR_8
  2267  0009CE  6E08               	movwf	strcpy@src+1,c
  2268  0009D0  EC0C  F015         	call	_strcpy	;wreg free
  2269                           
  2270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  2271  0009D4  D7B2               	goto	l3365
  2272  0009D6                     l3381:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  2276  0009D6  0E00               	movlw	low _dbuf
  2277  0009D8  2592               	addwf	efgtoa@n& (0+255),w,b
  2278  0009DA  6E05               	movwf	strcpy@dest,c
  2279  0009DC  0E01               	movlw	high _dbuf
  2280  0009DE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2281  0009E0  6E06               	movwf	strcpy@dest+1,c
  2282  0009E2  0E20               	movlw	low STR_9
  2283  0009E4  6E07               	movwf	strcpy@src,c
  2284  0009E6  0E08               	movlw	high STR_9
  2285  0009E8  6E08               	movwf	strcpy@src+1,c
  2286  0009EA  EC0C  F015         	call	_strcpy	;wreg free
  2287  0009EE  D7A5               	goto	l3365
  2288  0009F0                     l3389:
  2289                           
  2290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  2291  0009F0  0E00               	movlw	0
  2292  0009F2  0100               	movlb	0	; () banked
  2293  0009F4  6F94               	movwf	efgtoa@u& (0+255),b
  2294  0009F6  0E00               	movlw	0
  2295  0009F8  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2296  0009FA  0E80               	movlw	128
  2297  0009FC  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2298  0009FE  0E3F               	movlw	63
  2299  000A00  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2300                           
  2301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  2302  000A02  0E00               	movlw	0
  2303  000A04  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2304  000A06  0E00               	movlw	0
  2305  000A08  6F90               	movwf	efgtoa@e& (0+255),b
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  2309  000A0A  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2310  000A0E  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2311  000A12  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2312  000A16  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2313  000A1A  0E00               	movlw	0
  2314  000A1C  6E05               	movwf	___fleq@ff2,c
  2315  000A1E  0E00               	movlw	0
  2316  000A20  6E06               	movwf	___fleq@ff2+1,c
  2317  000A22  0E00               	movlw	0
  2318  000A24  6E07               	movwf	___fleq@ff2+2,c
  2319  000A26  0E00               	movlw	0
  2320  000A28  6E08               	movwf	___fleq@ff2+3,c
  2321  000A2A  ECBD  F013         	call	___fleq	;wreg free
  2322  000A2E  A0D8               	btfss	status,0,c
  2323  000A30  D01E               	goto	l3399
  2324  000A32  D076               	goto	u4060
  2325  000A34                     l3395:
  2326                           
  2327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  2328  000A34  C094  F00F         	movff	efgtoa@u,___flmul@b
  2329  000A38  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  2330  000A3C  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  2331  000A40  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  2332  000A44  0E00               	movlw	0
  2333  000A46  6E13               	movwf	___flmul@a,c
  2334  000A48  0E00               	movlw	0
  2335  000A4A  6E14               	movwf	___flmul@a+1,c
  2336  000A4C  0E20               	movlw	32
  2337  000A4E  6E15               	movwf	___flmul@a+2,c
  2338  000A50  0E41               	movlw	65
  2339  000A52  6E16               	movwf	___flmul@a+3,c
  2340  000A54  ECA5  F00A         	call	___flmul	;wreg free
  2341  000A58  C00F  F094         	movff	?___flmul,efgtoa@u
  2342  000A5C  C010  F095         	movff	?___flmul+1,efgtoa@u+1
  2343  000A60  C011  F096         	movff	?___flmul+2,efgtoa@u+2
  2344  000A64  C012  F097         	movff	?___flmul+3,efgtoa@u+3
  2345                           
  2346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  2347  000A68  0100               	movlb	0	; () banked
  2348  000A6A  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2349  000A6C  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2350  000A6E                     l3399:
  2351                           
  2352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  2353  000A6E  C08C  F028         	movff	efgtoa@g,___flge@ff1
  2354  000A72  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2355  000A76  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2356  000A7A  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2357  000A7E  0E00               	movlw	0
  2358  000A80  6E13               	movwf	___flmul@a,c
  2359  000A82  0E00               	movlw	0
  2360  000A84  6E14               	movwf	___flmul@a+1,c
  2361  000A86  0E20               	movlw	32
  2362  000A88  6E15               	movwf	___flmul@a+2,c
  2363  000A8A  0E41               	movlw	65
  2364  000A8C  6E16               	movwf	___flmul@a+3,c
  2365  000A8E  C094  F00F         	movff	efgtoa@u,___flmul@b
  2366  000A92  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  2367  000A96  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  2368  000A9A  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  2369  000A9E  ECA5  F00A         	call	___flmul	;wreg free
  2370  000AA2  C00F  F02C         	movff	?___flmul,___flge@ff2
  2371  000AA6  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2372  000AAA  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2373  000AAE  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2374  000AB2  ECA6  F011         	call	___flge	;wreg free
  2375  000AB6  A0D8               	btfss	status,0,c
  2376  000AB8  D01F               	goto	l3405
  2377  000ABA  D7BC               	goto	l3395
  2378  000ABC                     l3401:
  2379                           
  2380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  2381  000ABC  C094  F001         	movff	efgtoa@u,___fldiv@b
  2382  000AC0  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2383  000AC4  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2384  000AC8  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2385  000ACC  0E00               	movlw	0
  2386  000ACE  6E05               	movwf	___fldiv@a,c
  2387  000AD0  0E00               	movlw	0
  2388  000AD2  6E06               	movwf	___fldiv@a+1,c
  2389  000AD4  0E20               	movlw	32
  2390  000AD6  6E07               	movwf	___fldiv@a+2,c
  2391  000AD8  0E41               	movlw	65
  2392  000ADA  6E08               	movwf	___fldiv@a+3,c
  2393  000ADC  ECD4  F00D         	call	___fldiv	;wreg free
  2394  000AE0  C001  F094         	movff	?___fldiv,efgtoa@u
  2395  000AE4  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2396  000AE8  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2397  000AEC  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2398                           
  2399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  2400  000AF0  0100               	movlb	0	; () banked
  2401  000AF2  0790               	decf	efgtoa@e& (0+255),f,b
  2402  000AF4  A0D8               	btfss	status,0,c
  2403  000AF6  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2404  000AF8                     l3405:
  2405                           
  2406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  2407  000AF8  C08C  F028         	movff	efgtoa@g,___flge@ff1
  2408  000AFC  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2409  000B00  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2410  000B04  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2411  000B08  C094  F02C         	movff	efgtoa@u,___flge@ff2
  2412  000B0C  C095  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2413  000B10  C096  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2414  000B14  C097  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2415  000B18  ECA6  F011         	call	___flge	;wreg free
  2416  000B1C  A0D8               	btfss	status,0,c
  2417  000B1E  D7CE               	goto	l3401
  2418  000B20                     u4060:
  2419                           
  2420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  2421  000B20  C03A  F007         	movff	efgtoa@c,tolower@c
  2422  000B24  6A08               	clrf	tolower@c+1,c
  2423  000B26  EC85  F015         	call	_tolower	;wreg free
  2424  000B2A  5007               	movf	?_tolower,w,c
  2425  000B2C  0100               	movlb	0	; () banked
  2426  000B2E  6F81               	movwf	efgtoa@mode& (0+255),b
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  2430  000B30  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  2434  000B34  0E67               	movlw	103
  2435  000B36  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2436  000B38  A4D8               	btfss	status,2,c
  2437  000B3A  D019               	goto	l3421
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  2441  000B3C  51C8               	movf	_prec& (0+255),w,b
  2442  000B3E  11C9               	iorwf	(_prec+1)& (0+255),w,b
  2443  000B40  A4D8               	btfss	status,2,c
  2444  000B42  D004               	goto	l3417
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  2448  000B44  0E00               	movlw	0
  2449  000B46  6FC9               	movwf	(_prec+1)& (0+255),b
  2450  000B48  0E01               	movlw	1
  2451  000B4A  6FC8               	movwf	_prec& (0+255),b
  2452  000B4C                     l3417:
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  2456  000B4C  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  2457  000B4E  D005               	goto	u4090
  2458  000B50  51C9               	movf	(_prec+1)& (0+255),w,b
  2459  000B52  E108               	bnz	l161
  2460  000B54  05C8               	decf	_prec& (0+255),w,b
  2461  000B56  B0D8               	btfsc	status,0,c
  2462  000B58  D005               	goto	l161
  2463  000B5A                     u4090:
  2464                           
  2465                           ; BSR set to: 0
  2466  000B5A  0E00               	movlw	0
  2467  000B5C  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2468  000B5E  0E06               	movlw	6
  2469  000B60  6F7C               	movwf	efgtoa@p& (0+255),b
  2470  000B62  D008               	goto	l3427
  2471  000B64                     l161:
  2472                           
  2473                           ; BSR set to: 0
  2474  000B64  C0C8  F07C         	movff	_prec,efgtoa@p
  2475  000B68  C0C9  F07D         	movff	_prec+1,efgtoa@p+1
  2476  000B6C  D003               	goto	l3427
  2477  000B6E                     l3421:
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  2481  000B6E  AFC9               	btfss	(_prec+1)& (0+255),7,b
  2482  000B70  D7F9               	goto	l161
  2483  000B72  D7F3               	goto	u4090
  2484  000B74                     l3427:
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  2488  000B74  0E67               	movlw	103
  2489  000B76  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2490  000B78  A4D8               	btfss	status,2,c
  2491  000B7A  D022               	goto	l3437
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  2495  000B7C  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2496  000B7E  D006               	goto	u4120
  2497  000B80  0EFC               	movlw	252
  2498  000B82  5D90               	subwf	efgtoa@e& (0+255),w,b
  2499  000B84  0EFF               	movlw	255
  2500  000B86  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2501  000B88  A0D8               	btfss	status,0,c
  2502  000B8A  D018               	goto	l3435
  2503  000B8C                     u4120:
  2504                           
  2505                           ; BSR set to: 0
  2506  000B8C  0EFF               	movlw	255
  2507  000B8E  6E3B               	movwf	??_efgtoa& (0+255),c
  2508  000B90  0EFF               	movlw	255
  2509  000B92  6E3C               	movwf	(??_efgtoa+1)& (0+255),c
  2510  000B94  C07C  F03D         	movff	efgtoa@p,??_efgtoa+2
  2511  000B98  C07D  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  2512  000B9C  503B               	movf	??_efgtoa,w,c
  2513  000B9E  263D               	addwf	??_efgtoa+2,f,c
  2514  000BA0  503C               	movf	??_efgtoa+1,w,c
  2515  000BA2  223E               	addwfc	??_efgtoa+3,f,c
  2516  000BA4  5190               	movf	efgtoa@e& (0+255),w,b
  2517  000BA6  5C3D               	subwf	??_efgtoa+2,w,c
  2518  000BA8  503E               	movf	??_efgtoa+3,w,c
  2519  000BAA  0A80               	xorlw	128
  2520  000BAC  6E3F               	movwf	(??_efgtoa+4)& (0+255),c
  2521  000BAE  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2522  000BB0  0A80               	xorlw	128
  2523  000BB2  583F               	subwfb	(??_efgtoa+4)& (0+255),w,c
  2524  000BB4  A0D8               	btfss	status,0,c
  2525  000BB6  D002               	goto	l3435
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  2529  000BB8  0E66               	movlw	102
  2530  000BBA  D001               	goto	L2
  2531  000BBC                     l3435:
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  2535  000BBC  0E65               	movlw	101
  2536  000BBE                     L2:
  2537  000BBE  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2538  000BC0                     l3437:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  2542  000BC0  C07C  F074         	movff	efgtoa@p,efgtoa@m
  2543  000BC4  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  2547  000BC8  0E67               	movlw	103
  2548  000BCA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2549  000BCC  A4D8               	btfss	status,2,c
  2550  000BCE  D005               	goto	u4160
  2551                           
  2552                           ; BSR set to: 0
  2553  000BD0  0E66               	movlw	102
  2554  000BD2  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2555  000BD4  B4D8               	btfsc	status,2,c
  2556                           
  2557                           ; BSR set to: 0
  2558  000BD6  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2559  000BD8  D002               	goto	l3447
  2560  000BDA                     u4160:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  2564  000BDA  4B74               	infsnz	efgtoa@m& (0+255),f,b
  2565  000BDC  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  2566  000BDE                     l3447:
  2567                           
  2568                           ; BSR set to: 0
  2569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  2570  000BDE  0E66               	movlw	102
  2571  000BE0  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2572  000BE2  A4D8               	btfss	status,2,c
  2573  000BE4  D016               	goto	l3457
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  2577  000BE6  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2578  000BE8  D00C               	goto	l3453
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  2582  000BEA  0E00               	movlw	0
  2583  000BEC  6F94               	movwf	efgtoa@u& (0+255),b
  2584  000BEE  0E00               	movlw	0
  2585  000BF0  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2586  000BF2  0E80               	movlw	128
  2587  000BF4  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2588  000BF6  0E3F               	movlw	63
  2589  000BF8  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2590                           
  2591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  2592  000BFA  0E00               	movlw	0
  2593  000BFC  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2594  000BFE  0E00               	movlw	0
  2595  000C00  6F90               	movwf	efgtoa@e& (0+255),b
  2596  000C02                     l3453:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  2600  000C02  0E67               	movlw	103
  2601  000C04  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2602  000C06  B4D8               	btfsc	status,2,c
  2603  000C08  D004               	goto	l3457
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  2607  000C0A  5190               	movf	efgtoa@e& (0+255),w,b
  2608  000C0C  2774               	addwf	efgtoa@m& (0+255),f,b
  2609  000C0E  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2610  000C10  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2611  000C12                     l3457:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  2615  000C12  0E00               	movlw	0
  2616  000C14  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2617  000C16  0E00               	movlw	0
  2618  000C18  6F8A               	movwf	efgtoa@i& (0+255),b
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  2622  000C1A  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2623  000C1E  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2624  000C22  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2625  000C26  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  2629  000C2A  C094  F060         	movff	efgtoa@u,efgtoa@ou
  2630  000C2E  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  2631  000C32  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  2632  000C36  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  2633                           
  2634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2635  000C3A  D07B               	goto	l3471
  2636  000C3C                     l3463:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  2640  000C3C  C082  F001         	movff	efgtoa@h,___fldiv@b
  2641  000C40  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2642  000C44  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2643  000C48  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2644  000C4C  C094  F005         	movff	efgtoa@u,___fldiv@a
  2645  000C50  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2646  000C54  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2647  000C58  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2648  000C5C  ECD4  F00D         	call	___fldiv	;wreg free
  2649  000C60  C001  F01A         	movff	?___fldiv,floorf@x
  2650  000C64  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2651  000C68  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2652  000C6C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2653  000C70  EC18  F00F         	call	_floorf	;wreg free
  2654  000C74  C01A  F086         	movff	?_floorf,efgtoa@l
  2655  000C78  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  2656  000C7C  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  2657  000C80  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  2658                           
  2659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  2660  000C84  C086  F001         	movff	efgtoa@l,___fltol@f1
  2661  000C88  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2662  000C8C  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2663  000C90  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2664  000C94  EC74  F012         	call	___fltol	;wreg free
  2665  000C98  C001  F078         	movff	?___fltol,efgtoa@d
  2666  000C9C  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  2667                           
  2668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  2669  000CA0  C082  F028         	movff	efgtoa@h,___flsub@b
  2670  000CA4  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  2671  000CA8  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2672  000CAC  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2673  000CB0  C094  F013         	movff	efgtoa@u,___flmul@a
  2674  000CB4  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  2675  000CB8  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  2676  000CBC  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  2677  000CC0  C086  F00F         	movff	efgtoa@l,___flmul@b
  2678  000CC4  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  2679  000CC8  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  2680  000CCC  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  2681  000CD0  ECA5  F00A         	call	___flmul	;wreg free
  2682  000CD4  C00F  F02C         	movff	?___flmul,___flsub@a
  2683  000CD8  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2684  000CDC  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2685  000CE0  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2686  000CE4  ECAB  F015         	call	___flsub	;wreg free
  2687  000CE8  C028  F082         	movff	?___flsub,efgtoa@h
  2688  000CEC  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  2689  000CF0  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  2690  000CF4  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  2691                           
  2692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  2693  000CF8  C094  F001         	movff	efgtoa@u,___fldiv@b
  2694  000CFC  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2695  000D00  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2696  000D04  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2697  000D08  0E00               	movlw	0
  2698  000D0A  6E05               	movwf	___fldiv@a,c
  2699  000D0C  0E00               	movlw	0
  2700  000D0E  6E06               	movwf	___fldiv@a+1,c
  2701  000D10  0E20               	movlw	32
  2702  000D12  6E07               	movwf	___fldiv@a+2,c
  2703  000D14  0E41               	movlw	65
  2704  000D16  6E08               	movwf	___fldiv@a+3,c
  2705  000D18  ECD4  F00D         	call	___fldiv	;wreg free
  2706  000D1C  C001  F094         	movff	?___fldiv,efgtoa@u
  2707  000D20  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2708  000D24  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2709  000D28  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2710                           
  2711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  2712  000D2C  0100               	movlb	0	; () banked
  2713  000D2E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  2714  000D30  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  2715  000D32                     l3471:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2719  000D32  5174               	movf	efgtoa@m& (0+255),w,b
  2720  000D34  5D8A               	subwf	efgtoa@i& (0+255),w,b
  2721  000D36  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  2722  000D38  0A80               	xorlw	128
  2723  000D3A  6E3B               	movwf	??_efgtoa& (0+255),c
  2724  000D3C  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  2725  000D3E  0A80               	xorlw	128
  2726  000D40  583B               	subwfb	??_efgtoa& (0+255),w,c
  2727  000D42  A0D8               	btfss	status,0,c
  2728  000D44  D77B               	goto	l3463
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  2732  000D46  C094  F00F         	movff	efgtoa@u,___flmul@b
  2733  000D4A  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  2734  000D4E  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  2735  000D52  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  2736  000D56  0E00               	movlw	0
  2737  000D58  6E13               	movwf	___flmul@a,c
  2738  000D5A  0E00               	movlw	0
  2739  000D5C  6E14               	movwf	___flmul@a+1,c
  2740  000D5E  0EA0               	movlw	160
  2741  000D60  6E15               	movwf	___flmul@a+2,c
  2742  000D62  0E40               	movlw	64
  2743  000D64  6E16               	movwf	___flmul@a+3,c
  2744  000D66  ECA5  F00A         	call	___flmul	;wreg free
  2745  000D6A  C00F  F086         	movff	?___flmul,efgtoa@l
  2746  000D6E  C010  F087         	movff	?___flmul+1,efgtoa@l+1
  2747  000D72  C011  F088         	movff	?___flmul+2,efgtoa@l+2
  2748  000D76  C012  F089         	movff	?___flmul+3,efgtoa@l+3
  2749                           
  2750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  2751  000D7A  C082  F028         	movff	efgtoa@h,___flge@ff1
  2752  000D7E  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2753  000D82  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2754  000D86  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2755  000D8A  C086  F02C         	movff	efgtoa@l,___flge@ff2
  2756  000D8E  C087  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2757  000D92  C088  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2758  000D96  C089  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2759  000D9A  ECA6  F011         	call	___flge	;wreg free
  2760  000D9E  B0D8               	btfsc	status,0,c
  2761  000DA0  D003               	goto	l3479
  2762                           
  2763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  2764  000DA2  0E00               	movlw	0
  2765  000DA4  0100               	movlb	0	; () banked
  2766  000DA6  D018               	goto	L3
  2767  000DA8                     l3479:
  2768                           
  2769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  2770  000DA8  C082  F001         	movff	efgtoa@h,___fleq@ff1
  2771  000DAC  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2772  000DB0  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2773  000DB4  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2774  000DB8  C086  F005         	movff	efgtoa@l,___fleq@ff2
  2775  000DBC  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2776  000DC0  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2777  000DC4  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2778  000DC8  ECBD  F013         	call	___fleq	;wreg free
  2779  000DCC  A0D8               	btfss	status,0,c
  2780  000DCE  D00B               	goto	l3485
  2781  000DD0  0100               	movlb	0	; () banked
  2782  000DD2  B178               	btfsc	efgtoa@d& (0+255),0,b
  2783  000DD4  D008               	goto	l3485
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  2787  000DD6  0E00               	movlw	0
  2788  000DD8                     L3:
  2789  000DD8  6F86               	movwf	efgtoa@l& (0+255),b
  2790  000DDA  0E00               	movlw	0
  2791  000DDC  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2792  000DDE  0E00               	movlw	0
  2793  000DE0  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2794  000DE2  0E00               	movlw	0
  2795  000DE4  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2796  000DE6                     l3485:
  2797                           
  2798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  2799  000DE6  C08C  F001         	movff	efgtoa@g,___fladd@b
  2800  000DEA  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  2801  000DEE  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  2802  000DF2  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  2803  000DF6  C086  F005         	movff	efgtoa@l,___fladd@a
  2804  000DFA  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  2805  000DFE  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  2806  000E02  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  2807  000E06  EC4E  F00C         	call	___fladd	;wreg free
  2808  000E0A  C001  F082         	movff	?___fladd,efgtoa@h
  2809  000E0E  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  2810  000E12  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  2811  000E16  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  2812                           
  2813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  2814  000E1A  C060  F094         	movff	efgtoa@ou,efgtoa@u
  2815  000E1E  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  2816  000E22  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  2817  000E26  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  2818                           
  2819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  2820  000E2A  0E65               	movlw	101
  2821  000E2C  0100               	movlb	0	; () banked
  2822  000E2E  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2823  000E30  B4D8               	btfsc	status,2,c
  2824  000E32  D005               	goto	l3493
  2825                           
  2826                           ; BSR set to: 0
  2827  000E34  C090  F076         	movff	efgtoa@e,efgtoa@ne
  2828  000E38  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  2829  000E3C  D004               	goto	l187
  2830  000E3E                     l3493:
  2831                           
  2832                           ; BSR set to: 0
  2833  000E3E  0E00               	movlw	0
  2834  000E40  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  2835  000E42  0E00               	movlw	0
  2836  000E44  6F76               	movwf	efgtoa@ne& (0+255),b
  2837  000E46                     l187:
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  2841  000E46  0E00               	movlw	0
  2842  000E48  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  2843  000E4A  0E00               	movlw	0
  2844  000E4C  6F72               	movwf	efgtoa@pp& (0+255),b
  2845                           
  2846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  2847  000E4E  0E00               	movlw	0
  2848  000E50  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  2849  000E52  0E00               	movlw	0
  2850  000E54  6F70               	movwf	efgtoa@t& (0+255),b
  2851                           
  2852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  2853  000E56  0E00               	movlw	0
  2854  000E58  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2855  000E5A  0E00               	movlw	0
  2856  000E5C  6F8A               	movwf	efgtoa@i& (0+255),b
  2857                           
  2858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  2859  000E5E  D0C7               	goto	l3543
  2860  000E60                     l3495:
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  2864  000E60  C082  F001         	movff	efgtoa@h,___fldiv@b
  2865  000E64  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2866  000E68  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2867  000E6C  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2868  000E70  C094  F005         	movff	efgtoa@u,___fldiv@a
  2869  000E74  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2870  000E78  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2871  000E7C  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2872  000E80  ECD4  F00D         	call	___fldiv	;wreg free
  2873  000E84  C001  F01A         	movff	?___fldiv,floorf@x
  2874  000E88  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2875  000E8C  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2876  000E90  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2877  000E94  EC18  F00F         	call	_floorf	;wreg free
  2878  000E98  C01A  F086         	movff	?_floorf,efgtoa@l
  2879  000E9C  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  2880  000EA0  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  2881  000EA4  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  2882                           
  2883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  2884  000EA8  C086  F001         	movff	efgtoa@l,___fltol@f1
  2885  000EAC  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2886  000EB0  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2887  000EB4  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2888  000EB8  EC74  F012         	call	___fltol	;wreg free
  2889  000EBC  C001  F078         	movff	?___fltol,efgtoa@d
  2890  000EC0  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  2891                           
  2892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  2893  000EC4  B85E               	btfsc	_flags,4,c
  2894  000EC6  D00D               	goto	l3507
  2895  000EC8  0100               	movlb	0	; () banked
  2896  000ECA  5178               	movf	efgtoa@d& (0+255),w,b
  2897  000ECC  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  2898  000ECE  A4D8               	btfss	status,2,c
  2899  000ED0  D008               	goto	l3507
  2900                           
  2901                           ; BSR set to: 0
  2902  000ED2  0E67               	movlw	103
  2903  000ED4  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2904  000ED6  B4D8               	btfsc	status,2,c
  2905                           
  2906                           ; BSR set to: 0
  2907  000ED8  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  2908  000EDA  D003               	goto	l3507
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  2912  000EDC  4B70               	infsnz	efgtoa@t& (0+255),f,b
  2913  000EDE  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  2914                           
  2915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  2916  000EE0  D03A               	goto	l3535
  2917  000EE2                     l3507:
  2918                           
  2919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  2920  000EE2  0100               	movlb	0	; () banked
  2921  000EE4  5172               	movf	efgtoa@pp& (0+255),w,b
  2922  000EE6  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  2923  000EE8  B4D8               	btfsc	status,2,c
  2924                           
  2925                           ; BSR set to: 0
  2926  000EEA  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  2927  000EEC  D022               	goto	l3527
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  2931  000EEE  0E00               	movlw	low _dbuf
  2932  000EF0  2592               	addwf	efgtoa@n& (0+255),w,b
  2933  000EF2  6ED9               	movwf	fsr2l,c
  2934  000EF4  0E01               	movlw	high _dbuf
  2935  000EF6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2936  000EF8  6EDA               	movwf	fsr2h,c
  2937  000EFA  0E2E               	movlw	46
  2938  000EFC  6EDF               	movwf	indf2,c
  2939                           
  2940                           ; BSR set to: 0
  2941  000EFE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2942  000F00  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  2946  000F02  077F               	decf	efgtoa@w& (0+255),f,b
  2947  000F04  A0D8               	btfss	status,0,c
  2948  000F06  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  2952  000F08  0E00               	movlw	0
  2953  000F0A  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  2954  000F0C  0E01               	movlw	1
  2955  000F0E  6F72               	movwf	efgtoa@pp& (0+255),b
  2956  000F10  D010               	goto	l3527
  2957  000F12                     l3519:
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  2961  000F12  0E00               	movlw	low _dbuf
  2962  000F14  2592               	addwf	efgtoa@n& (0+255),w,b
  2963  000F16  6ED9               	movwf	fsr2l,c
  2964  000F18  0E01               	movlw	high _dbuf
  2965  000F1A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2966  000F1C  6EDA               	movwf	fsr2h,c
  2967  000F1E  0E30               	movlw	48
  2968  000F20  6EDF               	movwf	indf2,c
  2969                           
  2970                           ; BSR set to: 0
  2971  000F22  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2972  000F24  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  2976  000F26  077F               	decf	efgtoa@w& (0+255),f,b
  2977  000F28  A0D8               	btfss	status,0,c
  2978  000F2A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  2982  000F2C  0770               	decf	efgtoa@t& (0+255),f,b
  2983  000F2E  A0D8               	btfss	status,0,c
  2984  000F30  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  2985  000F32                     l3527:
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  2989  000F32  5170               	movf	efgtoa@t& (0+255),w,b
  2990  000F34  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2991  000F36  A4D8               	btfss	status,2,c
  2992  000F38  D7EC               	goto	l3519
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  2996  000F3A  0E00               	movlw	low _dbuf
  2997  000F3C  2592               	addwf	efgtoa@n& (0+255),w,b
  2998  000F3E  6ED9               	movwf	fsr2l,c
  2999  000F40  0E01               	movlw	high _dbuf
  3000  000F42  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3001  000F44  6EDA               	movwf	fsr2h,c
  3002  000F46  5178               	movf	efgtoa@d& (0+255),w,b
  3003  000F48  0F30               	addlw	48
  3004  000F4A  6EDF               	movwf	indf2,c
  3005                           
  3006                           ; BSR set to: 0
  3007  000F4C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3008  000F4E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3012  000F50  077F               	decf	efgtoa@w& (0+255),f,b
  3013  000F52  A0D8               	btfss	status,0,c
  3014  000F54  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3015  000F56                     l3535:
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3019  000F56  C082  F028         	movff	efgtoa@h,___flsub@b
  3020  000F5A  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  3021  000F5E  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3022  000F62  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3023  000F66  C094  F013         	movff	efgtoa@u,___flmul@a
  3024  000F6A  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  3025  000F6E  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  3026  000F72  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  3027  000F76  C086  F00F         	movff	efgtoa@l,___flmul@b
  3028  000F7A  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  3029  000F7E  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  3030  000F82  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  3031  000F86  ECA5  F00A         	call	___flmul	;wreg free
  3032  000F8A  C00F  F02C         	movff	?___flmul,___flsub@a
  3033  000F8E  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3034  000F92  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3035  000F96  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3036  000F9A  ECAB  F015         	call	___flsub	;wreg free
  3037  000F9E  C028  F082         	movff	?___flsub,efgtoa@h
  3038  000FA2  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  3039  000FA6  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  3040  000FAA  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  3041                           
  3042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3043  000FAE  C094  F001         	movff	efgtoa@u,___fldiv@b
  3044  000FB2  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3045  000FB6  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3046  000FBA  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3047  000FBE  0E00               	movlw	0
  3048  000FC0  6E05               	movwf	___fldiv@a,c
  3049  000FC2  0E00               	movlw	0
  3050  000FC4  6E06               	movwf	___fldiv@a+1,c
  3051  000FC6  0E20               	movlw	32
  3052  000FC8  6E07               	movwf	___fldiv@a+2,c
  3053  000FCA  0E41               	movlw	65
  3054  000FCC  6E08               	movwf	___fldiv@a+3,c
  3055  000FCE  ECD4  F00D         	call	___fldiv	;wreg free
  3056  000FD2  C001  F094         	movff	?___fldiv,efgtoa@u
  3057  000FD6  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3058  000FDA  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3059  000FDE  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3060                           
  3061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3062  000FE2  0100               	movlb	0	; () banked
  3063  000FE4  0776               	decf	efgtoa@ne& (0+255),f,b
  3064  000FE6  A0D8               	btfss	status,0,c
  3065  000FE8  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3069  000FEA  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3070  000FEC  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3071  000FEE                     l3543:
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3075  000FEE  5174               	movf	efgtoa@m& (0+255),w,b
  3076  000FF0  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3077  000FF2  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3078  000FF4  0A80               	xorlw	128
  3079  000FF6  6E3B               	movwf	??_efgtoa& (0+255),c
  3080  000FF8  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3081  000FFA  0A80               	xorlw	128
  3082  000FFC  583B               	subwfb	??_efgtoa& (0+255),w,c
  3083  000FFE  B0D8               	btfsc	status,0,c
  3084  001000  D008               	goto	u4330
  3085                           
  3086                           ; BSR set to: 0
  3087  001002  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3088  001004  D72D               	goto	l3495
  3089  001006  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3090  001008  E104               	bnz	u4330
  3091  00100A  0E4B               	movlw	75
  3092  00100C  5D92               	subwf	efgtoa@n& (0+255),w,b
  3093  00100E  A0D8               	btfss	status,0,c
  3094  001010  D727               	goto	l3495
  3095  001012                     u4330:
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3099  001012  5172               	movf	efgtoa@pp& (0+255),w,b
  3100  001014  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3101  001016  B4D8               	btfsc	status,2,c
  3102                           
  3103                           ; BSR set to: 0
  3104  001018  A85E               	btfss	_flags,4,c
  3105  00101A  D00A               	goto	l3555
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3109  00101C  0E00               	movlw	low _dbuf
  3110  00101E  2592               	addwf	efgtoa@n& (0+255),w,b
  3111  001020  6ED9               	movwf	fsr2l,c
  3112  001022  0E01               	movlw	high _dbuf
  3113  001024  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3114  001026  6EDA               	movwf	fsr2h,c
  3115  001028  0E2E               	movlw	46
  3116  00102A  6EDF               	movwf	indf2,c
  3117                           
  3118                           ; BSR set to: 0
  3119  00102C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3120  00102E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3121  001030                     l3555:
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3125  001030  0E00               	movlw	low _dbuf
  3126  001032  2592               	addwf	efgtoa@n& (0+255),w,b
  3127  001034  6ED9               	movwf	fsr2l,c
  3128  001036  0E01               	movlw	high _dbuf
  3129  001038  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3130  00103A  6EDA               	movwf	fsr2h,c
  3131  00103C  0E00               	movlw	0
  3132  00103E  6EDF               	movwf	indf2,c
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3136  001040  0E65               	movlw	101
  3137  001042  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3138  001044  A4D8               	btfss	status,2,c
  3139  001046  D47E               	goto	l3367
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3143  001048  0E00               	movlw	0
  3144  00104A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3145  00104C  0E4F               	movlw	79
  3146  00104E  6F8A               	movwf	efgtoa@i& (0+255),b
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3150  001050  0E00               	movlw	low _dbuf
  3151  001052  258A               	addwf	efgtoa@i& (0+255),w,b
  3152  001054  6ED9               	movwf	fsr2l,c
  3153  001056  0E01               	movlw	high _dbuf
  3154  001058  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3155  00105A  6EDA               	movwf	fsr2h,c
  3156  00105C  0E00               	movlw	0
  3157  00105E  6EDF               	movwf	indf2,c
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3161  001060  0E00               	movlw	0
  3162  001062  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3163  001064  0E00               	movlw	0
  3164  001066  6F7A               	movwf	efgtoa@sign& (0+255),b
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3168  001068  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3169  00106A  D008               	goto	l3571
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3173  00106C  0E00               	movlw	0
  3174  00106E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3175  001070  0E01               	movlw	1
  3176  001072  6F7A               	movwf	efgtoa@sign& (0+255),b
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3180  001074  6D90               	negf	efgtoa@e& (0+255),b
  3181  001076  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3182  001078  B0D8               	btfsc	status,0,c
  3183  00107A  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3184  00107C                     l3571:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  3188  00107C  0E00               	movlw	0
  3189  00107E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3190  001080  0E02               	movlw	2
  3191  001082  6F7C               	movwf	efgtoa@p& (0+255),b
  3192                           
  3193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3194  001084  D02B               	goto	l3583
  3195  001086                     l3573:
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  3199  001086  078A               	decf	efgtoa@i& (0+255),f,b
  3200  001088  A0D8               	btfss	status,0,c
  3201  00108A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  3205  00108C  0E00               	movlw	low _dbuf
  3206  00108E  258A               	addwf	efgtoa@i& (0+255),w,b
  3207  001090  6ED9               	movwf	fsr2l,c
  3208  001092  0E01               	movlw	high _dbuf
  3209  001094  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3210  001096  6EDA               	movwf	fsr2h,c
  3211  001098  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3212  00109C  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3213  0010A0  0E00               	movlw	0
  3214  0010A2  6E04               	movwf	___awmod@divisor+1,c
  3215  0010A4  0E0A               	movlw	10
  3216  0010A6  6E03               	movwf	___awmod@divisor,c
  3217  0010A8  EC80  F014         	call	___awmod	;wreg free
  3218  0010AC  5001               	movf	?___awmod,w,c
  3219  0010AE  0F30               	addlw	48
  3220  0010B0  6EDF               	movwf	indf2,c
  3221                           
  3222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  3223  0010B2  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3224  0010B6  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3225  0010BA  0E00               	movlw	0
  3226  0010BC  6E04               	movwf	___awdiv@divisor+1,c
  3227  0010BE  0E0A               	movlw	10
  3228  0010C0  6E03               	movwf	___awdiv@divisor,c
  3229  0010C2  EC02  F014         	call	___awdiv	;wreg free
  3230  0010C6  C001  F090         	movff	?___awdiv,efgtoa@e
  3231  0010CA  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3232                           
  3233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  3234  0010CE  0100               	movlb	0	; () banked
  3235  0010D0  077C               	decf	efgtoa@p& (0+255),f,b
  3236  0010D2  A0D8               	btfss	status,0,c
  3237  0010D4  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  3241  0010D6  077F               	decf	efgtoa@w& (0+255),f,b
  3242  0010D8  A0D8               	btfss	status,0,c
  3243  0010DA  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3244  0010DC                     l3583:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3248  0010DC  5190               	movf	efgtoa@e& (0+255),w,b
  3249  0010DE  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3250  0010E0  A4D8               	btfss	status,2,c
  3251  0010E2  D7D1               	goto	l3573
  3252                           
  3253                           ; BSR set to: 0
  3254  0010E4  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3255  0010E6  D005               	goto	u4390
  3256  0010E8  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3257  0010EA  E1CD               	bnz	l3573
  3258  0010EC  057C               	decf	efgtoa@p& (0+255),w,b
  3259  0010EE  B0D8               	btfsc	status,0,c
  3260  0010F0  D7CA               	goto	l3573
  3261  0010F2                     u4390:
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  3265  0010F2  078A               	decf	efgtoa@i& (0+255),f,b
  3266  0010F4  A0D8               	btfss	status,0,c
  3267  0010F6  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  3271  0010F8  517A               	movf	efgtoa@sign& (0+255),w,b
  3272  0010FA  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3273  0010FC  A4D8               	btfss	status,2,c
  3274  0010FE  D004               	goto	l3593
  3275                           
  3276                           ; BSR set to: 0
  3277  001100  0E00               	movlw	0
  3278  001102  6F6B               	movwf	(_efgtoa$213+1)& (0+255),b
  3279  001104  0E2B               	movlw	43
  3280  001106  D003               	goto	L4
  3281  001108                     l3593:
  3282                           
  3283                           ; BSR set to: 0
  3284  001108  0E00               	movlw	0
  3285  00110A  6F6B               	movwf	(_efgtoa$213+1)& (0+255),b
  3286  00110C  0E2D               	movlw	45
  3287  00110E                     L4:
  3288  00110E  6F6A               	movwf	_efgtoa$213& (0+255),b
  3289                           
  3290                           ; BSR set to: 0
  3291  001110  0E00               	movlw	low _dbuf
  3292  001112  258A               	addwf	efgtoa@i& (0+255),w,b
  3293  001114  6ED9               	movwf	fsr2l,c
  3294  001116  0E01               	movlw	high _dbuf
  3295  001118  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3296  00111A  6EDA               	movwf	fsr2h,c
  3297  00111C  C06A  FFDF         	movff	_efgtoa$213,indf2
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  3301  001120  077F               	decf	efgtoa@w& (0+255),f,b
  3302  001122  A0D8               	btfss	status,0,c
  3303  001124  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3307  001126  078A               	decf	efgtoa@i& (0+255),f,b
  3308  001128  A0D8               	btfss	status,0,c
  3309  00112A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3310                           
  3311                           ; BSR set to: 0
  3312  00112C  0EBF               	movlw	191
  3313  00112E  6E3B               	movwf	??_efgtoa& (0+255),c
  3314  001130  0EFF               	movlw	255
  3315  001132  6E3C               	movwf	(??_efgtoa+1)& (0+255),c
  3316  001134  503A               	movf	efgtoa@c,w,c
  3317  001136  6E3D               	movwf	(??_efgtoa+2)& (0+255),c
  3318  001138  6A3E               	clrf	(??_efgtoa+3)& (0+255),c
  3319  00113A  503B               	movf	??_efgtoa,w,c
  3320  00113C  263D               	addwf	??_efgtoa+2,f,c
  3321  00113E  503C               	movf	??_efgtoa+1,w,c
  3322  001140  223E               	addwfc	??_efgtoa+3,f,c
  3323  001142  503E               	movf	??_efgtoa+3,w,c
  3324  001144  E106               	bnz	u4410
  3325  001146  0E1A               	movlw	26
  3326  001148  5C3D               	subwf	??_efgtoa+2,w,c
  3327  00114A  B0D8               	btfsc	status,0,c
  3328  00114C  D002               	goto	u4410
  3329  00114E  0E01               	movlw	1
  3330  001150  D001               	goto	u4420
  3331  001152                     u4410:
  3332  001152  0E00               	movlw	0
  3333  001154                     u4420:
  3334  001154  6F6E               	movwf	_efgtoa$215& (0+255),b
  3335  001156  6B6F               	clrf	(_efgtoa$215+1)& (0+255),b
  3336                           
  3337                           ; BSR set to: 0
  3338  001158  516E               	movf	_efgtoa$215& (0+255),w,b
  3339  00115A  116F               	iorwf	(_efgtoa$215+1)& (0+255),w,b
  3340  00115C  A4D8               	btfss	status,2,c
  3341  00115E  D004               	goto	l3609
  3342                           
  3343                           ; BSR set to: 0
  3344  001160  0E00               	movlw	0
  3345  001162  6F6D               	movwf	(_efgtoa$214+1)& (0+255),b
  3346  001164  0E65               	movlw	101
  3347  001166  D003               	goto	L5
  3348  001168                     l3609:
  3349                           
  3350                           ; BSR set to: 0
  3351  001168  0E00               	movlw	0
  3352  00116A  6F6D               	movwf	(_efgtoa$214+1)& (0+255),b
  3353  00116C  0E45               	movlw	69
  3354  00116E                     L5:
  3355  00116E  6F6C               	movwf	_efgtoa$214& (0+255),b
  3356                           
  3357                           ; BSR set to: 0
  3358  001170  0E00               	movlw	low _dbuf
  3359  001172  258A               	addwf	efgtoa@i& (0+255),w,b
  3360  001174  6ED9               	movwf	fsr2l,c
  3361  001176  0E01               	movlw	high _dbuf
  3362  001178  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3363  00117A  6EDA               	movwf	fsr2h,c
  3364  00117C  C06C  FFDF         	movff	_efgtoa$214,indf2
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  3368  001180  077F               	decf	efgtoa@w& (0+255),f,b
  3369  001182  A0D8               	btfss	status,0,c
  3370  001184  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  3374  001186  0E00               	movlw	low _dbuf
  3375  001188  2592               	addwf	efgtoa@n& (0+255),w,b
  3376  00118A  6E05               	movwf	strcpy@dest,c
  3377  00118C  0E01               	movlw	high _dbuf
  3378  00118E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3379  001190  6E06               	movwf	strcpy@dest+1,c
  3380  001192  0E00               	movlw	low _dbuf
  3381  001194  258A               	addwf	efgtoa@i& (0+255),w,b
  3382  001196  6E07               	movwf	strcpy@src,c
  3383  001198  0E01               	movlw	high _dbuf
  3384  00119A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3385  00119C  6E08               	movwf	strcpy@src+1,c
  3386  00119E  EC0C  F015         	call	_strcpy	;wreg free
  3387  0011A2  EFA2  F004         	goto	l3367
  3388  0011A6                     __end_of_efgtoa:
  3389                           	opt callstack 0
  3390                           
  3391 ;; *************** function _tolower *****************
  3392 ;; Defined at:
  3393 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  c               2    6[COMRAM] int 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;		None
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  2    6[COMRAM] int 
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3407 ;;      Params:         2       0       0       0       0       0       0       0       0
  3408 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3409 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3410 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3411 ;;Total ram usage:        8 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    1
  3414 ;; This function calls:
  3415 ;;		_isupper
  3416 ;; This function is called by:
  3417 ;;		_efgtoa
  3418 ;;		_vfpfcnvrt
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text7
  3423  002B0A                     __ptext7:
  3424                           	opt callstack 0
  3425  002B0A                     _tolower:
  3426                           	opt callstack 26
  3427                           
  3428                           ;incstack = 0
  3429  002B0A  0EBF               	movlw	191
  3430  002B0C  6E09               	movwf	??_tolower& (0+255),c
  3431  002B0E  0EFF               	movlw	255
  3432  002B10  6E0A               	movwf	(??_tolower+1)& (0+255),c
  3433  002B12  C007  F00B         	movff	tolower@c,??_tolower+2
  3434  002B16  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3435  002B1A  5009               	movf	??_tolower,w,c
  3436  002B1C  260B               	addwf	??_tolower+2,f,c
  3437  002B1E  500A               	movf	??_tolower+1,w,c
  3438  002B20  220C               	addwfc	??_tolower+3,f,c
  3439  002B22  500C               	movf	??_tolower+3,w,c
  3440  002B24  E106               	bnz	u3050
  3441  002B26  0E1A               	movlw	26
  3442  002B28  5C0B               	subwf	??_tolower+2,w,c
  3443  002B2A  B0D8               	btfsc	status,0,c
  3444  002B2C  D002               	goto	u3050
  3445  002B2E  0E01               	movlw	1
  3446  002B30  D001               	goto	u3060
  3447  002B32                     u3050:
  3448  002B32  0E00               	movlw	0
  3449  002B34                     u3060:
  3450  002B34  6E0D               	movwf	_tolower$827,c
  3451  002B36  6A0E               	clrf	_tolower$827+1,c
  3452  002B38  500D               	movf	_tolower$827,w,c
  3453  002B3A  100E               	iorwf	_tolower$827+1,w,c
  3454  002B3C  B4D8               	btfsc	status,2,c
  3455  002B3E  D006               	goto	l1059
  3456  002B40  0E20               	movlw	32
  3457  002B42  1007               	iorwf	tolower@c,w,c
  3458  002B44  6E07               	movwf	?_tolower,c
  3459  002B46  5008               	movf	tolower@c+1,w,c
  3460  002B48  6E08               	movwf	?_tolower+1,c
  3461  002B4A  0012               	return	
  3462  002B4C                     l1059:
  3463  002B4C  C007  F007         	movff	tolower@c,?_tolower
  3464  002B50  C008  F008         	movff	tolower@c+1,?_tolower+1
  3465  002B54  0012               	return		;funcret
  3466  002B56                     __end_of_tolower:
  3467                           	opt callstack 0
  3468                           
  3469 ;; *************** function _isupper *****************
  3470 ;; Defined at:
  3471 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  c               2    0[COMRAM] int 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  2    0[COMRAM] int 
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3485 ;;      Params:         2       0       0       0       0       0       0       0       0
  3486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3487 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3488 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3489 ;;Total ram usage:        6 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_efgtoa
  3495 ;;		_vfpfcnvrt
  3496 ;;		_tolower
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text8
  3501  002CB4                     __ptext8:
  3502                           	opt callstack 0
  3503  002CB4                     _isupper:
  3504                           	opt callstack 26
  3505                           
  3506                           ;incstack = 0
  3507  002CB4  0EBF               	movlw	191
  3508  002CB6  6E03               	movwf	??_isupper& (0+255),c
  3509  002CB8  0EFF               	movlw	255
  3510  002CBA  6E04               	movwf	(??_isupper+1)& (0+255),c
  3511  002CBC  C001  F005         	movff	isupper@c,??_isupper+2
  3512  002CC0  C002  F006         	movff	isupper@c+1,??_isupper+3
  3513  002CC4  5003               	movf	??_isupper,w,c
  3514  002CC6  2605               	addwf	??_isupper+2,f,c
  3515  002CC8  5004               	movf	??_isupper+1,w,c
  3516  002CCA  2206               	addwfc	??_isupper+3,f,c
  3517  002CCC  5006               	movf	??_isupper+3,w,c
  3518  002CCE  E106               	bnz	u2510
  3519  002CD0  0E1A               	movlw	26
  3520  002CD2  5C05               	subwf	??_isupper+2,w,c
  3521  002CD4  B0D8               	btfsc	status,0,c
  3522  002CD6  D002               	goto	u2510
  3523  002CD8  0E01               	movlw	1
  3524  002CDA  D001               	goto	u2520
  3525  002CDC                     u2510:
  3526  002CDC  0E00               	movlw	0
  3527  002CDE                     u2520:
  3528  002CDE  6E01               	movwf	?_isupper,c
  3529  002CE0  6A02               	clrf	?_isupper+1,c
  3530  002CE2  0012               	return		;funcret
  3531  002CE4                     __end_of_isupper:
  3532                           	opt callstack 0
  3533                           
  3534 ;; *************** function _strcpy *****************
  3535 ;; Defined at:
  3536 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  dest            2    4[COMRAM] PTR unsigned char 
  3539 ;;		 -> dbuf(80), main@data(10), 
  3540 ;;  src             2    6[COMRAM] PTR const unsigned char 
  3541 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  3542 ;;		 -> dbuf(80), STR_2(6), 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  d               2   12[COMRAM] PTR unsigned char 
  3545 ;;		 -> dbuf(80), main@data(10), 
  3546 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3547 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  3548 ;;		 -> dbuf(80), STR_2(6), 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  2    4[COMRAM] PTR unsigned char 
  3551 ;; Registers used:
  3552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3558 ;;      Params:         4       0       0       0       0       0       0       0       0
  3559 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3560 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3561 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3562 ;;Total ram usage:       10 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_efgtoa
  3568 ;;		_strcat
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text9
  3573  002A18                     __ptext9:
  3574                           	opt callstack 0
  3575  002A18                     _strcpy:
  3576                           	opt callstack 29
  3577                           
  3578                           ;incstack = 0
  3579  002A18  C007  F00B         	movff	strcpy@src,strcpy@s
  3580  002A1C  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  3581  002A20  C005  F00D         	movff	strcpy@dest,strcpy@d
  3582  002A24  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  3583  002A28                     l2817:
  3584  002A28  500B               	movf	strcpy@s,w,c
  3585  002A2A  6E09               	movwf	??_strcpy& (0+255),c
  3586  002A2C  500C               	movf	strcpy@s+1,w,c
  3587  002A2E  6E0A               	movwf	(??_strcpy+1)& (0+255),c
  3588  002A30  4A0B               	infsnz	strcpy@s,f,c
  3589  002A32  2A0C               	incf	strcpy@s+1,f,c
  3590  002A34  C009  FFF6         	movff	??_strcpy,tblptrl
  3591  002A38  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  3592  002A3C  6AF8               	clrf	tblptru,c
  3593  002A3E  C00D  FFD9         	movff	strcpy@d,fsr2l
  3594  002A42  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  3595  002A46  4A0D               	infsnz	strcpy@d,f,c
  3596  002A48  2A0E               	incf	strcpy@d+1,f,c
  3597  002A4A  0E07               	movlw	(high __ramtop+-1)
  3598  002A4C  64F7               	cpfsgt	tblptrh,c
  3599  002A4E  D003               	bra	u3037
  3600  002A50  0008               	tblrd		*
  3601  002A52  50F5               	movf	tablat,w,c
  3602  002A54  D005               	bra	u3030
  3603  002A56                     u3037:
  3604  002A56  CFF6 FFE1          	movff	tblptrl,fsr1l
  3605  002A5A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3606  002A5E  50E7               	movf	indf1,w,c
  3607  002A60                     u3030:
  3608  002A60  6EDF               	movwf	indf2,c
  3609  002A62  50DF               	movf	indf2,w,c
  3610  002A64  B4D8               	btfsc	status,2,c
  3611  002A66  0012               	return	
  3612  002A68  D7DF               	goto	l2817
  3613  002A6A                     __end_of_strcpy:
  3614                           	opt callstack 0
  3615                           
  3616 ;; *************** function _pad *****************
  3617 ;; Defined at:
  3618 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3621 ;;		 -> sprintf@f(6), 
  3622 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3623 ;;		 -> dbuf(80), 
  3624 ;;  p               2   20[COMRAM] int 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  w               2   25[COMRAM] int 
  3627 ;;  i               2   23[COMRAM] int 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  2   16[COMRAM] int 
  3630 ;; Registers used:
  3631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3637 ;;      Params:         6       0       0       0       0       0       0       0       0
  3638 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3639 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3640 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3641 ;;Total ram usage:       11 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    3
  3644 ;; This function calls:
  3645 ;;		_fputc
  3646 ;;		_fputs
  3647 ;;		_strlen
  3648 ;; This function is called by:
  3649 ;;		_efgtoa
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text10
  3654  0026E4                     __ptext10:
  3655                           	opt callstack 0
  3656  0026E4                     _pad:
  3657                           	opt callstack 23
  3658                           
  3659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3660                           
  3661                           ;incstack = 0
  3662  0026E4  A05E               	btfss	_flags,0,c
  3663  0026E6  D00A               	goto	l2775
  3664                           
  3665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3666  0026E8  C013  F00A         	movff	pad@buf,fputs@s
  3667  0026EC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3668  0026F0  C011  F00C         	movff	pad@fp,fputs@fp
  3669  0026F4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3670  0026F8  ECED  F015         	call	_fputs	;wreg free
  3671  0026FC                     l2775:
  3672                           
  3673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3674  0026FC  BE16               	btfsc	pad@p+1,7,c
  3675  0026FE  D005               	goto	l2779
  3676  002700  C015  F01A         	movff	pad@p,pad@w
  3677  002704  C016  F01B         	movff	pad@p+1,pad@w+1
  3678  002708  D004               	goto	l120
  3679  00270A                     l2779:
  3680  00270A  0E00               	movlw	0
  3681  00270C  6E1B               	movwf	pad@w+1,c
  3682  00270E  0E00               	movlw	0
  3683  002710  6E1A               	movwf	pad@w,c
  3684  002712                     l120:
  3685                           
  3686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3687  002712  0E00               	movlw	0
  3688  002714  6E19               	movwf	pad@i+1,c
  3689  002716  0E00               	movlw	0
  3690  002718  6E18               	movwf	pad@i,c
  3691                           
  3692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3693  00271A  D00C               	goto	l2785
  3694  00271C                     l2781:
  3695                           
  3696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3697  00271C  0E00               	movlw	0
  3698  00271E  6E02               	movwf	fputc@c+1,c
  3699  002720  0E20               	movlw	32
  3700  002722  6E01               	movwf	fputc@c,c
  3701  002724  C011  F003         	movff	pad@fp,fputc@fp
  3702  002728  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3703  00272C  EC22  F013         	call	_fputc	;wreg free
  3704                           
  3705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3706  002730  4A18               	infsnz	pad@i,f,c
  3707  002732  2A19               	incf	pad@i+1,f,c
  3708  002734                     l2785:
  3709                           
  3710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3711  002734  501A               	movf	pad@w,w,c
  3712  002736  5C18               	subwf	pad@i,w,c
  3713  002738  5019               	movf	pad@i+1,w,c
  3714  00273A  0A80               	xorlw	128
  3715  00273C  6E17               	movwf	??_pad& (0+255),c
  3716  00273E  501B               	movf	pad@w+1,w,c
  3717  002740  0A80               	xorlw	128
  3718  002742  5817               	subwfb	??_pad& (0+255),w,c
  3719  002744  A0D8               	btfss	status,0,c
  3720  002746  D7EA               	goto	l2781
  3721                           
  3722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3723  002748  B05E               	btfsc	_flags,0,c
  3724  00274A  D00A               	goto	l2789
  3725                           
  3726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3727  00274C  C013  F00A         	movff	pad@buf,fputs@s
  3728  002750  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3729  002754  C011  F00C         	movff	pad@fp,fputs@fp
  3730  002758  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3731  00275C  ECED  F015         	call	_fputs	;wreg free
  3732  002760                     l2789:
  3733                           
  3734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3735  002760  C013  F001         	movff	pad@buf,strlen@s
  3736  002764  C014  F002         	movff	pad@buf+1,strlen@s+1
  3737  002768  ECA1  F016         	call	_strlen	;wreg free
  3738  00276C  501A               	movf	pad@w,w,c
  3739  00276E  2401               	addwf	?_strlen,w,c
  3740  002770  6E11               	movwf	?_pad,c
  3741  002772  501B               	movf	pad@w+1,w,c
  3742  002774  2002               	addwfc	?_strlen+1,w,c
  3743  002776  6E12               	movwf	?_pad+1,c
  3744  002778  0012               	return		;funcret
  3745  00277A                     __end_of_pad:
  3746                           	opt callstack 0
  3747                           
  3748 ;; *************** function _strlen *****************
  3749 ;; Defined at:
  3750 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3753 ;;		 -> dbuf(80), main@data(10), 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3756 ;;		 -> dbuf(80), main@data(10), 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  2    0[COMRAM] unsigned int 
  3759 ;; Registers used:
  3760 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3766 ;;      Params:         2       0       0       0       0       0       0       0       0
  3767 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3769 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3770 ;;Total ram usage:        4 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_pad
  3776 ;;		_strcat
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text11
  3781  002D42                     __ptext11:
  3782                           	opt callstack 0
  3783  002D42                     _strlen:
  3784                           	opt callstack 29
  3785                           
  3786                           ;incstack = 0
  3787  002D42  C001  F003         	movff	strlen@s,strlen@a
  3788  002D46  C002  F004         	movff	strlen@s+1,strlen@a+1
  3789  002D4A  D002               	goto	l2559
  3790  002D4C                     l2557:
  3791  002D4C  4A01               	infsnz	strlen@s,f,c
  3792  002D4E  2A02               	incf	strlen@s+1,f,c
  3793  002D50                     l2559:
  3794  002D50  C001  FFD9         	movff	strlen@s,fsr2l
  3795  002D54  C002  FFDA         	movff	strlen@s+1,fsr2h
  3796  002D58  50DF               	movf	indf2,w,c
  3797  002D5A  A4D8               	btfss	status,2,c
  3798  002D5C  D7F7               	goto	l2557
  3799  002D5E  5003               	movf	strlen@a,w,c
  3800  002D60  5C01               	subwf	strlen@s,w,c
  3801  002D62  6E01               	movwf	?_strlen,c
  3802  002D64  5004               	movf	strlen@a+1,w,c
  3803  002D66  5802               	subwfb	strlen@s+1,w,c
  3804  002D68  6E02               	movwf	?_strlen+1,c
  3805  002D6A  0012               	return		;funcret
  3806  002D6C                     __end_of_strlen:
  3807                           	opt callstack 0
  3808                           
  3809 ;; *************** function _fputs *****************
  3810 ;; Defined at:
  3811 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3814 ;;		 -> dbuf(80), 
  3815 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3816 ;;		 -> sprintf@f(6), 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  i               2   14[COMRAM] int 
  3819 ;;  c               1   13[COMRAM] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  2    9[COMRAM] int 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3829 ;;      Params:         4       0       0       0       0       0       0       0       0
  3830 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3832 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3833 ;;Total ram usage:        7 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    2
  3836 ;; This function calls:
  3837 ;;		_fputc
  3838 ;; This function is called by:
  3839 ;;		_pad
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text12
  3844  002BDA                     __ptext12:
  3845                           	opt callstack 0
  3846  002BDA                     _fputs:
  3847                           	opt callstack 23
  3848                           
  3849                           ;incstack = 0
  3850  002BDA  0E00               	movlw	0
  3851  002BDC  6E10               	movwf	fputs@i+1,c
  3852  002BDE  0E00               	movlw	0
  3853  002BE0  6E0F               	movwf	fputs@i,c
  3854  002BE2  D00B               	goto	l2553
  3855  002BE4                     l2549:
  3856  002BE4  C00E  F001         	movff	fputs@c,fputc@c
  3857  002BE8  6A02               	clrf	fputc@c+1,c
  3858  002BEA  C00C  F003         	movff	fputs@fp,fputc@fp
  3859  002BEE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3860  002BF2  EC22  F013         	call	_fputc	;wreg free
  3861  002BF6  4A0F               	infsnz	fputs@i,f,c
  3862  002BF8  2A10               	incf	fputs@i+1,f,c
  3863  002BFA                     l2553:
  3864  002BFA  500F               	movf	fputs@i,w,c
  3865  002BFC  240A               	addwf	fputs@s,w,c
  3866  002BFE  6ED9               	movwf	fsr2l,c
  3867  002C00  5010               	movf	fputs@i+1,w,c
  3868  002C02  200B               	addwfc	fputs@s+1,w,c
  3869  002C04  6EDA               	movwf	fsr2h,c
  3870  002C06  50DF               	movf	indf2,w,c
  3871  002C08  6E0E               	movwf	fputs@c,c
  3872  002C0A  500E               	movf	fputs@c,w,c
  3873  002C0C  B4D8               	btfsc	status,2,c
  3874  002C0E  0012               	return	
  3875  002C10  D7E9               	goto	l2549
  3876  002C12                     __end_of_fputs:
  3877                           	opt callstack 0
  3878                           
  3879 ;; *************** function _fputc *****************
  3880 ;; Defined at:
  3881 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  c               2    0[COMRAM] int 
  3884 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3885 ;;		 -> sprintf@f(6), 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  2    0[COMRAM] int 
  3890 ;; Registers used:
  3891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3897 ;;      Params:         4       0       0       0       0       0       0       0       0
  3898 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3899 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3900 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3901 ;;Total ram usage:        9 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:    1
  3904 ;; This function calls:
  3905 ;;		_putch
  3906 ;; This function is called by:
  3907 ;;		_pad
  3908 ;;		_vfpfcnvrt
  3909 ;;		_fputs
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text13
  3914  002644                     __ptext13:
  3915                           	opt callstack 0
  3916  002644                     _fputc:
  3917                           	opt callstack 26
  3918                           
  3919                           ;incstack = 0
  3920  002644  5003               	movf	fputc@fp,w,c
  3921  002646  1004               	iorwf	fputc@fp+1,w,c
  3922  002648  B4D8               	btfsc	status,2,c
  3923  00264A  D004               	goto	u2460
  3924  00264C  5003               	movf	fputc@fp,w,c
  3925  00264E  1004               	iorwf	fputc@fp+1,w,c
  3926  002650  A4D8               	btfss	status,2,c
  3927  002652  D004               	goto	l2539
  3928  002654                     u2460:
  3929  002654  5001               	movf	fputc@c,w,c
  3930  002656  ECF9  F016         	call	_putch
  3931  00265A  0012               	return	
  3932  00265C                     l2539:
  3933  00265C  EE20 F004          	lfsr	2,4
  3934  002660  5003               	movf	fputc@fp,w,c
  3935  002662  26D9               	addwf	fsr2l,f,c
  3936  002664  5004               	movf	fputc@fp+1,w,c
  3937  002666  22DA               	addwfc	fsr2h,f,c
  3938  002668  50DE               	movf	postinc2,w,c
  3939  00266A  10DE               	iorwf	postinc2,w,c
  3940  00266C  B4D8               	btfsc	status,2,c
  3941  00266E  D016               	goto	u2480
  3942  002670  EE20 F004          	lfsr	2,4
  3943  002674  5003               	movf	fputc@fp,w,c
  3944  002676  26D9               	addwf	fsr2l,f,c
  3945  002678  5004               	movf	fputc@fp+1,w,c
  3946  00267A  22DA               	addwfc	fsr2h,f,c
  3947  00267C  EE10 F002          	lfsr	1,2
  3948  002680  5003               	movf	fputc@fp,w,c
  3949  002682  26E1               	addwf	fsr1l,f,c
  3950  002684  5004               	movf	fputc@fp+1,w,c
  3951  002686  22E2               	addwfc	fsr1h,f,c
  3952  002688  50DE               	movf	postinc2,w,c
  3953  00268A  5CE6               	subwf	postinc1,w,c
  3954  00268C  50E6               	movf	postinc1,w,c
  3955  00268E  0A80               	xorlw	128
  3956  002690  6E09               	movwf	(??_fputc+4)& (0+255),c
  3957  002692  50DE               	movf	postinc2,w,c
  3958  002694  0A80               	xorlw	128
  3959  002696  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  3960  002698  B0D8               	btfsc	status,0,c
  3961  00269A  0012               	return	
  3962  00269C                     u2480:
  3963  00269C  EE20 F002          	lfsr	2,2
  3964  0026A0  5003               	movf	fputc@fp,w,c
  3965  0026A2  26D9               	addwf	fsr2l,f,c
  3966  0026A4  5004               	movf	fputc@fp+1,w,c
  3967  0026A6  22DA               	addwfc	fsr2h,f,c
  3968  0026A8  CFDE F005          	movff	postinc2,??_fputc
  3969  0026AC  CFDD F006          	movff	postdec2,??_fputc+1
  3970  0026B0  C003  FFD9         	movff	fputc@fp,fsr2l
  3971  0026B4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3972  0026B8  CFDE F007          	movff	postinc2,??_fputc+2
  3973  0026BC  CFDD F008          	movff	postdec2,??_fputc+3
  3974  0026C0  5005               	movf	??_fputc,w,c
  3975  0026C2  2407               	addwf	??_fputc+2,w,c
  3976  0026C4  6ED9               	movwf	fsr2l,c
  3977  0026C6  5006               	movf	??_fputc+1,w,c
  3978  0026C8  2008               	addwfc	??_fputc+3,w,c
  3979  0026CA  6EDA               	movwf	fsr2h,c
  3980  0026CC  C001  FFDF         	movff	fputc@c,indf2
  3981  0026D0  EE20 F002          	lfsr	2,2
  3982  0026D4  5003               	movf	fputc@fp,w,c
  3983  0026D6  26D9               	addwf	fsr2l,f,c
  3984  0026D8  5004               	movf	fputc@fp+1,w,c
  3985  0026DA  22DA               	addwfc	fsr2h,f,c
  3986  0026DC  2ADE               	incf	postinc2,f,c
  3987  0026DE  0E00               	movlw	0
  3988  0026E0  22DD               	addwfc	postdec2,f,c
  3989  0026E2  0012               	return		;funcret
  3990  0026E4                     __end_of_fputc:
  3991                           	opt callstack 0
  3992                           
  3993 ;; *************** function _putch *****************
  3994 ;; Defined at:
  3995 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  c               1    wreg     unsigned char 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  c               1    0[COMRAM] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4009 ;;      Params:         0       0       0       0       0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4011 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4012 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4013 ;;Total ram usage:        0 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_fputc
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text14
  4023  002DF2                     __ptext14:
  4024                           	opt callstack 0
  4025  002DF2                     _putch:
  4026                           	opt callstack 26
  4027                           
  4028                           ;incstack = 0
  4029  002DF2  0012               	return		;funcret
  4030  002DF4                     __end_of_putch:
  4031                           	opt callstack 0
  4032                           
  4033 ;; *************** function _floorf *****************
  4034 ;; Defined at:
  4035 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  x               4   25[COMRAM] float 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  u               4   41[COMRAM] struct .
  4040 ;;  m               4   35[COMRAM] unsigned long 
  4041 ;;  e               2   39[COMRAM] int 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  4   25[COMRAM] float 
  4044 ;; Registers used:
  4045 ;;		wreg, status,2, status,0
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4051 ;;      Params:         4       0       0       0       0       0       0       0       0
  4052 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4053 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4054 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4055 ;;Total ram usage:       20 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_efgtoa
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text15
  4065  001E30                     __ptext15:
  4066                           	opt callstack 0
  4067  001E30                     _floorf:
  4068                           	opt callstack 26
  4069                           
  4070                           ;incstack = 0
  4071  001E30  C0BC  F02A         	movff	floorf@F524,floorf@u
  4072  001E34  C0BD  F02B         	movff	floorf@F524+1,floorf@u+1
  4073  001E38  C0BE  F02C         	movff	floorf@F524+2,floorf@u+2
  4074  001E3C  C0BF  F02D         	movff	floorf@F524+3,floorf@u+3
  4075  001E40  C01A  F02A         	movff	floorf@x,floorf@u
  4076  001E44  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4077  001E48  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4078  001E4C  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4079  001E50  0E81               	movlw	129
  4080  001E52  6E1E               	movwf	??_floorf& (0+255),c
  4081  001E54  0EFF               	movlw	255
  4082  001E56  6E1F               	movwf	(??_floorf+1)& (0+255),c
  4083  001E58  C02A  F020         	movff	floorf@u,??_floorf+2
  4084  001E5C  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4085  001E60  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4086  001E64  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4087  001E68  0E18               	movlw	24
  4088  001E6A  D005               	goto	u3080
  4089  001E6C                     u3085:
  4090  001E6C  90D8               	bcf	status,0,c
  4091  001E6E  3223               	rrcf	??_floorf+5,f,c
  4092  001E70  3222               	rrcf	??_floorf+4,f,c
  4093  001E72  3221               	rrcf	??_floorf+3,f,c
  4094  001E74  3220               	rrcf	??_floorf+2,f,c
  4095  001E76                     u3080:
  4096  001E76  2EE8               	decfsz	wreg,f,c
  4097  001E78  D7F9               	goto	u3085
  4098  001E7A  5020               	movf	??_floorf+2,w,c
  4099  001E7C  241E               	addwf	??_floorf,w,c
  4100  001E7E  6E28               	movwf	floorf@e,c
  4101  001E80  0E00               	movlw	0
  4102  001E82  201F               	addwfc	??_floorf+1,w,c
  4103  001E84  6E29               	movwf	floorf@e+1,c
  4104  001E86  BE29               	btfsc	floorf@e+1,7,c
  4105  001E88  D00F               	goto	l2835
  4106  001E8A  5029               	movf	floorf@e+1,w,c
  4107  001E8C  E104               	bnz	u3090
  4108  001E8E  0E17               	movlw	23
  4109  001E90  5C28               	subwf	floorf@e,w,c
  4110  001E92  A0D8               	btfss	status,0,c
  4111  001E94  D009               	goto	l2835
  4112  001E96                     u3090:
  4113  001E96  C01A  F01A         	movff	floorf@x,?_floorf
  4114  001E9A  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4115  001E9E  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4116  001EA2  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4117  001EA6  0012               	return	
  4118  001EA8                     l2835:
  4119  001EA8  BE29               	btfsc	floorf@e+1,7,c
  4120  001EAA  D05E               	goto	l2845
  4121  001EAC  C028  F01E         	movff	floorf@e,??_floorf
  4122  001EB0  0EFF               	movlw	255
  4123  001EB2  6E1F               	movwf	(??_floorf+1)& (0+255),c
  4124  001EB4  0EFF               	movlw	255
  4125  001EB6  6E20               	movwf	(??_floorf+2)& (0+255),c
  4126  001EB8  0E7F               	movlw	127
  4127  001EBA  6E21               	movwf	(??_floorf+3)& (0+255),c
  4128  001EBC  0E00               	movlw	0
  4129  001EBE  6E22               	movwf	(??_floorf+4)& (0+255),c
  4130  001EC0                     u3115:
  4131  001EC0  661E               	tstfsz	??_floorf,c
  4132  001EC2  D001               	goto	u3116
  4133  001EC4  D007               	goto	u3117
  4134  001EC6                     u3116:
  4135  001EC6  3422               	rlcf	??_floorf+4,w,c
  4136  001EC8  3222               	rrcf	??_floorf+4,f,c
  4137  001ECA  3221               	rrcf	??_floorf+3,f,c
  4138  001ECC  3220               	rrcf	??_floorf+2,f,c
  4139  001ECE  321F               	rrcf	??_floorf+1,f,c
  4140  001ED0  2E1E               	decfsz	??_floorf,f,c
  4141  001ED2  D7F6               	goto	u3115
  4142  001ED4                     u3117:
  4143  001ED4  C01F  F024         	movff	??_floorf+1,floorf@m
  4144  001ED8  C020  F025         	movff	??_floorf+2,floorf@m+1
  4145  001EDC  C021  F026         	movff	??_floorf+3,floorf@m+2
  4146  001EE0  C022  F027         	movff	??_floorf+4,floorf@m+3
  4147  001EE4  5024               	movf	floorf@m,w,c
  4148  001EE6  142A               	andwf	floorf@u,w,c
  4149  001EE8  6E1E               	movwf	??_floorf& (0+255),c
  4150  001EEA  5025               	movf	floorf@m+1,w,c
  4151  001EEC  142B               	andwf	floorf@u+1,w,c
  4152  001EEE  6E1F               	movwf	(??_floorf+1)& (0+255),c
  4153  001EF0  5026               	movf	floorf@m+2,w,c
  4154  001EF2  142C               	andwf	floorf@u+2,w,c
  4155  001EF4  6E20               	movwf	(??_floorf+2)& (0+255),c
  4156  001EF6  5027               	movf	floorf@m+3,w,c
  4157  001EF8  142D               	andwf	floorf@u+3,w,c
  4158  001EFA  6E21               	movwf	(??_floorf+3)& (0+255),c
  4159  001EFC  501E               	movf	??_floorf,w,c
  4160  001EFE  101F               	iorwf	??_floorf+1,w,c
  4161  001F00  1020               	iorwf	??_floorf+2,w,c
  4162  001F02  1021               	iorwf	??_floorf+3,w,c
  4163  001F04  B4D8               	btfsc	status,2,c
  4164  001F06  D7C7               	goto	u3090
  4165  001F08  C02A  F01E         	movff	floorf@u,??_floorf
  4166  001F0C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4167  001F10  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4168  001F14  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4169  001F18  0E20               	movlw	32
  4170  001F1A  D005               	goto	u3130
  4171  001F1C                     u3135:
  4172  001F1C  90D8               	bcf	status,0,c
  4173  001F1E  3221               	rrcf	??_floorf+3,f,c
  4174  001F20  3220               	rrcf	??_floorf+2,f,c
  4175  001F22  321F               	rrcf	??_floorf+1,f,c
  4176  001F24  321E               	rrcf	??_floorf,f,c
  4177  001F26                     u3130:
  4178  001F26  2EE8               	decfsz	wreg,f,c
  4179  001F28  D7F9               	goto	u3135
  4180  001F2A  501E               	movf	??_floorf,w,c
  4181  001F2C  101F               	iorwf	??_floorf+1,w,c
  4182  001F2E  1020               	iorwf	??_floorf+2,w,c
  4183  001F30  1021               	iorwf	??_floorf+3,w,c
  4184  001F32  B4D8               	btfsc	status,2,c
  4185  001F34  D008               	goto	l972
  4186  001F36  5024               	movf	floorf@m,w,c
  4187  001F38  262A               	addwf	floorf@u,f,c
  4188  001F3A  5025               	movf	floorf@m+1,w,c
  4189  001F3C  222B               	addwfc	floorf@u+1,f,c
  4190  001F3E  5026               	movf	floorf@m+2,w,c
  4191  001F40  222C               	addwfc	floorf@u+2,f,c
  4192  001F42  5027               	movf	floorf@m+3,w,c
  4193  001F44  222D               	addwfc	floorf@u+3,f,c
  4194  001F46                     l972:
  4195  001F46  1C24               	comf	floorf@m,w,c
  4196  001F48  6E1E               	movwf	??_floorf& (0+255),c
  4197  001F4A  1C25               	comf	floorf@m+1,w,c
  4198  001F4C  6E1F               	movwf	(??_floorf+1)& (0+255),c
  4199  001F4E  1C26               	comf	floorf@m+2,w,c
  4200  001F50  6E20               	movwf	(??_floorf+2)& (0+255),c
  4201  001F52  1C27               	comf	floorf@m+3,w,c
  4202  001F54  6E21               	movwf	(??_floorf+3)& (0+255),c
  4203  001F56  501E               	movf	??_floorf,w,c
  4204  001F58  162A               	andwf	floorf@u,f,c
  4205  001F5A  501F               	movf	??_floorf+1,w,c
  4206  001F5C  162B               	andwf	floorf@u+1,f,c
  4207  001F5E  5020               	movf	??_floorf+2,w,c
  4208  001F60  162C               	andwf	floorf@u+2,f,c
  4209  001F62  5021               	movf	??_floorf+3,w,c
  4210  001F64  162D               	andwf	floorf@u+3,f,c
  4211  001F66  D036               	goto	l2853
  4212  001F68                     l2845:
  4213  001F68  C02A  F01E         	movff	floorf@u,??_floorf
  4214  001F6C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4215  001F70  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4216  001F74  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4217  001F78  0E20               	movlw	32
  4218  001F7A  D005               	goto	u3150
  4219  001F7C                     u3155:
  4220  001F7C  90D8               	bcf	status,0,c
  4221  001F7E  3221               	rrcf	??_floorf+3,f,c
  4222  001F80  3220               	rrcf	??_floorf+2,f,c
  4223  001F82  321F               	rrcf	??_floorf+1,f,c
  4224  001F84  321E               	rrcf	??_floorf,f,c
  4225  001F86                     u3150:
  4226  001F86  2EE8               	decfsz	wreg,f,c
  4227  001F88  D7F9               	goto	u3155
  4228  001F8A  501E               	movf	??_floorf,w,c
  4229  001F8C  101F               	iorwf	??_floorf+1,w,c
  4230  001F8E  1020               	iorwf	??_floorf+2,w,c
  4231  001F90  1021               	iorwf	??_floorf+3,w,c
  4232  001F92  A4D8               	btfss	status,2,c
  4233  001F94  D008               	goto	l2849
  4234  001F96  0E00               	movlw	0
  4235  001F98  6E2A               	movwf	floorf@u,c
  4236  001F9A  0E00               	movlw	0
  4237  001F9C  6E2B               	movwf	floorf@u+1,c
  4238  001F9E  0E00               	movlw	0
  4239  001FA0  6E2C               	movwf	floorf@u+2,c
  4240  001FA2  0E00               	movlw	0
  4241  001FA4  D016               	goto	L6
  4242  001FA6                     l2849:
  4243  001FA6  90D8               	bcf	status,0,c
  4244  001FA8  342A               	rlcf	floorf@u,w,c
  4245  001FAA  6E1E               	movwf	??_floorf& (0+255),c
  4246  001FAC  342B               	rlcf	floorf@u+1,w,c
  4247  001FAE  6E1F               	movwf	(??_floorf+1)& (0+255),c
  4248  001FB0  342C               	rlcf	floorf@u+2,w,c
  4249  001FB2  6E20               	movwf	(??_floorf+2)& (0+255),c
  4250  001FB4  342D               	rlcf	floorf@u+3,w,c
  4251  001FB6  6E21               	movwf	(??_floorf+3)& (0+255),c
  4252  001FB8  501E               	movf	??_floorf,w,c
  4253  001FBA  101F               	iorwf	??_floorf+1,w,c
  4254  001FBC  1020               	iorwf	??_floorf+2,w,c
  4255  001FBE  1021               	iorwf	??_floorf+3,w,c
  4256  001FC0  B4D8               	btfsc	status,2,c
  4257  001FC2  D008               	goto	l2853
  4258  001FC4  0E00               	movlw	0
  4259  001FC6  6E2A               	movwf	floorf@u,c
  4260  001FC8  0E00               	movlw	0
  4261  001FCA  6E2B               	movwf	floorf@u+1,c
  4262  001FCC  0E80               	movlw	128
  4263  001FCE  6E2C               	movwf	floorf@u+2,c
  4264  001FD0  0EBF               	movlw	191
  4265  001FD2                     L6:
  4266  001FD2  6E2D               	movwf	floorf@u+3,c
  4267  001FD4                     l2853:
  4268  001FD4  C02A  F01A         	movff	floorf@u,?_floorf
  4269  001FD8  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4270  001FDC  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4271  001FE0  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4272  001FE4  0012               	return		;funcret
  4273  001FE6                     __end_of_floorf:
  4274                           	opt callstack 0
  4275                           
  4276 ;; *************** function ___fpclassifyf *****************
  4277 ;; Defined at:
  4278 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  x               4    0[COMRAM] float 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  u               4   10[COMRAM] struct .
  4283 ;;  e               2    8[COMRAM] int 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  2    0[COMRAM] int 
  4286 ;; Registers used:
  4287 ;;		wreg, status,2, status,0
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4293 ;;      Params:         4       0       0       0       0       0       0       0       0
  4294 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4295 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4296 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4297 ;;Total ram usage:       14 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_efgtoa
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text16
  4307  00241C                     __ptext16:
  4308                           	opt callstack 0
  4309  00241C                     ___fpclassifyf:
  4310                           	opt callstack 26
  4311                           
  4312                           ;incstack = 0
  4313  00241C  C0C0  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4314  002420  C0C1  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4315  002424  C0C2  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4316  002428  C0C3  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4317  00242C  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4318  002430  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4319  002434  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4320  002438  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4321  00243C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4322  002440  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4323  002444  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4324  002448  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4325  00244C  0E18               	movlw	24
  4326  00244E  D005               	goto	u2960
  4327  002450                     u2965:
  4328  002450  90D8               	bcf	status,0,c
  4329  002452  3208               	rrcf	??___fpclassifyf+3,f,c
  4330  002454  3207               	rrcf	??___fpclassifyf+2,f,c
  4331  002456  3206               	rrcf	??___fpclassifyf+1,f,c
  4332  002458  3205               	rrcf	??___fpclassifyf,f,c
  4333  00245A                     u2960:
  4334  00245A  2EE8               	decfsz	wreg,f,c
  4335  00245C  D7F9               	goto	u2965
  4336  00245E  5005               	movf	??___fpclassifyf,w,c
  4337  002460  6E09               	movwf	___fpclassifyf@e,c
  4338  002462  6A0A               	clrf	___fpclassifyf@e+1,c
  4339  002464  5009               	movf	___fpclassifyf@e,w,c
  4340  002466  100A               	iorwf	___fpclassifyf@e+1,w,c
  4341  002468  A4D8               	btfss	status,2,c
  4342  00246A  D019               	goto	l2805
  4343  00246C  90D8               	bcf	status,0,c
  4344  00246E  340B               	rlcf	___fpclassifyf@u,w,c
  4345  002470  6E05               	movwf	??___fpclassifyf& (0+255),c
  4346  002472  340C               	rlcf	___fpclassifyf@u+1,w,c
  4347  002474  6E06               	movwf	(??___fpclassifyf+1)& (0+255),c
  4348  002476  340D               	rlcf	___fpclassifyf@u+2,w,c
  4349  002478  6E07               	movwf	(??___fpclassifyf+2)& (0+255),c
  4350  00247A  340E               	rlcf	___fpclassifyf@u+3,w,c
  4351  00247C  6E08               	movwf	(??___fpclassifyf+3)& (0+255),c
  4352  00247E  5005               	movf	??___fpclassifyf,w,c
  4353  002480  1006               	iorwf	??___fpclassifyf+1,w,c
  4354  002482  1007               	iorwf	??___fpclassifyf+2,w,c
  4355  002484  1008               	iorwf	??___fpclassifyf+3,w,c
  4356  002486  A4D8               	btfss	status,2,c
  4357  002488  D005               	goto	l2801
  4358  00248A  0E00               	movlw	0
  4359  00248C  6E02               	movwf	?___fpclassifyf+1,c
  4360  00248E  0E02               	movlw	2
  4361  002490  6E01               	movwf	?___fpclassifyf,c
  4362  002492  0012               	return	
  4363  002494                     l2801:
  4364  002494  0E00               	movlw	0
  4365  002496  6E02               	movwf	?___fpclassifyf+1,c
  4366  002498  0E03               	movlw	3
  4367  00249A  6E01               	movwf	?___fpclassifyf,c
  4368  00249C  0012               	return	
  4369  00249E                     l2805:
  4370  00249E  2809               	incf	___fpclassifyf@e,w,c
  4371  0024A0  100A               	iorwf	___fpclassifyf@e+1,w,c
  4372  0024A2  A4D8               	btfss	status,2,c
  4373  0024A4  D01C               	goto	l2811
  4374  0024A6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4375  0024AA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4376  0024AE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4377  0024B2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4378  0024B6  0E09               	movlw	9
  4379  0024B8                     u3005:
  4380  0024B8  90D8               	bcf	status,0,c
  4381  0024BA  3605               	rlcf	??___fpclassifyf,f,c
  4382  0024BC  3606               	rlcf	??___fpclassifyf+1,f,c
  4383  0024BE  3607               	rlcf	??___fpclassifyf+2,f,c
  4384  0024C0  3608               	rlcf	??___fpclassifyf+3,f,c
  4385  0024C2  2EE8               	decfsz	wreg,f,c
  4386  0024C4  D7F9               	goto	u3005
  4387  0024C6  5005               	movf	??___fpclassifyf,w,c
  4388  0024C8  1006               	iorwf	??___fpclassifyf+1,w,c
  4389  0024CA  1007               	iorwf	??___fpclassifyf+2,w,c
  4390  0024CC  1008               	iorwf	??___fpclassifyf+3,w,c
  4391  0024CE  A4D8               	btfss	status,2,c
  4392  0024D0  D002               	goto	u3010
  4393  0024D2  0E01               	movlw	1
  4394  0024D4  D001               	goto	u3020
  4395  0024D6                     u3010:
  4396  0024D6  0E00               	movlw	0
  4397  0024D8                     u3020:
  4398  0024D8  6E01               	movwf	?___fpclassifyf,c
  4399  0024DA  6A02               	clrf	?___fpclassifyf+1,c
  4400  0024DC  0012               	return	
  4401  0024DE                     l2811:
  4402  0024DE  0E00               	movlw	0
  4403  0024E0  6E02               	movwf	?___fpclassifyf+1,c
  4404  0024E2  0E04               	movlw	4
  4405  0024E4  6E01               	movwf	?___fpclassifyf,c
  4406  0024E6  0012               	return		;funcret
  4407  0024E8                     __end_of___fpclassifyf:
  4408                           	opt callstack 0
  4409                           
  4410 ;; *************** function ___fltol *****************
  4411 ;; Defined at:
  4412 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  f1              4    0[COMRAM] int 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  exp1            1    9[COMRAM] unsigned char 
  4417 ;;  sign1           1    8[COMRAM] unsigned char 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  4    0[COMRAM] long 
  4420 ;; Registers used:
  4421 ;;		wreg, status,2, status,0
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4427 ;;      Params:         4       0       0       0       0       0       0       0       0
  4428 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4429 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4430 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4431 ;;Total ram usage:       10 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_efgtoa
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text17
  4441  0024E8                     __ptext17:
  4442                           	opt callstack 0
  4443  0024E8                     ___fltol:
  4444                           	opt callstack 26
  4445                           
  4446                           ;incstack = 0
  4447  0024E8  3403               	rlcf	___fltol@f1+2,w,c
  4448  0024EA  3404               	rlcf	___fltol@f1+3,w,c
  4449  0024EC  6E0A               	movwf	___fltol@exp1,c
  4450  0024EE  500A               	movf	___fltol@exp1,w,c
  4451  0024F0  A4D8               	btfss	status,2,c
  4452  0024F2  D009               	goto	l3273
  4453  0024F4                     u3830:
  4454  0024F4  0E00               	movlw	0
  4455  0024F6  6E01               	movwf	?___fltol,c
  4456  0024F8  0E00               	movlw	0
  4457  0024FA  6E02               	movwf	?___fltol+1,c
  4458  0024FC  0E00               	movlw	0
  4459  0024FE  6E03               	movwf	?___fltol+2,c
  4460  002500  0E00               	movlw	0
  4461  002502  6E04               	movwf	?___fltol+3,c
  4462  002504  0012               	return	
  4463  002506                     l3273:
  4464  002506  C001  F005         	movff	___fltol@f1,??___fltol
  4465  00250A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4466  00250E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4467  002512  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4468  002516  0E20               	movlw	32
  4469  002518  D005               	goto	u3840
  4470  00251A                     u3845:
  4471  00251A  90D8               	bcf	status,0,c
  4472  00251C  3208               	rrcf	??___fltol+3,f,c
  4473  00251E  3207               	rrcf	??___fltol+2,f,c
  4474  002520  3206               	rrcf	??___fltol+1,f,c
  4475  002522  3205               	rrcf	??___fltol,f,c
  4476  002524                     u3840:
  4477  002524  2EE8               	decfsz	wreg,f,c
  4478  002526  D7F9               	goto	u3845
  4479  002528  5005               	movf	??___fltol,w,c
  4480  00252A  6E09               	movwf	___fltol@sign1,c
  4481  00252C  8E03               	bsf	___fltol@f1+2,7,c
  4482  00252E  0EFF               	movlw	255
  4483  002530  1601               	andwf	___fltol@f1,f,c
  4484  002532  0EFF               	movlw	255
  4485  002534  1602               	andwf	___fltol@f1+1,f,c
  4486  002536  0EFF               	movlw	255
  4487  002538  1603               	andwf	___fltol@f1+2,f,c
  4488  00253A  0E00               	movlw	0
  4489  00253C  1604               	andwf	___fltol@f1+3,f,c
  4490  00253E  0E96               	movlw	150
  4491  002540  5E0A               	subwf	___fltol@exp1,f,c
  4492  002542  AE0A               	btfss	___fltol@exp1,7,c
  4493  002544  D00D               	goto	l3293
  4494  002546  500A               	movf	___fltol@exp1,w,c
  4495  002548  0A80               	xorlw	128
  4496  00254A  0F97               	addlw	151
  4497  00254C  A0D8               	btfss	status,0,c
  4498  00254E  D7D2               	goto	u3830
  4499  002550                     l3289:
  4500  002550  90D8               	bcf	status,0,c
  4501  002552  3204               	rrcf	___fltol@f1+3,f,c
  4502  002554  3203               	rrcf	___fltol@f1+2,f,c
  4503  002556  3202               	rrcf	___fltol@f1+1,f,c
  4504  002558  3201               	rrcf	___fltol@f1,f,c
  4505  00255A  3E0A               	incfsz	___fltol@exp1,f,c
  4506  00255C  D7F9               	goto	l3289
  4507  00255E  D00D               	goto	u3880
  4508  002560                     l3293:
  4509  002560  0E1F               	movlw	31
  4510  002562  640A               	cpfsgt	___fltol@exp1,c
  4511  002564  D007               	goto	l3301
  4512  002566  D7C6               	goto	u3830
  4513  002568                     l3299:
  4514  002568  90D8               	bcf	status,0,c
  4515  00256A  3601               	rlcf	___fltol@f1,f,c
  4516  00256C  3602               	rlcf	___fltol@f1+1,f,c
  4517  00256E  3603               	rlcf	___fltol@f1+2,f,c
  4518  002570  3604               	rlcf	___fltol@f1+3,f,c
  4519  002572  060A               	decf	___fltol@exp1,f,c
  4520  002574                     l3301:
  4521  002574  500A               	movf	___fltol@exp1,w,c
  4522  002576  A4D8               	btfss	status,2,c
  4523  002578  D7F7               	goto	l3299
  4524  00257A                     u3880:
  4525  00257A  5009               	movf	___fltol@sign1,w,c
  4526  00257C  B4D8               	btfsc	status,2,c
  4527  00257E  D008               	goto	l3307
  4528  002580  1E04               	comf	___fltol@f1+3,f,c
  4529  002582  1E03               	comf	___fltol@f1+2,f,c
  4530  002584  1E02               	comf	___fltol@f1+1,f,c
  4531  002586  6C01               	negf	___fltol@f1,c
  4532  002588  0E00               	movlw	0
  4533  00258A  2202               	addwfc	___fltol@f1+1,f,c
  4534  00258C  2203               	addwfc	___fltol@f1+2,f,c
  4535  00258E  2204               	addwfc	___fltol@f1+3,f,c
  4536  002590                     l3307:
  4537  002590  C001  F001         	movff	___fltol@f1,?___fltol
  4538  002594  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4539  002598  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4540  00259C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4541  0025A0  0012               	return		;funcret
  4542  0025A2                     __end_of___fltol:
  4543                           	opt callstack 0
  4544                           
  4545 ;; *************** function ___flsub *****************
  4546 ;; Defined at:
  4547 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  b               4   39[COMRAM] long 
  4550 ;;  a               4   43[COMRAM] long 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  4   39[COMRAM] long 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4562 ;;      Params:         8       0       0       0       0       0       0       0       0
  4563 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4565 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4566 ;;Total ram usage:        8 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    1
  4569 ;; This function calls:
  4570 ;;		___fladd
  4571 ;; This function is called by:
  4572 ;;		_efgtoa
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text18
  4577  002B56                     __ptext18:
  4578                           	opt callstack 0
  4579  002B56                     ___flsub:
  4580                           	opt callstack 25
  4581                           
  4582                           ;incstack = 0
  4583  002B56  0E00               	movlw	0
  4584  002B58  1A2C               	xorwf	___flsub@a,f,c
  4585  002B5A  0E00               	movlw	0
  4586  002B5C  1A2D               	xorwf	___flsub@a+1,f,c
  4587  002B5E  0E00               	movlw	0
  4588  002B60  1A2E               	xorwf	___flsub@a+2,f,c
  4589  002B62  0E80               	movlw	128
  4590  002B64  1A2F               	xorwf	___flsub@a+3,f,c
  4591  002B66  C028  F001         	movff	___flsub@b,___fladd@b
  4592  002B6A  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4593  002B6E  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4594  002B72  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4595  002B76  C02C  F005         	movff	___flsub@a,___fladd@a
  4596  002B7A  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4597  002B7E  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4598  002B82  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4599  002B86  EC4E  F00C         	call	___fladd	;wreg free
  4600  002B8A  C001  F028         	movff	?___fladd,?___flsub
  4601  002B8E  C002  F029         	movff	?___fladd+1,?___flsub+1
  4602  002B92  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4603  002B96  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4604  002B9A  0012               	return		;funcret
  4605  002B9C                     __end_of___flsub:
  4606                           	opt callstack 0
  4607                           
  4608 ;; *************** function ___fladd *****************
  4609 ;; Defined at:
  4610 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  b               4    0[COMRAM] long 
  4613 ;;  a               4    4[COMRAM] long 
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;  grs             1   15[COMRAM] unsigned char 
  4616 ;;  bexp            1   14[COMRAM] unsigned char 
  4617 ;;  aexp            1   13[COMRAM] unsigned char 
  4618 ;;  signs           1   12[COMRAM] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  4    0[COMRAM] unsigned char 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4628 ;;      Params:         8       0       0       0       0       0       0       0       0
  4629 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4630 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4631 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4632 ;;Total ram usage:       16 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_efgtoa
  4638 ;;		___flsub
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text19
  4643  00189C                     __ptext19:
  4644                           	opt callstack 0
  4645  00189C                     ___fladd:
  4646                           	opt callstack 25
  4647                           
  4648                           ;incstack = 0
  4649  00189C  5004               	movf	___fladd@b+3,w,c
  4650  00189E  0B80               	andlw	128
  4651  0018A0  6E0D               	movwf	___fladd@signs,c
  4652  0018A2  5004               	movf	___fladd@b+3,w,c
  4653  0018A4  2404               	addwf	___fladd@b+3,w,c
  4654  0018A6  6E0F               	movwf	___fladd@bexp,c
  4655  0018A8  BE03               	btfsc	___fladd@b+2,7,c
  4656  0018AA  800F               	bsf	___fladd@bexp,0,c
  4657  0018AC  500F               	movf	___fladd@bexp,w,c
  4658  0018AE  B4D8               	btfsc	status,2,c
  4659  0018B0  D00D               	goto	l2585
  4660  0018B2  280F               	incf	___fladd@bexp,w,c
  4661  0018B4  A4D8               	btfss	status,2,c
  4662  0018B6  D008               	goto	l2581
  4663  0018B8  0E00               	movlw	0
  4664  0018BA  6E01               	movwf	___fladd@b,c
  4665  0018BC  0E00               	movlw	0
  4666  0018BE  6E02               	movwf	___fladd@b+1,c
  4667  0018C0  0E00               	movlw	0
  4668  0018C2  6E03               	movwf	___fladd@b+2,c
  4669  0018C4  0E00               	movlw	0
  4670  0018C6  6E04               	movwf	___fladd@b+3,c
  4671  0018C8                     l2581:
  4672  0018C8  8E03               	bsf	___fladd@b+2,7,c
  4673  0018CA  D006               	goto	L7
  4674  0018CC                     l2585:
  4675  0018CC  0E00               	movlw	0
  4676  0018CE  6E01               	movwf	___fladd@b,c
  4677  0018D0  0E00               	movlw	0
  4678  0018D2  6E02               	movwf	___fladd@b+1,c
  4679  0018D4  0E00               	movlw	0
  4680  0018D6  6E03               	movwf	___fladd@b+2,c
  4681  0018D8                     L7:
  4682  0018D8  0E00               	movlw	0
  4683  0018DA  6E04               	movwf	___fladd@b+3,c
  4684  0018DC  5008               	movf	___fladd@a+3,w,c
  4685  0018DE  0B80               	andlw	128
  4686  0018E0  6E0E               	movwf	___fladd@aexp,c
  4687  0018E2  500D               	movf	___fladd@signs,w,c
  4688  0018E4  180E               	xorwf	___fladd@aexp,w,c
  4689  0018E6  A4D8               	btfss	status,2,c
  4690  0018E8  8C0D               	bsf	___fladd@signs,6,c
  4691  0018EA  5008               	movf	___fladd@a+3,w,c
  4692  0018EC  2408               	addwf	___fladd@a+3,w,c
  4693  0018EE  6E0E               	movwf	___fladd@aexp,c
  4694  0018F0  BE07               	btfsc	___fladd@a+2,7,c
  4695  0018F2  800E               	bsf	___fladd@aexp,0,c
  4696  0018F4  500E               	movf	___fladd@aexp,w,c
  4697  0018F6  B4D8               	btfsc	status,2,c
  4698  0018F8  D00D               	goto	l2609
  4699  0018FA  280E               	incf	___fladd@aexp,w,c
  4700  0018FC  A4D8               	btfss	status,2,c
  4701  0018FE  D008               	goto	l2605
  4702  001900  0E00               	movlw	0
  4703  001902  6E05               	movwf	___fladd@a,c
  4704  001904  0E00               	movlw	0
  4705  001906  6E06               	movwf	___fladd@a+1,c
  4706  001908  0E00               	movlw	0
  4707  00190A  6E07               	movwf	___fladd@a+2,c
  4708  00190C  0E00               	movlw	0
  4709  00190E  6E08               	movwf	___fladd@a+3,c
  4710  001910                     l2605:
  4711  001910  8E07               	bsf	___fladd@a+2,7,c
  4712  001912  D006               	goto	L8
  4713  001914                     l2609:
  4714  001914  0E00               	movlw	0
  4715  001916  6E05               	movwf	___fladd@a,c
  4716  001918  0E00               	movlw	0
  4717  00191A  6E06               	movwf	___fladd@a+1,c
  4718  00191C  0E00               	movlw	0
  4719  00191E  6E07               	movwf	___fladd@a+2,c
  4720  001920                     L8:
  4721  001920  0E00               	movlw	0
  4722  001922  6E08               	movwf	___fladd@a+3,c
  4723  001924  500F               	movf	___fladd@bexp,w,c
  4724  001926  5C0E               	subwf	___fladd@aexp,w,c
  4725  001928  B0D8               	btfsc	status,0,c
  4726  00192A  D022               	goto	l2647
  4727  00192C  AC0D               	btfss	___fladd@signs,6,c
  4728  00192E  D002               	goto	l2617
  4729  001930  0E80               	movlw	128
  4730  001932  1A0D               	xorwf	___fladd@signs,f,c
  4731  001934                     l2617:
  4732  001934  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4733  001938  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4734  00193C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4735  001940  C001  F010         	movff	___fladd@b,___fladd@grs
  4736  001944  C005  F001         	movff	___fladd@a,___fladd@b
  4737  001948  C010  F005         	movff	___fladd@grs,___fladd@a
  4738  00194C  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4739  001950  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4740  001954  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4741  001958  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4742  00195C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4743  001960  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4744  001964  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4745  001968  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4746  00196C  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4747  001970                     l2647:
  4748  001970  0E00               	movlw	0
  4749  001972  6E10               	movwf	___fladd@grs,c
  4750  001974  500F               	movf	___fladd@bexp,w,c
  4751  001976  C00E  F009         	movff	___fladd@aexp,??___fladd
  4752  00197A  6A0A               	clrf	(??___fladd+1)& (0+255),c
  4753  00197C  5E09               	subwf	??___fladd,f,c
  4754  00197E  0E00               	movlw	0
  4755  001980  5A0A               	subwfb	??___fladd+1,f,c
  4756  001982  BE0A               	btfsc	??___fladd+1,7,c
  4757  001984  D02C               	goto	l779
  4758  001986  500A               	movf	??___fladd+1,w,c
  4759  001988  E104               	bnz	u2620
  4760  00198A  0E1A               	movlw	26
  4761  00198C  5C09               	subwf	??___fladd,w,c
  4762  00198E  A0D8               	btfss	status,0,c
  4763  001990  D026               	goto	l779
  4764  001992                     u2620:
  4765  001992  5001               	movf	___fladd@b,w,c
  4766  001994  1002               	iorwf	___fladd@b+1,w,c
  4767  001996  1003               	iorwf	___fladd@b+2,w,c
  4768  001998  1004               	iorwf	___fladd@b+3,w,c
  4769  00199A  B4D8               	btfsc	status,2,c
  4770  00199C  D002               	goto	u2630
  4771  00199E  0E01               	movlw	1
  4772  0019A0  D001               	goto	u2640
  4773  0019A2                     u2630:
  4774  0019A2  0E00               	movlw	0
  4775  0019A4                     u2640:
  4776  0019A4  6E10               	movwf	___fladd@grs,c
  4777  0019A6  0E00               	movlw	0
  4778  0019A8  6E01               	movwf	___fladd@b,c
  4779  0019AA  0E00               	movlw	0
  4780  0019AC  6E02               	movwf	___fladd@b+1,c
  4781  0019AE  0E00               	movlw	0
  4782  0019B0  6E03               	movwf	___fladd@b+2,c
  4783  0019B2  0E00               	movlw	0
  4784  0019B4  6E04               	movwf	___fladd@b+3,c
  4785  0019B6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4786  0019BA  D015               	goto	u2670
  4787  0019BC                     l780:
  4788  0019BC  A010               	btfss	___fladd@grs,0,c
  4789  0019BE  D005               	goto	l2659
  4790  0019C0  90D8               	bcf	status,0,c
  4791  0019C2  3010               	rrcf	___fladd@grs,w,c
  4792  0019C4  0901               	iorlw	1
  4793  0019C6  6E10               	movwf	___fladd@grs,c
  4794  0019C8  D002               	goto	l2661
  4795  0019CA                     l2659:
  4796  0019CA  90D8               	bcf	status,0,c
  4797  0019CC  3210               	rrcf	___fladd@grs,f,c
  4798  0019CE                     l2661:
  4799  0019CE  B001               	btfsc	___fladd@b,0,c
  4800  0019D0  8E10               	bsf	___fladd@grs,7,c
  4801  0019D2  3404               	rlcf	___fladd@b+3,w,c
  4802  0019D4  3204               	rrcf	___fladd@b+3,f,c
  4803  0019D6  3203               	rrcf	___fladd@b+2,f,c
  4804  0019D8  3202               	rrcf	___fladd@b+1,f,c
  4805  0019DA  3201               	rrcf	___fladd@b,f,c
  4806  0019DC  2A0F               	incf	___fladd@bexp,f,c
  4807  0019DE                     l779:
  4808  0019DE  500E               	movf	___fladd@aexp,w,c
  4809  0019E0  5C0F               	subwf	___fladd@bexp,w,c
  4810  0019E2  A0D8               	btfss	status,0,c
  4811  0019E4  D7EB               	goto	l780
  4812  0019E6                     u2670:
  4813  0019E6  BC0D               	btfsc	___fladd@signs,6,c
  4814  0019E8  D028               	goto	l2693
  4815  0019EA  500F               	movf	___fladd@bexp,w,c
  4816  0019EC  A4D8               	btfss	status,2,c
  4817  0019EE  D009               	goto	l2675
  4818  0019F0  0E00               	movlw	0
  4819  0019F2  6E01               	movwf	?___fladd,c
  4820  0019F4  0E00               	movlw	0
  4821  0019F6  6E02               	movwf	?___fladd+1,c
  4822  0019F8  0E00               	movlw	0
  4823  0019FA  6E03               	movwf	?___fladd+2,c
  4824  0019FC  0E00               	movlw	0
  4825  0019FE  6E04               	movwf	?___fladd+3,c
  4826  001A00  0012               	return	
  4827  001A02                     l2675:
  4828  001A02  5005               	movf	___fladd@a,w,c
  4829  001A04  2601               	addwf	___fladd@b,f,c
  4830  001A06  5006               	movf	___fladd@a+1,w,c
  4831  001A08  2202               	addwfc	___fladd@b+1,f,c
  4832  001A0A  5007               	movf	___fladd@a+2,w,c
  4833  001A0C  2203               	addwfc	___fladd@b+2,f,c
  4834  001A0E  5008               	movf	___fladd@a+3,w,c
  4835  001A10  2204               	addwfc	___fladd@b+3,f,c
  4836  001A12  A004               	btfss	___fladd@b+3,0,c
  4837  001A14  D071               	goto	u2800
  4838  001A16  A010               	btfss	___fladd@grs,0,c
  4839  001A18  D005               	goto	l2683
  4840  001A1A  90D8               	bcf	status,0,c
  4841  001A1C  3010               	rrcf	___fladd@grs,w,c
  4842  001A1E  0901               	iorlw	1
  4843  001A20  6E10               	movwf	___fladd@grs,c
  4844  001A22  D002               	goto	l2685
  4845  001A24                     l2683:
  4846  001A24  90D8               	bcf	status,0,c
  4847  001A26  3210               	rrcf	___fladd@grs,f,c
  4848  001A28                     l2685:
  4849  001A28  B001               	btfsc	___fladd@b,0,c
  4850  001A2A  8E10               	bsf	___fladd@grs,7,c
  4851  001A2C  3404               	rlcf	___fladd@b+3,w,c
  4852  001A2E  3204               	rrcf	___fladd@b+3,f,c
  4853  001A30  3203               	rrcf	___fladd@b+2,f,c
  4854  001A32  3202               	rrcf	___fladd@b+1,f,c
  4855  001A34  3201               	rrcf	___fladd@b,f,c
  4856  001A36  2A0F               	incf	___fladd@bexp,f,c
  4857  001A38  D05F               	goto	u2800
  4858  001A3A                     l2693:
  4859  001A3A  5005               	movf	___fladd@a,w,c
  4860  001A3C  5C01               	subwf	___fladd@b,w,c
  4861  001A3E  5006               	movf	___fladd@a+1,w,c
  4862  001A40  5802               	subwfb	___fladd@b+1,w,c
  4863  001A42  5007               	movf	___fladd@a+2,w,c
  4864  001A44  5803               	subwfb	___fladd@b+2,w,c
  4865  001A46  5004               	movf	___fladd@b+3,w,c
  4866  001A48  0A80               	xorlw	128
  4867  001A4A  6E09               	movwf	??___fladd& (0+255),c
  4868  001A4C  5008               	movf	___fladd@a+3,w,c
  4869  001A4E  0A80               	xorlw	128
  4870  001A50  5809               	subwfb	??___fladd& (0+255),w,c
  4871  001A52  B0D8               	btfsc	status,0,c
  4872  001A54  D025               	goto	l2703
  4873  001A56  5001               	movf	___fladd@b,w,c
  4874  001A58  5C05               	subwf	___fladd@a,w,c
  4875  001A5A  6E09               	movwf	??___fladd& (0+255),c
  4876  001A5C  5002               	movf	___fladd@b+1,w,c
  4877  001A5E  5806               	subwfb	___fladd@a+1,w,c
  4878  001A60  6E0A               	movwf	(??___fladd+1)& (0+255),c
  4879  001A62  5003               	movf	___fladd@b+2,w,c
  4880  001A64  5807               	subwfb	___fladd@a+2,w,c
  4881  001A66  6E0B               	movwf	(??___fladd+2)& (0+255),c
  4882  001A68  5004               	movf	___fladd@b+3,w,c
  4883  001A6A  5808               	subwfb	___fladd@a+3,w,c
  4884  001A6C  6E0C               	movwf	(??___fladd+3)& (0+255),c
  4885  001A6E  0EFF               	movlw	255
  4886  001A70  2409               	addwf	??___fladd,w,c
  4887  001A72  6E01               	movwf	___fladd@b,c
  4888  001A74  0EFF               	movlw	255
  4889  001A76  200A               	addwfc	??___fladd+1,w,c
  4890  001A78  6E02               	movwf	___fladd@b+1,c
  4891  001A7A  0EFF               	movlw	255
  4892  001A7C  200B               	addwfc	??___fladd+2,w,c
  4893  001A7E  6E03               	movwf	___fladd@b+2,c
  4894  001A80  0EFF               	movlw	255
  4895  001A82  200C               	addwfc	??___fladd+3,w,c
  4896  001A84  6E04               	movwf	___fladd@b+3,c
  4897  001A86  0E80               	movlw	128
  4898  001A88  1A0D               	xorwf	___fladd@signs,f,c
  4899  001A8A  6C10               	negf	___fladd@grs,c
  4900  001A8C  5010               	movf	___fladd@grs,w,c
  4901  001A8E  A4D8               	btfss	status,2,c
  4902  001A90  D00F               	goto	l795
  4903  001A92  0E01               	movlw	1
  4904  001A94  2601               	addwf	___fladd@b,f,c
  4905  001A96  0E00               	movlw	0
  4906  001A98  2202               	addwfc	___fladd@b+1,f,c
  4907  001A9A  2203               	addwfc	___fladd@b+2,f,c
  4908  001A9C  2204               	addwfc	___fladd@b+3,f,c
  4909  001A9E  D008               	goto	l795
  4910  001AA0                     l2703:
  4911  001AA0  5005               	movf	___fladd@a,w,c
  4912  001AA2  5E01               	subwf	___fladd@b,f,c
  4913  001AA4  5006               	movf	___fladd@a+1,w,c
  4914  001AA6  5A02               	subwfb	___fladd@b+1,f,c
  4915  001AA8  5007               	movf	___fladd@a+2,w,c
  4916  001AAA  5A03               	subwfb	___fladd@b+2,f,c
  4917  001AAC  5008               	movf	___fladd@a+3,w,c
  4918  001AAE  5A04               	subwfb	___fladd@b+3,f,c
  4919  001AB0                     l795:
  4920  001AB0  5001               	movf	___fladd@b,w,c
  4921  001AB2  1002               	iorwf	___fladd@b+1,w,c
  4922  001AB4  1003               	iorwf	___fladd@b+2,w,c
  4923  001AB6  1004               	iorwf	___fladd@b+3,w,c
  4924  001AB8  A4D8               	btfss	status,2,c
  4925  001ABA  D01C               	goto	l2727
  4926  001ABC  5010               	movf	___fladd@grs,w,c
  4927  001ABE  A4D8               	btfss	status,2,c
  4928  001AC0  D019               	goto	l2727
  4929  001AC2  0E00               	movlw	0
  4930  001AC4  6E01               	movwf	?___fladd,c
  4931  001AC6  0E00               	movlw	0
  4932  001AC8  6E02               	movwf	?___fladd+1,c
  4933  001ACA  0E00               	movlw	0
  4934  001ACC  6E03               	movwf	?___fladd+2,c
  4935  001ACE  0E00               	movlw	0
  4936  001AD0  6E04               	movwf	?___fladd+3,c
  4937  001AD2  0012               	return	
  4938  001AD4                     l2711:
  4939  001AD4  90D8               	bcf	status,0,c
  4940  001AD6  3601               	rlcf	___fladd@b,f,c
  4941  001AD8  3602               	rlcf	___fladd@b+1,f,c
  4942  001ADA  3603               	rlcf	___fladd@b+2,f,c
  4943  001ADC  3604               	rlcf	___fladd@b+3,f,c
  4944  001ADE  BE10               	btfsc	___fladd@grs,7,c
  4945  001AE0  8001               	bsf	___fladd@b,0,c
  4946  001AE2  A010               	btfss	___fladd@grs,0,c
  4947  001AE4  D002               	goto	l2721
  4948  001AE6  80D8               	bsf	status,0,c
  4949  001AE8  D001               	goto	L9
  4950  001AEA                     l2721:
  4951  001AEA  90D8               	bcf	status,0,c
  4952  001AEC                     L9:
  4953  001AEC  3610               	rlcf	___fladd@grs,f,c
  4954  001AEE  500F               	movf	___fladd@bexp,w,c
  4955  001AF0  A4D8               	btfss	status,2,c
  4956  001AF2  060F               	decf	___fladd@bexp,f,c
  4957  001AF4                     l2727:
  4958  001AF4  AE03               	btfss	___fladd@b+2,7,c
  4959  001AF6  D7EE               	goto	l2711
  4960  001AF8                     u2800:
  4961  001AF8  0E00               	movlw	0
  4962  001AFA  6E0E               	movwf	___fladd@aexp,c
  4963  001AFC  AE10               	btfss	___fladd@grs,7,c
  4964  001AFE  D00B               	goto	l804
  4965  001B00  C010  F009         	movff	___fladd@grs,??___fladd
  4966  001B04  0E7F               	movlw	127
  4967  001B06  1609               	andwf	??___fladd,f,c
  4968  001B08  B4D8               	btfsc	status,2,c
  4969  001B0A  D003               	goto	l805
  4970  001B0C                     u2820:
  4971  001B0C  0E01               	movlw	1
  4972  001B0E  6E0E               	movwf	___fladd@aexp,c
  4973  001B10  D002               	goto	l804
  4974  001B12                     l805:
  4975  001B12  B001               	btfsc	___fladd@b,0,c
  4976  001B14  D7FB               	goto	u2820
  4977  001B16                     l804:
  4978  001B16  500E               	movf	___fladd@aexp,w,c
  4979  001B18  B4D8               	btfsc	status,2,c
  4980  001B1A  D020               	goto	l2747
  4981  001B1C  0E01               	movlw	1
  4982  001B1E  2601               	addwf	___fladd@b,f,c
  4983  001B20  0E00               	movlw	0
  4984  001B22  2202               	addwfc	___fladd@b+1,f,c
  4985  001B24  2203               	addwfc	___fladd@b+2,f,c
  4986  001B26  2204               	addwfc	___fladd@b+3,f,c
  4987  001B28  A004               	btfss	___fladd@b+3,0,c
  4988  001B2A  D018               	goto	l2747
  4989  001B2C  C001  F009         	movff	___fladd@b,??___fladd
  4990  001B30  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4991  001B34  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4992  001B38  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4993  001B3C  340C               	rlcf	??___fladd+3,w,c
  4994  001B3E  320C               	rrcf	??___fladd+3,f,c
  4995  001B40  320B               	rrcf	??___fladd+2,f,c
  4996  001B42  320A               	rrcf	??___fladd+1,f,c
  4997  001B44  3209               	rrcf	??___fladd,f,c
  4998  001B46  C009  F001         	movff	??___fladd,___fladd@b
  4999  001B4A  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5000  001B4E  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5001  001B52  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5002  001B56  280F               	incf	___fladd@bexp,w,c
  5003  001B58  A4D8               	btfss	status,2,c
  5004  001B5A  2A0F               	incf	___fladd@bexp,f,c
  5005  001B5C                     l2747:
  5006  001B5C  280F               	incf	___fladd@bexp,w,c
  5007  001B5E  B4D8               	btfsc	status,2,c
  5008  001B60  D003               	goto	u2880
  5009  001B62  500F               	movf	___fladd@bexp,w,c
  5010  001B64  A4D8               	btfss	status,2,c
  5011  001B66  D00D               	goto	l2755
  5012  001B68                     u2880:
  5013  001B68  0E00               	movlw	0
  5014  001B6A  6E01               	movwf	___fladd@b,c
  5015  001B6C  0E00               	movlw	0
  5016  001B6E  6E02               	movwf	___fladd@b+1,c
  5017  001B70  0E00               	movlw	0
  5018  001B72  6E03               	movwf	___fladd@b+2,c
  5019  001B74  0E00               	movlw	0
  5020  001B76  6E04               	movwf	___fladd@b+3,c
  5021  001B78  500F               	movf	___fladd@bexp,w,c
  5022  001B7A  A4D8               	btfss	status,2,c
  5023  001B7C  D002               	goto	l2755
  5024  001B7E  0E00               	movlw	0
  5025  001B80  6E0D               	movwf	___fladd@signs,c
  5026  001B82                     l2755:
  5027  001B82  A00F               	btfss	___fladd@bexp,0,c
  5028  001B84  D002               	goto	l2759
  5029  001B86  8E03               	bsf	___fladd@b+2,7,c
  5030  001B88  D001               	goto	l2761
  5031  001B8A                     l2759:
  5032  001B8A  9E03               	bcf	___fladd@b+2,7,c
  5033  001B8C                     l2761:
  5034  001B8C  90D8               	bcf	status,0,c
  5035  001B8E  300F               	rrcf	___fladd@bexp,w,c
  5036  001B90  6E04               	movwf	___fladd@b+3,c
  5037  001B92  BE0D               	btfsc	___fladd@signs,7,c
  5038  001B94  8E04               	bsf	___fladd@b+3,7,c
  5039  001B96  C001  F001         	movff	___fladd@b,?___fladd
  5040  001B9A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5041  001B9E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5042  001BA2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5043  001BA6  0012               	return		;funcret
  5044  001BA8                     __end_of___fladd:
  5045                           	opt callstack 0
  5046                           
  5047 ;; *************** function ___flneg *****************
  5048 ;; Defined at:
  5049 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  f1              4    0[COMRAM] unsigned char 
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;		None
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  4    0[COMRAM] unsigned char 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2, status,0
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5063 ;;      Params:         4       0       0       0       0       0       0       0       0
  5064 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5066 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5067 ;;Total ram usage:        4 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; This function calls:
  5070 ;;		Nothing
  5071 ;; This function is called by:
  5072 ;;		_efgtoa
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           	psect	text20
  5077  002D14                     __ptext20:
  5078                           	opt callstack 0
  5079  002D14                     ___flneg:
  5080                           	opt callstack 26
  5081                           
  5082                           ;incstack = 0
  5083  002D14  5001               	movf	___flneg@f1,w,c
  5084  002D16  1002               	iorwf	___flneg@f1+1,w,c
  5085  002D18  1003               	iorwf	___flneg@f1+2,w,c
  5086  002D1A  1004               	iorwf	___flneg@f1+3,w,c
  5087  002D1C  B4D8               	btfsc	status,2,c
  5088  002D1E  D008               	goto	l3263
  5089  002D20  0E00               	movlw	0
  5090  002D22  1A01               	xorwf	___flneg@f1,f,c
  5091  002D24  0E00               	movlw	0
  5092  002D26  1A02               	xorwf	___flneg@f1+1,f,c
  5093  002D28  0E00               	movlw	0
  5094  002D2A  1A03               	xorwf	___flneg@f1+2,f,c
  5095  002D2C  0E80               	movlw	128
  5096  002D2E  1A04               	xorwf	___flneg@f1+3,f,c
  5097  002D30                     l3263:
  5098  002D30  C001  F001         	movff	___flneg@f1,?___flneg
  5099  002D34  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5100  002D38  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5101  002D3C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5102  002D40  0012               	return		;funcret
  5103  002D42                     __end_of___flneg:
  5104                           	opt callstack 0
  5105                           
  5106 ;; *************** function ___flmul *****************
  5107 ;; Defined at:
  5108 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  b               4   14[COMRAM] unsigned char 
  5111 ;;  a               4   18[COMRAM] unsigned char 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  prod            4   33[COMRAM] struct .
  5114 ;;  grs             4   27[COMRAM] unsigned long 
  5115 ;;  temp            2   37[COMRAM] struct .
  5116 ;;  bexp            1   32[COMRAM] unsigned char 
  5117 ;;  aexp            1   31[COMRAM] unsigned char 
  5118 ;;  sign            1   26[COMRAM] unsigned char 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  4   14[COMRAM] unsigned char 
  5121 ;; Registers used:
  5122 ;;		wreg, status,2, status,0, prodl, prodh
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5128 ;;      Params:         8       0       0       0       0       0       0       0       0
  5129 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5130 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5131 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5132 ;;Total ram usage:       25 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; This function calls:
  5135 ;;		Nothing
  5136 ;; This function is called by:
  5137 ;;		_main
  5138 ;;		_efgtoa
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text21
  5143  00154A                     __ptext21:
  5144                           	opt callstack 0
  5145  00154A                     ___flmul:
  5146                           	opt callstack 26
  5147                           
  5148                           ;incstack = 0
  5149  00154A  5012               	movf	___flmul@b+3,w,c
  5150  00154C  0B80               	andlw	128
  5151  00154E  6E1B               	movwf	___flmul@sign,c
  5152  001550  5012               	movf	___flmul@b+3,w,c
  5153  001552  2412               	addwf	___flmul@b+3,w,c
  5154  001554  6E21               	movwf	___flmul@bexp,c
  5155  001556  BE11               	btfsc	___flmul@b+2,7,c
  5156  001558  8021               	bsf	___flmul@bexp,0,c
  5157  00155A  5021               	movf	___flmul@bexp,w,c
  5158  00155C  B4D8               	btfsc	status,2,c
  5159  00155E  D00D               	goto	l3019
  5160  001560  2821               	incf	___flmul@bexp,w,c
  5161  001562  A4D8               	btfss	status,2,c
  5162  001564  D008               	goto	l3017
  5163  001566  0E00               	movlw	0
  5164  001568  6E0F               	movwf	___flmul@b,c
  5165  00156A  0E00               	movlw	0
  5166  00156C  6E10               	movwf	___flmul@b+1,c
  5167  00156E  0E00               	movlw	0
  5168  001570  6E11               	movwf	___flmul@b+2,c
  5169  001572  0E00               	movlw	0
  5170  001574  6E12               	movwf	___flmul@b+3,c
  5171  001576                     l3017:
  5172  001576  8E11               	bsf	___flmul@b+2,7,c
  5173  001578  D008               	goto	l3021
  5174  00157A                     l3019:
  5175  00157A  0E00               	movlw	0
  5176  00157C  6E0F               	movwf	___flmul@b,c
  5177  00157E  0E00               	movlw	0
  5178  001580  6E10               	movwf	___flmul@b+1,c
  5179  001582  0E00               	movlw	0
  5180  001584  6E11               	movwf	___flmul@b+2,c
  5181  001586  0E00               	movlw	0
  5182  001588  6E12               	movwf	___flmul@b+3,c
  5183  00158A                     l3021:
  5184  00158A  5016               	movf	___flmul@a+3,w,c
  5185  00158C  0B80               	andlw	128
  5186  00158E  1A1B               	xorwf	___flmul@sign,f,c
  5187  001590  5016               	movf	___flmul@a+3,w,c
  5188  001592  2416               	addwf	___flmul@a+3,w,c
  5189  001594  6E20               	movwf	___flmul@aexp,c
  5190  001596  BE15               	btfsc	___flmul@a+2,7,c
  5191  001598  8020               	bsf	___flmul@aexp,0,c
  5192  00159A  5020               	movf	___flmul@aexp,w,c
  5193  00159C  B4D8               	btfsc	status,2,c
  5194  00159E  D00D               	goto	l3037
  5195  0015A0  2820               	incf	___flmul@aexp,w,c
  5196  0015A2  A4D8               	btfss	status,2,c
  5197  0015A4  D008               	goto	l3035
  5198  0015A6  0E00               	movlw	0
  5199  0015A8  6E13               	movwf	___flmul@a,c
  5200  0015AA  0E00               	movlw	0
  5201  0015AC  6E14               	movwf	___flmul@a+1,c
  5202  0015AE  0E00               	movlw	0
  5203  0015B0  6E15               	movwf	___flmul@a+2,c
  5204  0015B2  0E00               	movlw	0
  5205  0015B4  6E16               	movwf	___flmul@a+3,c
  5206  0015B6                     l3035:
  5207  0015B6  8E15               	bsf	___flmul@a+2,7,c
  5208  0015B8  D008               	goto	l864
  5209  0015BA                     l3037:
  5210  0015BA  0E00               	movlw	0
  5211  0015BC  6E13               	movwf	___flmul@a,c
  5212  0015BE  0E00               	movlw	0
  5213  0015C0  6E14               	movwf	___flmul@a+1,c
  5214  0015C2  0E00               	movlw	0
  5215  0015C4  6E15               	movwf	___flmul@a+2,c
  5216  0015C6  0E00               	movlw	0
  5217  0015C8  6E16               	movwf	___flmul@a+3,c
  5218  0015CA                     l864:
  5219  0015CA  5020               	movf	___flmul@aexp,w,c
  5220  0015CC  B4D8               	btfsc	status,2,c
  5221  0015CE  D003               	goto	u3500
  5222  0015D0  5021               	movf	___flmul@bexp,w,c
  5223  0015D2  A4D8               	btfss	status,2,c
  5224  0015D4  D009               	goto	l3045
  5225  0015D6                     u3500:
  5226  0015D6  0E00               	movlw	0
  5227  0015D8  6E0F               	movwf	?___flmul,c
  5228  0015DA  0E00               	movlw	0
  5229  0015DC  6E10               	movwf	?___flmul+1,c
  5230  0015DE  0E00               	movlw	0
  5231  0015E0  6E11               	movwf	?___flmul+2,c
  5232  0015E2  0E00               	movlw	0
  5233  0015E4  6E12               	movwf	?___flmul+3,c
  5234  0015E6  0012               	return	
  5235  0015E8                     l3045:
  5236  0015E8  5015               	movf	___flmul@a+2,w,c
  5237  0015EA  020F               	mulwf	___flmul@b,c
  5238  0015EC  CFF3 F026          	movff	prodl,___flmul@temp
  5239  0015F0  CFF4 F027          	movff	prodh,___flmul@temp+1
  5240  0015F4  5026               	movf	___flmul@temp,w,c
  5241  0015F6  6E1C               	movwf	___flmul@grs,c
  5242  0015F8  6A1D               	clrf	___flmul@grs+1,c
  5243  0015FA  6A1E               	clrf	___flmul@grs+2,c
  5244  0015FC  6A1F               	clrf	___flmul@grs+3,c
  5245  0015FE  5027               	movf	___flmul@temp+1,w,c
  5246  001600  6E22               	movwf	___flmul@prod,c
  5247  001602  6A23               	clrf	___flmul@prod+1,c
  5248  001604  6A24               	clrf	___flmul@prod+2,c
  5249  001606  6A25               	clrf	___flmul@prod+3,c
  5250  001608  5014               	movf	___flmul@a+1,w,c
  5251  00160A  0210               	mulwf	___flmul@b+1,c
  5252  00160C  CFF3 F026          	movff	prodl,___flmul@temp
  5253  001610  CFF4 F027          	movff	prodh,___flmul@temp+1
  5254  001614  5026               	movf	___flmul@temp,w,c
  5255  001616  261C               	addwf	___flmul@grs,f,c
  5256  001618  0E00               	movlw	0
  5257  00161A  221D               	addwfc	___flmul@grs+1,f,c
  5258  00161C  221E               	addwfc	___flmul@grs+2,f,c
  5259  00161E  221F               	addwfc	___flmul@grs+3,f,c
  5260  001620  5027               	movf	___flmul@temp+1,w,c
  5261  001622  2622               	addwf	___flmul@prod,f,c
  5262  001624  0E00               	movlw	0
  5263  001626  2223               	addwfc	___flmul@prod+1,f,c
  5264  001628  2224               	addwfc	___flmul@prod+2,f,c
  5265  00162A  2225               	addwfc	___flmul@prod+3,f,c
  5266  00162C  5013               	movf	___flmul@a,w,c
  5267  00162E  0211               	mulwf	___flmul@b+2,c
  5268  001630  CFF3 F026          	movff	prodl,___flmul@temp
  5269  001634  CFF4 F027          	movff	prodh,___flmul@temp+1
  5270  001638  5026               	movf	___flmul@temp,w,c
  5271  00163A  261C               	addwf	___flmul@grs,f,c
  5272  00163C  0E00               	movlw	0
  5273  00163E  221D               	addwfc	___flmul@grs+1,f,c
  5274  001640  221E               	addwfc	___flmul@grs+2,f,c
  5275  001642  221F               	addwfc	___flmul@grs+3,f,c
  5276  001644  5027               	movf	___flmul@temp+1,w,c
  5277  001646  2622               	addwf	___flmul@prod,f,c
  5278  001648  0E00               	movlw	0
  5279  00164A  2223               	addwfc	___flmul@prod+1,f,c
  5280  00164C  2224               	addwfc	___flmul@prod+2,f,c
  5281  00164E  2225               	addwfc	___flmul@prod+3,f,c
  5282  001650  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5283  001654  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5284  001658  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5285  00165C  6A1C               	clrf	___flmul@grs,c
  5286  00165E  5013               	movf	___flmul@a,w,c
  5287  001660  0210               	mulwf	___flmul@b+1,c
  5288  001662  CFF3 F026          	movff	prodl,___flmul@temp
  5289  001666  CFF4 F027          	movff	prodh,___flmul@temp+1
  5290  00166A  5026               	movf	___flmul@temp,w,c
  5291  00166C  261C               	addwf	___flmul@grs,f,c
  5292  00166E  5027               	movf	___flmul@temp+1,w,c
  5293  001670  221D               	addwfc	___flmul@grs+1,f,c
  5294  001672  0E00               	movlw	0
  5295  001674  221E               	addwfc	___flmul@grs+2,f,c
  5296  001676  0E00               	movlw	0
  5297  001678  221F               	addwfc	___flmul@grs+3,f,c
  5298  00167A  5014               	movf	___flmul@a+1,w,c
  5299  00167C  020F               	mulwf	___flmul@b,c
  5300  00167E  CFF3 F026          	movff	prodl,___flmul@temp
  5301  001682  CFF4 F027          	movff	prodh,___flmul@temp+1
  5302  001686  5026               	movf	___flmul@temp,w,c
  5303  001688  261C               	addwf	___flmul@grs,f,c
  5304  00168A  5027               	movf	___flmul@temp+1,w,c
  5305  00168C  221D               	addwfc	___flmul@grs+1,f,c
  5306  00168E  0E00               	movlw	0
  5307  001690  221E               	addwfc	___flmul@grs+2,f,c
  5308  001692  0E00               	movlw	0
  5309  001694  221F               	addwfc	___flmul@grs+3,f,c
  5310  001696  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5311  00169A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5312  00169E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5313  0016A2  6A1C               	clrf	___flmul@grs,c
  5314  0016A4  5013               	movf	___flmul@a,w,c
  5315  0016A6  020F               	mulwf	___flmul@b,c
  5316  0016A8  CFF3 F026          	movff	prodl,___flmul@temp
  5317  0016AC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5318  0016B0  5026               	movf	___flmul@temp,w,c
  5319  0016B2  261C               	addwf	___flmul@grs,f,c
  5320  0016B4  5027               	movf	___flmul@temp+1,w,c
  5321  0016B6  221D               	addwfc	___flmul@grs+1,f,c
  5322  0016B8  0E00               	movlw	0
  5323  0016BA  221E               	addwfc	___flmul@grs+2,f,c
  5324  0016BC  0E00               	movlw	0
  5325  0016BE  221F               	addwfc	___flmul@grs+3,f,c
  5326  0016C0  5015               	movf	___flmul@a+2,w,c
  5327  0016C2  0210               	mulwf	___flmul@b+1,c
  5328  0016C4  CFF3 F026          	movff	prodl,___flmul@temp
  5329  0016C8  CFF4 F027          	movff	prodh,___flmul@temp+1
  5330  0016CC  5026               	movf	___flmul@temp,w,c
  5331  0016CE  2622               	addwf	___flmul@prod,f,c
  5332  0016D0  5027               	movf	___flmul@temp+1,w,c
  5333  0016D2  2223               	addwfc	___flmul@prod+1,f,c
  5334  0016D4  0E00               	movlw	0
  5335  0016D6  2224               	addwfc	___flmul@prod+2,f,c
  5336  0016D8  0E00               	movlw	0
  5337  0016DA  2225               	addwfc	___flmul@prod+3,f,c
  5338  0016DC  5014               	movf	___flmul@a+1,w,c
  5339  0016DE  0211               	mulwf	___flmul@b+2,c
  5340  0016E0  CFF3 F026          	movff	prodl,___flmul@temp
  5341  0016E4  CFF4 F027          	movff	prodh,___flmul@temp+1
  5342  0016E8  5026               	movf	___flmul@temp,w,c
  5343  0016EA  2622               	addwf	___flmul@prod,f,c
  5344  0016EC  5027               	movf	___flmul@temp+1,w,c
  5345  0016EE  2223               	addwfc	___flmul@prod+1,f,c
  5346  0016F0  0E00               	movlw	0
  5347  0016F2  2224               	addwfc	___flmul@prod+2,f,c
  5348  0016F4  0E00               	movlw	0
  5349  0016F6  2225               	addwfc	___flmul@prod+3,f,c
  5350  0016F8  5015               	movf	___flmul@a+2,w,c
  5351  0016FA  0211               	mulwf	___flmul@b+2,c
  5352  0016FC  CFF3 F026          	movff	prodl,___flmul@temp
  5353  001700  CFF4 F027          	movff	prodh,___flmul@temp+1
  5354  001704  5026               	movf	___flmul@temp,w,c
  5355  001706  6E17               	movwf	??___flmul& (0+255),c
  5356  001708  5027               	movf	___flmul@temp+1,w,c
  5357  00170A  6E18               	movwf	(??___flmul+1)& (0+255),c
  5358  00170C  6A19               	clrf	(??___flmul+2)& (0+255),c
  5359  00170E  6A1A               	clrf	(??___flmul+3)& (0+255),c
  5360  001710  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5361  001714  C018  F019         	movff	??___flmul+1,??___flmul+2
  5362  001718  C017  F018         	movff	??___flmul,??___flmul+1
  5363  00171C  6A17               	clrf	??___flmul,c
  5364  00171E  5017               	movf	??___flmul,w,c
  5365  001720  2622               	addwf	___flmul@prod,f,c
  5366  001722  5018               	movf	??___flmul+1,w,c
  5367  001724  2223               	addwfc	___flmul@prod+1,f,c
  5368  001726  5019               	movf	??___flmul+2,w,c
  5369  001728  2224               	addwfc	___flmul@prod+2,f,c
  5370  00172A  501A               	movf	??___flmul+3,w,c
  5371  00172C  2225               	addwfc	___flmul@prod+3,f,c
  5372  00172E  C01C  F017         	movff	___flmul@grs,??___flmul
  5373  001732  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5374  001736  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5375  00173A  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5376  00173E  0E19               	movlw	25
  5377  001740  D005               	goto	u3510
  5378  001742                     u3515:
  5379  001742  90D8               	bcf	status,0,c
  5380  001744  321A               	rrcf	??___flmul+3,f,c
  5381  001746  3219               	rrcf	??___flmul+2,f,c
  5382  001748  3218               	rrcf	??___flmul+1,f,c
  5383  00174A  3217               	rrcf	??___flmul,f,c
  5384  00174C                     u3510:
  5385  00174C  2EE8               	decfsz	wreg,f,c
  5386  00174E  D7F9               	goto	u3515
  5387  001750  5017               	movf	??___flmul,w,c
  5388  001752  2622               	addwf	___flmul@prod,f,c
  5389  001754  5018               	movf	??___flmul+1,w,c
  5390  001756  2223               	addwfc	___flmul@prod+1,f,c
  5391  001758  5019               	movf	??___flmul+2,w,c
  5392  00175A  2224               	addwfc	___flmul@prod+2,f,c
  5393  00175C  501A               	movf	??___flmul+3,w,c
  5394  00175E  2225               	addwfc	___flmul@prod+3,f,c
  5395  001760  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5396  001764  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5397  001768  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5398  00176C  6A1C               	clrf	___flmul@grs,c
  5399  00176E  5020               	movf	___flmul@aexp,w,c
  5400  001770  C021  F017         	movff	___flmul@bexp,??___flmul
  5401  001774  6A18               	clrf	(??___flmul+1)& (0+255),c
  5402  001776  2617               	addwf	??___flmul,f,c
  5403  001778  0E00               	movlw	0
  5404  00177A  2218               	addwfc	??___flmul+1,f,c
  5405  00177C  0E82               	movlw	130
  5406  00177E  2417               	addwf	??___flmul,w,c
  5407  001780  6E26               	movwf	___flmul@temp,c
  5408  001782  0EFF               	movlw	255
  5409  001784  2018               	addwfc	??___flmul+1,w,c
  5410  001786  6E27               	movwf	___flmul@temp+1,c
  5411  001788  D00F               	goto	l3093
  5412  00178A                     l3087:
  5413  00178A  90D8               	bcf	status,0,c
  5414  00178C  3622               	rlcf	___flmul@prod,f,c
  5415  00178E  3623               	rlcf	___flmul@prod+1,f,c
  5416  001790  3624               	rlcf	___flmul@prod+2,f,c
  5417  001792  3625               	rlcf	___flmul@prod+3,f,c
  5418  001794  BE1F               	btfsc	___flmul@grs+3,7,c
  5419  001796  8022               	bsf	___flmul@prod,0,c
  5420  001798  90D8               	bcf	status,0,c
  5421  00179A  361C               	rlcf	___flmul@grs,f,c
  5422  00179C  361D               	rlcf	___flmul@grs+1,f,c
  5423  00179E  361E               	rlcf	___flmul@grs+2,f,c
  5424  0017A0  361F               	rlcf	___flmul@grs+3,f,c
  5425  0017A2  0626               	decf	___flmul@temp,f,c
  5426  0017A4  A0D8               	btfss	status,0,c
  5427  0017A6  0627               	decf	___flmul@temp+1,f,c
  5428  0017A8                     l3093:
  5429  0017A8  AE24               	btfss	___flmul@prod+2,7,c
  5430  0017AA  D7EF               	goto	l3087
  5431  0017AC  0E00               	movlw	0
  5432  0017AE  6E20               	movwf	___flmul@aexp,c
  5433  0017B0  AE1F               	btfss	___flmul@grs+3,7,c
  5434  0017B2  D017               	goto	l873
  5435  0017B4  0EFF               	movlw	255
  5436  0017B6  141C               	andwf	___flmul@grs,w,c
  5437  0017B8  6E17               	movwf	??___flmul& (0+255),c
  5438  0017BA  0EFF               	movlw	255
  5439  0017BC  141D               	andwf	___flmul@grs+1,w,c
  5440  0017BE  6E18               	movwf	(??___flmul+1)& (0+255),c
  5441  0017C0  0EFF               	movlw	255
  5442  0017C2  141E               	andwf	___flmul@grs+2,w,c
  5443  0017C4  6E19               	movwf	(??___flmul+2)& (0+255),c
  5444  0017C6  0E7F               	movlw	127
  5445  0017C8  141F               	andwf	___flmul@grs+3,w,c
  5446  0017CA  6E1A               	movwf	(??___flmul+3)& (0+255),c
  5447  0017CC  5017               	movf	??___flmul,w,c
  5448  0017CE  1018               	iorwf	??___flmul+1,w,c
  5449  0017D0  1019               	iorwf	??___flmul+2,w,c
  5450  0017D2  101A               	iorwf	??___flmul+3,w,c
  5451  0017D4  B4D8               	btfsc	status,2,c
  5452  0017D6  D003               	goto	l874
  5453  0017D8                     u3550:
  5454  0017D8  0E01               	movlw	1
  5455  0017DA  6E20               	movwf	___flmul@aexp,c
  5456  0017DC  D002               	goto	l873
  5457  0017DE                     l874:
  5458  0017DE  B022               	btfsc	___flmul@prod,0,c
  5459  0017E0  D7FB               	goto	u3550
  5460  0017E2                     l873:
  5461  0017E2  5020               	movf	___flmul@aexp,w,c
  5462  0017E4  B4D8               	btfsc	status,2,c
  5463  0017E6  D01F               	goto	l3113
  5464  0017E8  0E01               	movlw	1
  5465  0017EA  2622               	addwf	___flmul@prod,f,c
  5466  0017EC  0E00               	movlw	0
  5467  0017EE  2223               	addwfc	___flmul@prod+1,f,c
  5468  0017F0  2224               	addwfc	___flmul@prod+2,f,c
  5469  0017F2  2225               	addwfc	___flmul@prod+3,f,c
  5470  0017F4  A025               	btfss	___flmul@prod+3,0,c
  5471  0017F6  D017               	goto	l3113
  5472  0017F8  C022  F017         	movff	___flmul@prod,??___flmul
  5473  0017FC  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5474  001800  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5475  001804  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5476  001808  341A               	rlcf	??___flmul+3,w,c
  5477  00180A  321A               	rrcf	??___flmul+3,f,c
  5478  00180C  3219               	rrcf	??___flmul+2,f,c
  5479  00180E  3218               	rrcf	??___flmul+1,f,c
  5480  001810  3217               	rrcf	??___flmul,f,c
  5481  001812  C017  F022         	movff	??___flmul,___flmul@prod
  5482  001816  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5483  00181A  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5484  00181E  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5485  001822  4A26               	infsnz	___flmul@temp,f,c
  5486  001824  2A27               	incf	___flmul@temp+1,f,c
  5487  001826                     l3113:
  5488  001826  BE27               	btfsc	___flmul@temp+1,7,c
  5489  001828  D00D               	goto	l3117
  5490  00182A  5027               	movf	___flmul@temp+1,w,c
  5491  00182C  E103               	bnz	u3590
  5492  00182E  2826               	incf	___flmul@temp,w,c
  5493  001830  A0D8               	btfss	status,0,c
  5494  001832  D008               	goto	l3117
  5495  001834                     u3590:
  5496  001834  0E00               	movlw	0
  5497  001836  6E22               	movwf	___flmul@prod,c
  5498  001838  0E00               	movlw	0
  5499  00183A  6E23               	movwf	___flmul@prod+1,c
  5500  00183C  0E80               	movlw	128
  5501  00183E  6E24               	movwf	___flmul@prod+2,c
  5502  001840  0E7F               	movlw	127
  5503  001842  D020               	goto	L10
  5504  001844                     l3117:
  5505  001844  BE27               	btfsc	___flmul@temp+1,7,c
  5506  001846  D005               	goto	u3600
  5507  001848  5027               	movf	___flmul@temp+1,w,c
  5508  00184A  E10E               	bnz	l881
  5509  00184C  0426               	decf	___flmul@temp,w,c
  5510  00184E  B0D8               	btfsc	status,0,c
  5511  001850  D00B               	goto	l881
  5512  001852                     u3600:
  5513  001852  0E00               	movlw	0
  5514  001854  6E22               	movwf	___flmul@prod,c
  5515  001856  0E00               	movlw	0
  5516  001858  6E23               	movwf	___flmul@prod+1,c
  5517  00185A  0E00               	movlw	0
  5518  00185C  6E24               	movwf	___flmul@prod+2,c
  5519  00185E  0E00               	movlw	0
  5520  001860  6E25               	movwf	___flmul@prod+3,c
  5521  001862  0E00               	movlw	0
  5522  001864  6E1B               	movwf	___flmul@sign,c
  5523  001866  D00F               	goto	l3129
  5524  001868                     l881:
  5525  001868  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5526  00186C  0EFF               	movlw	255
  5527  00186E  1622               	andwf	___flmul@prod,f,c
  5528  001870  0EFF               	movlw	255
  5529  001872  1623               	andwf	___flmul@prod+1,f,c
  5530  001874  0E7F               	movlw	127
  5531  001876  1624               	andwf	___flmul@prod+2,f,c
  5532  001878  0E00               	movlw	0
  5533  00187A  1625               	andwf	___flmul@prod+3,f,c
  5534  00187C  B021               	btfsc	___flmul@bexp,0,c
  5535  00187E  8E24               	bsf	___flmul@prod+2,7,c
  5536  001880  90D8               	bcf	status,0,c
  5537  001882  3021               	rrcf	___flmul@bexp,w,c
  5538  001884                     L10:
  5539  001884  6E25               	movwf	___flmul@prod+3,c
  5540  001886                     l3129:
  5541  001886  501B               	movf	___flmul@sign,w,c
  5542  001888  1225               	iorwf	___flmul@prod+3,f,c
  5543  00188A  C022  F00F         	movff	___flmul@prod,?___flmul
  5544  00188E  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5545  001892  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5546  001896  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5547  00189A  0012               	return		;funcret
  5548  00189C                     __end_of___flmul:
  5549                           	opt callstack 0
  5550                           
  5551 ;; *************** function ___flge *****************
  5552 ;; Defined at:
  5553 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  ff1             4   39[COMRAM] unsigned char 
  5556 ;;  ff2             4   43[COMRAM] unsigned char 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;		None
  5559 ;; Return value:  Size  Location     Type
  5560 ;;		None               void
  5561 ;; Registers used:
  5562 ;;		wreg, status,2, status,0
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5568 ;;      Params:         8       0       0       0       0       0       0       0       0
  5569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5570 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5571 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5572 ;;Total ram usage:       12 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_efgtoa
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text22
  5582  00234C                     __ptext22:
  5583                           	opt callstack 0
  5584  00234C                     ___flge:
  5585                           	opt callstack 26
  5586                           
  5587                           ;incstack = 0
  5588  00234C  0E00               	movlw	0
  5589  00234E  1428               	andwf	___flge@ff1,w,c
  5590  002350  6E30               	movwf	??___flge& (0+255),c
  5591  002352  0E00               	movlw	0
  5592  002354  1429               	andwf	___flge@ff1+1,w,c
  5593  002356  6E31               	movwf	(??___flge+1)& (0+255),c
  5594  002358  0E80               	movlw	128
  5595  00235A  142A               	andwf	___flge@ff1+2,w,c
  5596  00235C  6E32               	movwf	(??___flge+2)& (0+255),c
  5597  00235E  0E7F               	movlw	127
  5598  002360  142B               	andwf	___flge@ff1+3,w,c
  5599  002362  6E33               	movwf	(??___flge+3)& (0+255),c
  5600  002364  5030               	movf	??___flge,w,c
  5601  002366  1031               	iorwf	??___flge+1,w,c
  5602  002368  1032               	iorwf	??___flge+2,w,c
  5603  00236A  1033               	iorwf	??___flge+3,w,c
  5604  00236C  A4D8               	btfss	status,2,c
  5605  00236E  D008               	goto	l3241
  5606  002370  0E00               	movlw	0
  5607  002372  6E28               	movwf	___flge@ff1,c
  5608  002374  0E00               	movlw	0
  5609  002376  6E29               	movwf	___flge@ff1+1,c
  5610  002378  0E00               	movlw	0
  5611  00237A  6E2A               	movwf	___flge@ff1+2,c
  5612  00237C  0E00               	movlw	0
  5613  00237E  6E2B               	movwf	___flge@ff1+3,c
  5614  002380                     l3241:
  5615  002380  0E00               	movlw	0
  5616  002382  142C               	andwf	___flge@ff2,w,c
  5617  002384  6E30               	movwf	??___flge& (0+255),c
  5618  002386  0E00               	movlw	0
  5619  002388  142D               	andwf	___flge@ff2+1,w,c
  5620  00238A  6E31               	movwf	(??___flge+1)& (0+255),c
  5621  00238C  0E80               	movlw	128
  5622  00238E  142E               	andwf	___flge@ff2+2,w,c
  5623  002390  6E32               	movwf	(??___flge+2)& (0+255),c
  5624  002392  0E7F               	movlw	127
  5625  002394  142F               	andwf	___flge@ff2+3,w,c
  5626  002396  6E33               	movwf	(??___flge+3)& (0+255),c
  5627  002398  5030               	movf	??___flge,w,c
  5628  00239A  1031               	iorwf	??___flge+1,w,c
  5629  00239C  1032               	iorwf	??___flge+2,w,c
  5630  00239E  1033               	iorwf	??___flge+3,w,c
  5631  0023A0  A4D8               	btfss	status,2,c
  5632  0023A2  D008               	goto	l3245
  5633  0023A4  0E00               	movlw	0
  5634  0023A6  6E2C               	movwf	___flge@ff2,c
  5635  0023A8  0E00               	movlw	0
  5636  0023AA  6E2D               	movwf	___flge@ff2+1,c
  5637  0023AC  0E00               	movlw	0
  5638  0023AE  6E2E               	movwf	___flge@ff2+2,c
  5639  0023B0  0E00               	movlw	0
  5640  0023B2  6E2F               	movwf	___flge@ff2+3,c
  5641  0023B4                     l3245:
  5642  0023B4  AE2B               	btfss	___flge@ff1+3,7,c
  5643  0023B6  D009               	goto	l3249
  5644  0023B8  6C28               	negf	___flge@ff1,c
  5645  0023BA  1E29               	comf	___flge@ff1+1,f,c
  5646  0023BC  B0D8               	btfsc	status,0,c
  5647  0023BE  2A29               	incf	___flge@ff1+1,f,c
  5648  0023C0  1E2A               	comf	___flge@ff1+2,f,c
  5649  0023C2  B0D8               	btfsc	status,0,c
  5650  0023C4  2A2A               	incf	___flge@ff1+2,f,c
  5651  0023C6  0E80               	movlw	128
  5652  0023C8  562B               	subfwb	___flge@ff1+3,f,c
  5653  0023CA                     l3249:
  5654  0023CA  AE2F               	btfss	___flge@ff2+3,7,c
  5655  0023CC  D009               	goto	l515
  5656  0023CE  6C2C               	negf	___flge@ff2,c
  5657  0023D0  1E2D               	comf	___flge@ff2+1,f,c
  5658  0023D2  B0D8               	btfsc	status,0,c
  5659  0023D4  2A2D               	incf	___flge@ff2+1,f,c
  5660  0023D6  1E2E               	comf	___flge@ff2+2,f,c
  5661  0023D8  B0D8               	btfsc	status,0,c
  5662  0023DA  2A2E               	incf	___flge@ff2+2,f,c
  5663  0023DC  0E80               	movlw	128
  5664  0023DE  562F               	subfwb	___flge@ff2+3,f,c
  5665  0023E0                     l515:
  5666  0023E0  0E00               	movlw	0
  5667  0023E2  1A28               	xorwf	___flge@ff1,f,c
  5668  0023E4  0E00               	movlw	0
  5669  0023E6  1A29               	xorwf	___flge@ff1+1,f,c
  5670  0023E8  0E00               	movlw	0
  5671  0023EA  1A2A               	xorwf	___flge@ff1+2,f,c
  5672  0023EC  0E80               	movlw	128
  5673  0023EE  1A2B               	xorwf	___flge@ff1+3,f,c
  5674  0023F0  0E00               	movlw	0
  5675  0023F2  1A2C               	xorwf	___flge@ff2,f,c
  5676  0023F4  0E00               	movlw	0
  5677  0023F6  1A2D               	xorwf	___flge@ff2+1,f,c
  5678  0023F8  0E00               	movlw	0
  5679  0023FA  1A2E               	xorwf	___flge@ff2+2,f,c
  5680  0023FC  0E80               	movlw	128
  5681  0023FE  1A2F               	xorwf	___flge@ff2+3,f,c
  5682  002400  502C               	movf	___flge@ff2,w,c
  5683  002402  5C28               	subwf	___flge@ff1,w,c
  5684  002404  502D               	movf	___flge@ff2+1,w,c
  5685  002406  5829               	subwfb	___flge@ff1+1,w,c
  5686  002408  502E               	movf	___flge@ff2+2,w,c
  5687  00240A  582A               	subwfb	___flge@ff1+2,w,c
  5688  00240C  502F               	movf	___flge@ff2+3,w,c
  5689  00240E  582B               	subwfb	___flge@ff1+3,w,c
  5690  002410  B0D8               	btfsc	status,0,c
  5691  002412  D002               	goto	l3255
  5692  002414  90D8               	bcf	status,0,c
  5693  002416  0012               	return	
  5694  002418                     l3255:
  5695  002418  80D8               	bsf	status,0,c
  5696  00241A  0012               	return		;funcret
  5697  00241C                     __end_of___flge:
  5698                           	opt callstack 0
  5699                           
  5700 ;; *************** function ___fleq *****************
  5701 ;; Defined at:
  5702 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  5703 ;; Parameters:    Size  Location     Type
  5704 ;;  ff1             4    0[COMRAM] unsigned char 
  5705 ;;  ff2             4    4[COMRAM] unsigned char 
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;		None
  5708 ;; Return value:  Size  Location     Type
  5709 ;;		None               void
  5710 ;; Registers used:
  5711 ;;		wreg, status,2, status,0
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5717 ;;      Params:         8       0       0       0       0       0       0       0       0
  5718 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5719 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5720 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5721 ;;Total ram usage:       12 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; This function calls:
  5724 ;;		Nothing
  5725 ;; This function is called by:
  5726 ;;		_efgtoa
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           	psect	text23
  5731  00277A                     __ptext23:
  5732                           	opt callstack 0
  5733  00277A                     ___fleq:
  5734                           	opt callstack 26
  5735                           
  5736                           ;incstack = 0
  5737  00277A  0E00               	movlw	0
  5738  00277C  1401               	andwf	___fleq@ff1,w,c
  5739  00277E  6E09               	movwf	??___fleq& (0+255),c
  5740  002780  0E00               	movlw	0
  5741  002782  1402               	andwf	___fleq@ff1+1,w,c
  5742  002784  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5743  002786  0E80               	movlw	128
  5744  002788  1403               	andwf	___fleq@ff1+2,w,c
  5745  00278A  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5746  00278C  0E7F               	movlw	127
  5747  00278E  1404               	andwf	___fleq@ff1+3,w,c
  5748  002790  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5749  002792  5009               	movf	??___fleq,w,c
  5750  002794  100A               	iorwf	??___fleq+1,w,c
  5751  002796  100B               	iorwf	??___fleq+2,w,c
  5752  002798  100C               	iorwf	??___fleq+3,w,c
  5753  00279A  A4D8               	btfss	status,2,c
  5754  00279C  D008               	goto	l3225
  5755  00279E  0E00               	movlw	0
  5756  0027A0  6E01               	movwf	___fleq@ff1,c
  5757  0027A2  0E00               	movlw	0
  5758  0027A4  6E02               	movwf	___fleq@ff1+1,c
  5759  0027A6  0E00               	movlw	0
  5760  0027A8  6E03               	movwf	___fleq@ff1+2,c
  5761  0027AA  0E00               	movlw	0
  5762  0027AC  6E04               	movwf	___fleq@ff1+3,c
  5763  0027AE                     l3225:
  5764  0027AE  0E00               	movlw	0
  5765  0027B0  1405               	andwf	___fleq@ff2,w,c
  5766  0027B2  6E09               	movwf	??___fleq& (0+255),c
  5767  0027B4  0E00               	movlw	0
  5768  0027B6  1406               	andwf	___fleq@ff2+1,w,c
  5769  0027B8  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5770  0027BA  0E80               	movlw	128
  5771  0027BC  1407               	andwf	___fleq@ff2+2,w,c
  5772  0027BE  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5773  0027C0  0E7F               	movlw	127
  5774  0027C2  1408               	andwf	___fleq@ff2+3,w,c
  5775  0027C4  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5776  0027C6  5009               	movf	??___fleq,w,c
  5777  0027C8  100A               	iorwf	??___fleq+1,w,c
  5778  0027CA  100B               	iorwf	??___fleq+2,w,c
  5779  0027CC  100C               	iorwf	??___fleq+3,w,c
  5780  0027CE  A4D8               	btfss	status,2,c
  5781  0027D0  D008               	goto	l3229
  5782  0027D2  0E00               	movlw	0
  5783  0027D4  6E05               	movwf	___fleq@ff2,c
  5784  0027D6  0E00               	movlw	0
  5785  0027D8  6E06               	movwf	___fleq@ff2+1,c
  5786  0027DA  0E00               	movlw	0
  5787  0027DC  6E07               	movwf	___fleq@ff2+2,c
  5788  0027DE  0E00               	movlw	0
  5789  0027E0  6E08               	movwf	___fleq@ff2+3,c
  5790  0027E2                     l3229:
  5791  0027E2  5005               	movf	___fleq@ff2,w,c
  5792  0027E4  1801               	xorwf	___fleq@ff1,w,c
  5793  0027E6  E10A               	bnz	u3760
  5794  0027E8  5006               	movf	___fleq@ff2+1,w,c
  5795  0027EA  1802               	xorwf	___fleq@ff1+1,w,c
  5796  0027EC  E107               	bnz	u3760
  5797  0027EE  5007               	movf	___fleq@ff2+2,w,c
  5798  0027F0  1803               	xorwf	___fleq@ff1+2,w,c
  5799  0027F2  E104               	bnz	u3760
  5800  0027F4  5008               	movf	___fleq@ff2+3,w,c
  5801  0027F6  1804               	xorwf	___fleq@ff1+3,w,c
  5802  0027F8  B4D8               	btfsc	status,2,c
  5803  0027FA  D002               	goto	l3233
  5804  0027FC                     u3760:
  5805  0027FC  90D8               	bcf	status,0,c
  5806  0027FE  0012               	return	
  5807  002800                     l3233:
  5808  002800  80D8               	bsf	status,0,c
  5809  002802  0012               	return		;funcret
  5810  002804                     __end_of___fleq:
  5811                           	opt callstack 0
  5812                           
  5813 ;; *************** function ___fldiv *****************
  5814 ;; Defined at:
  5815 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  b               4    0[COMRAM] unsigned char 
  5818 ;;  a               4    4[COMRAM] unsigned char 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  grs             4   19[COMRAM] unsigned long 
  5821 ;;  rem             4   12[COMRAM] unsigned long 
  5822 ;;  new_exp         2   17[COMRAM] short 
  5823 ;;  aexp            1   24[COMRAM] unsigned char 
  5824 ;;  bexp            1   23[COMRAM] unsigned char 
  5825 ;;  sign            1   16[COMRAM] unsigned char 
  5826 ;; Return value:  Size  Location     Type
  5827 ;;                  4    0[COMRAM] unsigned char 
  5828 ;; Registers used:
  5829 ;;		wreg, status,2, status,0
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5835 ;;      Params:         8       0       0       0       0       0       0       0       0
  5836 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5837 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5838 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5839 ;;Total ram usage:       25 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; This function calls:
  5842 ;;		Nothing
  5843 ;; This function is called by:
  5844 ;;		_efgtoa
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text24
  5849  001BA8                     __ptext24:
  5850                           	opt callstack 0
  5851  001BA8                     ___fldiv:
  5852                           	opt callstack 26
  5853                           
  5854                           ;incstack = 0
  5855  001BA8  5004               	movf	___fldiv@b+3,w,c
  5856  001BAA  0B80               	andlw	128
  5857  001BAC  6E11               	movwf	___fldiv@sign,c
  5858  001BAE  5004               	movf	___fldiv@b+3,w,c
  5859  001BB0  2404               	addwf	___fldiv@b+3,w,c
  5860  001BB2  6E18               	movwf	___fldiv@bexp,c
  5861  001BB4  BE03               	btfsc	___fldiv@b+2,7,c
  5862  001BB6  8018               	bsf	___fldiv@bexp,0,c
  5863  001BB8  5018               	movf	___fldiv@bexp,w,c
  5864  001BBA  B4D8               	btfsc	status,2,c
  5865  001BBC  D00D               	goto	l2883
  5866  001BBE  2818               	incf	___fldiv@bexp,w,c
  5867  001BC0  A4D8               	btfss	status,2,c
  5868  001BC2  D008               	goto	l2879
  5869  001BC4  0E00               	movlw	0
  5870  001BC6  6E01               	movwf	___fldiv@b,c
  5871  001BC8  0E00               	movlw	0
  5872  001BCA  6E02               	movwf	___fldiv@b+1,c
  5873  001BCC  0E00               	movlw	0
  5874  001BCE  6E03               	movwf	___fldiv@b+2,c
  5875  001BD0  0E00               	movlw	0
  5876  001BD2  6E04               	movwf	___fldiv@b+3,c
  5877  001BD4                     l2879:
  5878  001BD4  8E03               	bsf	___fldiv@b+2,7,c
  5879  001BD6  D006               	goto	L11
  5880  001BD8                     l2883:
  5881  001BD8  0E00               	movlw	0
  5882  001BDA  6E01               	movwf	___fldiv@b,c
  5883  001BDC  0E00               	movlw	0
  5884  001BDE  6E02               	movwf	___fldiv@b+1,c
  5885  001BE0  0E00               	movlw	0
  5886  001BE2  6E03               	movwf	___fldiv@b+2,c
  5887  001BE4                     L11:
  5888  001BE4  0E00               	movlw	0
  5889  001BE6  6E04               	movwf	___fldiv@b+3,c
  5890  001BE8  5008               	movf	___fldiv@a+3,w,c
  5891  001BEA  0B80               	andlw	128
  5892  001BEC  1A11               	xorwf	___fldiv@sign,f,c
  5893  001BEE  5008               	movf	___fldiv@a+3,w,c
  5894  001BF0  2408               	addwf	___fldiv@a+3,w,c
  5895  001BF2  6E19               	movwf	___fldiv@aexp,c
  5896  001BF4  BE07               	btfsc	___fldiv@a+2,7,c
  5897  001BF6  8019               	bsf	___fldiv@aexp,0,c
  5898  001BF8  5019               	movf	___fldiv@aexp,w,c
  5899  001BFA  B4D8               	btfsc	status,2,c
  5900  001BFC  D00D               	goto	l2903
  5901  001BFE  2819               	incf	___fldiv@aexp,w,c
  5902  001C00  A4D8               	btfss	status,2,c
  5903  001C02  D008               	goto	l2899
  5904  001C04  0E00               	movlw	0
  5905  001C06  6E05               	movwf	___fldiv@a,c
  5906  001C08  0E00               	movlw	0
  5907  001C0A  6E06               	movwf	___fldiv@a+1,c
  5908  001C0C  0E00               	movlw	0
  5909  001C0E  6E07               	movwf	___fldiv@a+2,c
  5910  001C10  0E00               	movlw	0
  5911  001C12  6E08               	movwf	___fldiv@a+3,c
  5912  001C14                     l2899:
  5913  001C14  8E07               	bsf	___fldiv@a+2,7,c
  5914  001C16  D006               	goto	L12
  5915  001C18                     l2903:
  5916  001C18  0E00               	movlw	0
  5917  001C1A  6E05               	movwf	___fldiv@a,c
  5918  001C1C  0E00               	movlw	0
  5919  001C1E  6E06               	movwf	___fldiv@a+1,c
  5920  001C20  0E00               	movlw	0
  5921  001C22  6E07               	movwf	___fldiv@a+2,c
  5922  001C24                     L12:
  5923  001C24  0E00               	movlw	0
  5924  001C26  6E08               	movwf	___fldiv@a+3,c
  5925  001C28  5005               	movf	___fldiv@a,w,c
  5926  001C2A  1006               	iorwf	___fldiv@a+1,w,c
  5927  001C2C  1007               	iorwf	___fldiv@a+2,w,c
  5928  001C2E  1008               	iorwf	___fldiv@a+3,w,c
  5929  001C30  A4D8               	btfss	status,2,c
  5930  001C32  D017               	goto	l2917
  5931  001C34  0E00               	movlw	0
  5932  001C36  6E01               	movwf	___fldiv@b,c
  5933  001C38  0E00               	movlw	0
  5934  001C3A  6E02               	movwf	___fldiv@b+1,c
  5935  001C3C  0E00               	movlw	0
  5936  001C3E  6E03               	movwf	___fldiv@b+2,c
  5937  001C40  0E00               	movlw	0
  5938  001C42  6E04               	movwf	___fldiv@b+3,c
  5939  001C44  0E80               	movlw	128
  5940  001C46  1203               	iorwf	___fldiv@b+2,f,c
  5941  001C48  0E7F               	movlw	127
  5942  001C4A  1204               	iorwf	___fldiv@b+3,f,c
  5943  001C4C                     l2911:
  5944  001C4C  5011               	movf	___fldiv@sign,w,c
  5945  001C4E  1204               	iorwf	___fldiv@b+3,f,c
  5946  001C50  C001  F001         	movff	___fldiv@b,?___fldiv
  5947  001C54  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  5948  001C58  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  5949  001C5C  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  5950  001C60  0012               	return	
  5951  001C62                     l2917:
  5952  001C62  5018               	movf	___fldiv@bexp,w,c
  5953  001C64  A4D8               	btfss	status,2,c
  5954  001C66  D009               	goto	l2925
  5955  001C68  0E00               	movlw	0
  5956  001C6A  6E01               	movwf	?___fldiv,c
  5957  001C6C  0E00               	movlw	0
  5958  001C6E  6E02               	movwf	?___fldiv+1,c
  5959  001C70  0E00               	movlw	0
  5960  001C72  6E03               	movwf	?___fldiv+2,c
  5961  001C74  0E00               	movlw	0
  5962  001C76  6E04               	movwf	?___fldiv+3,c
  5963  001C78  0012               	return	
  5964  001C7A                     l2925:
  5965  001C7A  5019               	movf	___fldiv@aexp,w,c
  5966  001C7C  C018  F009         	movff	___fldiv@bexp,??___fldiv
  5967  001C80  6A0A               	clrf	(??___fldiv+1)& (0+255),c
  5968  001C82  5E09               	subwf	??___fldiv,f,c
  5969  001C84  0E00               	movlw	0
  5970  001C86  5A0A               	subwfb	??___fldiv+1,f,c
  5971  001C88  0E7F               	movlw	127
  5972  001C8A  2409               	addwf	??___fldiv,w,c
  5973  001C8C  6E12               	movwf	___fldiv@new_exp,c
  5974  001C8E  0E00               	movlw	0
  5975  001C90  200A               	addwfc	??___fldiv+1,w,c
  5976  001C92  6E13               	movwf	___fldiv@new_exp+1,c
  5977  001C94  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  5978  001C98  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  5979  001C9C  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  5980  001CA0  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  5981  001CA4  0E00               	movlw	0
  5982  001CA6  6E01               	movwf	___fldiv@b,c
  5983  001CA8  0E00               	movlw	0
  5984  001CAA  6E02               	movwf	___fldiv@b+1,c
  5985  001CAC  0E00               	movlw	0
  5986  001CAE  6E03               	movwf	___fldiv@b+2,c
  5987  001CB0  0E00               	movlw	0
  5988  001CB2  6E04               	movwf	___fldiv@b+3,c
  5989  001CB4  0E00               	movlw	0
  5990  001CB6  6E14               	movwf	___fldiv@grs,c
  5991  001CB8  0E00               	movlw	0
  5992  001CBA  6E15               	movwf	___fldiv@grs+1,c
  5993  001CBC  0E00               	movlw	0
  5994  001CBE  6E16               	movwf	___fldiv@grs+2,c
  5995  001CC0  0E00               	movlw	0
  5996  001CC2  6E17               	movwf	___fldiv@grs+3,c
  5997  001CC4  0E00               	movlw	0
  5998  001CC6  6E19               	movwf	___fldiv@aexp,c
  5999  001CC8  D028               	goto	l834
  6000  001CCA                     l2935:
  6001  001CCA  5019               	movf	___fldiv@aexp,w,c
  6002  001CCC  B4D8               	btfsc	status,2,c
  6003  001CCE  D011               	goto	l2943
  6004  001CD0  90D8               	bcf	status,0,c
  6005  001CD2  360D               	rlcf	___fldiv@rem,f,c
  6006  001CD4  360E               	rlcf	___fldiv@rem+1,f,c
  6007  001CD6  360F               	rlcf	___fldiv@rem+2,f,c
  6008  001CD8  3610               	rlcf	___fldiv@rem+3,f,c
  6009  001CDA  90D8               	bcf	status,0,c
  6010  001CDC  3601               	rlcf	___fldiv@b,f,c
  6011  001CDE  3602               	rlcf	___fldiv@b+1,f,c
  6012  001CE0  3603               	rlcf	___fldiv@b+2,f,c
  6013  001CE2  3604               	rlcf	___fldiv@b+3,f,c
  6014  001CE4  BE17               	btfsc	___fldiv@grs+3,7,c
  6015  001CE6  8001               	bsf	___fldiv@b,0,c
  6016  001CE8  90D8               	bcf	status,0,c
  6017  001CEA  3614               	rlcf	___fldiv@grs,f,c
  6018  001CEC  3615               	rlcf	___fldiv@grs+1,f,c
  6019  001CEE  3616               	rlcf	___fldiv@grs+2,f,c
  6020  001CF0  3617               	rlcf	___fldiv@grs+3,f,c
  6021  001CF2                     l2943:
  6022  001CF2  5005               	movf	___fldiv@a,w,c
  6023  001CF4  5C0D               	subwf	___fldiv@rem,w,c
  6024  001CF6  5006               	movf	___fldiv@a+1,w,c
  6025  001CF8  580E               	subwfb	___fldiv@rem+1,w,c
  6026  001CFA  5007               	movf	___fldiv@a+2,w,c
  6027  001CFC  580F               	subwfb	___fldiv@rem+2,w,c
  6028  001CFE  5008               	movf	___fldiv@a+3,w,c
  6029  001D00  5810               	subwfb	___fldiv@rem+3,w,c
  6030  001D02  A0D8               	btfss	status,0,c
  6031  001D04  D009               	goto	l2949
  6032  001D06  8C17               	bsf	___fldiv@grs+3,6,c
  6033  001D08  5005               	movf	___fldiv@a,w,c
  6034  001D0A  5E0D               	subwf	___fldiv@rem,f,c
  6035  001D0C  5006               	movf	___fldiv@a+1,w,c
  6036  001D0E  5A0E               	subwfb	___fldiv@rem+1,f,c
  6037  001D10  5007               	movf	___fldiv@a+2,w,c
  6038  001D12  5A0F               	subwfb	___fldiv@rem+2,f,c
  6039  001D14  5008               	movf	___fldiv@a+3,w,c
  6040  001D16  5A10               	subwfb	___fldiv@rem+3,f,c
  6041  001D18                     l2949:
  6042  001D18  2A19               	incf	___fldiv@aexp,f,c
  6043  001D1A                     l834:
  6044  001D1A  0E19               	movlw	25
  6045  001D1C  6419               	cpfsgt	___fldiv@aexp,c
  6046  001D1E  D7D5               	goto	l2935
  6047  001D20  500D               	movf	___fldiv@rem,w,c
  6048  001D22  100E               	iorwf	___fldiv@rem+1,w,c
  6049  001D24  100F               	iorwf	___fldiv@rem+2,w,c
  6050  001D26  1010               	iorwf	___fldiv@rem+3,w,c
  6051  001D28  B4D8               	btfsc	status,2,c
  6052  001D2A  D011               	goto	l2961
  6053  001D2C  8014               	bsf	___fldiv@grs,0,c
  6054  001D2E  D00F               	goto	l2961
  6055  001D30                     l2955:
  6056  001D30  90D8               	bcf	status,0,c
  6057  001D32  3601               	rlcf	___fldiv@b,f,c
  6058  001D34  3602               	rlcf	___fldiv@b+1,f,c
  6059  001D36  3603               	rlcf	___fldiv@b+2,f,c
  6060  001D38  3604               	rlcf	___fldiv@b+3,f,c
  6061  001D3A  BE17               	btfsc	___fldiv@grs+3,7,c
  6062  001D3C  8001               	bsf	___fldiv@b,0,c
  6063  001D3E  90D8               	bcf	status,0,c
  6064  001D40  3614               	rlcf	___fldiv@grs,f,c
  6065  001D42  3615               	rlcf	___fldiv@grs+1,f,c
  6066  001D44  3616               	rlcf	___fldiv@grs+2,f,c
  6067  001D46  3617               	rlcf	___fldiv@grs+3,f,c
  6068  001D48  0612               	decf	___fldiv@new_exp,f,c
  6069  001D4A  A0D8               	btfss	status,0,c
  6070  001D4C  0613               	decf	___fldiv@new_exp+1,f,c
  6071  001D4E                     l2961:
  6072  001D4E  AE03               	btfss	___fldiv@b+2,7,c
  6073  001D50  D7EF               	goto	l2955
  6074  001D52  0E00               	movlw	0
  6075  001D54  6E19               	movwf	___fldiv@aexp,c
  6076  001D56  AE17               	btfss	___fldiv@grs+3,7,c
  6077  001D58  D017               	goto	l845
  6078  001D5A  0EFF               	movlw	255
  6079  001D5C  1414               	andwf	___fldiv@grs,w,c
  6080  001D5E  6E09               	movwf	??___fldiv& (0+255),c
  6081  001D60  0EFF               	movlw	255
  6082  001D62  1415               	andwf	___fldiv@grs+1,w,c
  6083  001D64  6E0A               	movwf	(??___fldiv+1)& (0+255),c
  6084  001D66  0EFF               	movlw	255
  6085  001D68  1416               	andwf	___fldiv@grs+2,w,c
  6086  001D6A  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  6087  001D6C  0E7F               	movlw	127
  6088  001D6E  1417               	andwf	___fldiv@grs+3,w,c
  6089  001D70  6E0C               	movwf	(??___fldiv+3)& (0+255),c
  6090  001D72  5009               	movf	??___fldiv,w,c
  6091  001D74  100A               	iorwf	??___fldiv+1,w,c
  6092  001D76  100B               	iorwf	??___fldiv+2,w,c
  6093  001D78  100C               	iorwf	??___fldiv+3,w,c
  6094  001D7A  B4D8               	btfsc	status,2,c
  6095  001D7C  D003               	goto	l846
  6096  001D7E                     u3360:
  6097  001D7E  0E01               	movlw	1
  6098  001D80  6E19               	movwf	___fldiv@aexp,c
  6099  001D82  D002               	goto	l845
  6100  001D84                     l846:
  6101  001D84  B001               	btfsc	___fldiv@b,0,c
  6102  001D86  D7FB               	goto	u3360
  6103  001D88                     l845:
  6104  001D88  5019               	movf	___fldiv@aexp,w,c
  6105  001D8A  B4D8               	btfsc	status,2,c
  6106  001D8C  D01F               	goto	l2981
  6107  001D8E  0E01               	movlw	1
  6108  001D90  2601               	addwf	___fldiv@b,f,c
  6109  001D92  0E00               	movlw	0
  6110  001D94  2202               	addwfc	___fldiv@b+1,f,c
  6111  001D96  2203               	addwfc	___fldiv@b+2,f,c
  6112  001D98  2204               	addwfc	___fldiv@b+3,f,c
  6113  001D9A  A004               	btfss	___fldiv@b+3,0,c
  6114  001D9C  D017               	goto	l2981
  6115  001D9E  C001  F009         	movff	___fldiv@b,??___fldiv
  6116  001DA2  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6117  001DA6  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6118  001DAA  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6119  001DAE  340C               	rlcf	??___fldiv+3,w,c
  6120  001DB0  320C               	rrcf	??___fldiv+3,f,c
  6121  001DB2  320B               	rrcf	??___fldiv+2,f,c
  6122  001DB4  320A               	rrcf	??___fldiv+1,f,c
  6123  001DB6  3209               	rrcf	??___fldiv,f,c
  6124  001DB8  C009  F001         	movff	??___fldiv,___fldiv@b
  6125  001DBC  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6126  001DC0  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6127  001DC4  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6128  001DC8  4A12               	infsnz	___fldiv@new_exp,f,c
  6129  001DCA  2A13               	incf	___fldiv@new_exp+1,f,c
  6130  001DCC                     l2981:
  6131  001DCC  BE13               	btfsc	___fldiv@new_exp+1,7,c
  6132  001DCE  D010               	goto	l2985
  6133  001DD0  5013               	movf	___fldiv@new_exp+1,w,c
  6134  001DD2  E103               	bnz	u3400
  6135  001DD4  2812               	incf	___fldiv@new_exp,w,c
  6136  001DD6  A0D8               	btfss	status,0,c
  6137  001DD8  D00B               	goto	l2985
  6138  001DDA                     u3400:
  6139  001DDA  0E00               	movlw	0
  6140  001DDC  6E13               	movwf	___fldiv@new_exp+1,c
  6141  001DDE  6812               	setf	___fldiv@new_exp,c
  6142  001DE0  0E00               	movlw	0
  6143  001DE2  6E01               	movwf	___fldiv@b,c
  6144  001DE4  0E00               	movlw	0
  6145  001DE6  6E02               	movwf	___fldiv@b+1,c
  6146  001DE8  0E00               	movlw	0
  6147  001DEA  6E03               	movwf	___fldiv@b+2,c
  6148  001DEC  0E00               	movlw	0
  6149  001DEE  6E04               	movwf	___fldiv@b+3,c
  6150  001DF0                     l2985:
  6151  001DF0  BE13               	btfsc	___fldiv@new_exp+1,7,c
  6152  001DF2  D005               	goto	u3410
  6153  001DF4  5013               	movf	___fldiv@new_exp+1,w,c
  6154  001DF6  E111               	bnz	l2989
  6155  001DF8  0412               	decf	___fldiv@new_exp,w,c
  6156  001DFA  B0D8               	btfsc	status,0,c
  6157  001DFC  D00E               	goto	l2989
  6158  001DFE                     u3410:
  6159  001DFE  0E00               	movlw	0
  6160  001E00  6E13               	movwf	___fldiv@new_exp+1,c
  6161  001E02  0E00               	movlw	0
  6162  001E04  6E12               	movwf	___fldiv@new_exp,c
  6163  001E06  0E00               	movlw	0
  6164  001E08  6E01               	movwf	___fldiv@b,c
  6165  001E0A  0E00               	movlw	0
  6166  001E0C  6E02               	movwf	___fldiv@b+1,c
  6167  001E0E  0E00               	movlw	0
  6168  001E10  6E03               	movwf	___fldiv@b+2,c
  6169  001E12  0E00               	movlw	0
  6170  001E14  6E04               	movwf	___fldiv@b+3,c
  6171  001E16  0E00               	movlw	0
  6172  001E18  6E11               	movwf	___fldiv@sign,c
  6173  001E1A                     l2989:
  6174  001E1A  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6175  001E1E  A018               	btfss	___fldiv@bexp,0,c
  6176  001E20  D002               	goto	l2995
  6177  001E22  8E03               	bsf	___fldiv@b+2,7,c
  6178  001E24  D001               	goto	l2997
  6179  001E26                     l2995:
  6180  001E26  9E03               	bcf	___fldiv@b+2,7,c
  6181  001E28                     l2997:
  6182  001E28  90D8               	bcf	status,0,c
  6183  001E2A  3018               	rrcf	___fldiv@bexp,w,c
  6184  001E2C  6E04               	movwf	___fldiv@b+3,c
  6185  001E2E  D70E               	goto	l2911
  6186  001E30                     __end_of___fldiv:
  6187                           	opt callstack 0
  6188                           
  6189 ;; *************** function ___awmod *****************
  6190 ;; Defined at:
  6191 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  dividend        2    0[COMRAM] int 
  6194 ;;  divisor         2    2[COMRAM] int 
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;  sign            1    5[COMRAM] unsigned char 
  6197 ;;  counter         1    4[COMRAM] unsigned char 
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  2    0[COMRAM] int 
  6200 ;; Registers used:
  6201 ;;		wreg, status,2, status,0
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6207 ;;      Params:         4       0       0       0       0       0       0       0       0
  6208 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6210 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6211 ;;Total ram usage:        6 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; This function calls:
  6214 ;;		Nothing
  6215 ;; This function is called by:
  6216 ;;		_efgtoa
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text25
  6221  002900                     __ptext25:
  6222                           	opt callstack 0
  6223  002900                     ___awmod:
  6224                           	opt callstack 26
  6225                           
  6226                           ;incstack = 0
  6227  002900  0E00               	movlw	0
  6228  002902  6E06               	movwf	___awmod@sign,c
  6229  002904  AE02               	btfss	___awmod@dividend+1,7,c
  6230  002906  D006               	goto	l3193
  6231  002908  6C01               	negf	___awmod@dividend,c
  6232  00290A  1E02               	comf	___awmod@dividend+1,f,c
  6233  00290C  B0D8               	btfsc	status,0,c
  6234  00290E  2A02               	incf	___awmod@dividend+1,f,c
  6235  002910  0E01               	movlw	1
  6236  002912  6E06               	movwf	___awmod@sign,c
  6237  002914                     l3193:
  6238  002914  AE04               	btfss	___awmod@divisor+1,7,c
  6239  002916  D004               	goto	l3197
  6240  002918  6C03               	negf	___awmod@divisor,c
  6241  00291A  1E04               	comf	___awmod@divisor+1,f,c
  6242  00291C  B0D8               	btfsc	status,0,c
  6243  00291E  2A04               	incf	___awmod@divisor+1,f,c
  6244  002920                     l3197:
  6245  002920  5003               	movf	___awmod@divisor,w,c
  6246  002922  1004               	iorwf	___awmod@divisor+1,w,c
  6247  002924  B4D8               	btfsc	status,2,c
  6248  002926  D018               	goto	l3213
  6249  002928  0E01               	movlw	1
  6250  00292A  6E05               	movwf	___awmod@counter,c
  6251  00292C  D004               	goto	l3203
  6252  00292E                     l3201:
  6253  00292E  90D8               	bcf	status,0,c
  6254  002930  3603               	rlcf	___awmod@divisor,f,c
  6255  002932  3604               	rlcf	___awmod@divisor+1,f,c
  6256  002934  2A05               	incf	___awmod@counter,f,c
  6257  002936                     l3203:
  6258  002936  AE04               	btfss	___awmod@divisor+1,7,c
  6259  002938  D7FA               	goto	l3201
  6260  00293A                     u3710:
  6261  00293A  5003               	movf	___awmod@divisor,w,c
  6262  00293C  5C01               	subwf	___awmod@dividend,w,c
  6263  00293E  5004               	movf	___awmod@divisor+1,w,c
  6264  002940  5802               	subwfb	___awmod@dividend+1,w,c
  6265  002942  A0D8               	btfss	status,0,c
  6266  002944  D004               	goto	l3209
  6267  002946  5003               	movf	___awmod@divisor,w,c
  6268  002948  5E01               	subwf	___awmod@dividend,f,c
  6269  00294A  5004               	movf	___awmod@divisor+1,w,c
  6270  00294C  5A02               	subwfb	___awmod@dividend+1,f,c
  6271  00294E                     l3209:
  6272  00294E  90D8               	bcf	status,0,c
  6273  002950  3204               	rrcf	___awmod@divisor+1,f,c
  6274  002952  3203               	rrcf	___awmod@divisor,f,c
  6275  002954  2E05               	decfsz	___awmod@counter,f,c
  6276  002956  D7F1               	goto	u3710
  6277  002958                     l3213:
  6278  002958  5006               	movf	___awmod@sign,w,c
  6279  00295A  B4D8               	btfsc	status,2,c
  6280  00295C  D004               	goto	l3217
  6281  00295E  6C01               	negf	___awmod@dividend,c
  6282  002960  1E02               	comf	___awmod@dividend+1,f,c
  6283  002962  B0D8               	btfsc	status,0,c
  6284  002964  2A02               	incf	___awmod@dividend+1,f,c
  6285  002966                     l3217:
  6286  002966  C001  F001         	movff	___awmod@dividend,?___awmod
  6287  00296A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6288  00296E  0012               	return		;funcret
  6289  002970                     __end_of___awmod:
  6290                           	opt callstack 0
  6291                           
  6292 ;; *************** function ___awdiv *****************
  6293 ;; Defined at:
  6294 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  dividend        2    0[COMRAM] int 
  6297 ;;  divisor         2    2[COMRAM] int 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;  quotient        2    6[COMRAM] int 
  6300 ;;  sign            1    5[COMRAM] unsigned char 
  6301 ;;  counter         1    4[COMRAM] unsigned char 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  2    0[COMRAM] int 
  6304 ;; Registers used:
  6305 ;;		wreg, status,2, status,0
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6311 ;;      Params:         4       0       0       0       0       0       0       0       0
  6312 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6314 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6315 ;;Total ram usage:        8 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; This function calls:
  6318 ;;		Nothing
  6319 ;; This function is called by:
  6320 ;;		_efgtoa
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           	psect	text26
  6325  002804                     __ptext26:
  6326                           	opt callstack 0
  6327  002804                     ___awdiv:
  6328                           	opt callstack 26
  6329                           
  6330                           ;incstack = 0
  6331  002804  0E00               	movlw	0
  6332  002806  6E06               	movwf	___awdiv@sign,c
  6333  002808  AE04               	btfss	___awdiv@divisor+1,7,c
  6334  00280A  D006               	goto	l3149
  6335  00280C  6C03               	negf	___awdiv@divisor,c
  6336  00280E  1E04               	comf	___awdiv@divisor+1,f,c
  6337  002810  B0D8               	btfsc	status,0,c
  6338  002812  2A04               	incf	___awdiv@divisor+1,f,c
  6339  002814  0E01               	movlw	1
  6340  002816  6E06               	movwf	___awdiv@sign,c
  6341  002818                     l3149:
  6342  002818  AE02               	btfss	___awdiv@dividend+1,7,c
  6343  00281A  D006               	goto	l3155
  6344  00281C  6C01               	negf	___awdiv@dividend,c
  6345  00281E  1E02               	comf	___awdiv@dividend+1,f,c
  6346  002820  B0D8               	btfsc	status,0,c
  6347  002822  2A02               	incf	___awdiv@dividend+1,f,c
  6348  002824  0E01               	movlw	1
  6349  002826  1A06               	xorwf	___awdiv@sign,f,c
  6350  002828                     l3155:
  6351  002828  0E00               	movlw	0
  6352  00282A  6E08               	movwf	___awdiv@quotient+1,c
  6353  00282C  0E00               	movlw	0
  6354  00282E  6E07               	movwf	___awdiv@quotient,c
  6355  002830  5003               	movf	___awdiv@divisor,w,c
  6356  002832  1004               	iorwf	___awdiv@divisor+1,w,c
  6357  002834  B4D8               	btfsc	status,2,c
  6358  002836  D01C               	goto	l3177
  6359  002838  0E01               	movlw	1
  6360  00283A  6E05               	movwf	___awdiv@counter,c
  6361  00283C  D004               	goto	l3163
  6362  00283E                     l3161:
  6363  00283E  90D8               	bcf	status,0,c
  6364  002840  3603               	rlcf	___awdiv@divisor,f,c
  6365  002842  3604               	rlcf	___awdiv@divisor+1,f,c
  6366  002844  2A05               	incf	___awdiv@counter,f,c
  6367  002846                     l3163:
  6368  002846  AE04               	btfss	___awdiv@divisor+1,7,c
  6369  002848  D7FA               	goto	l3161
  6370  00284A                     u3650:
  6371  00284A  90D8               	bcf	status,0,c
  6372  00284C  3607               	rlcf	___awdiv@quotient,f,c
  6373  00284E  3608               	rlcf	___awdiv@quotient+1,f,c
  6374  002850  5003               	movf	___awdiv@divisor,w,c
  6375  002852  5C01               	subwf	___awdiv@dividend,w,c
  6376  002854  5004               	movf	___awdiv@divisor+1,w,c
  6377  002856  5802               	subwfb	___awdiv@dividend+1,w,c
  6378  002858  A0D8               	btfss	status,0,c
  6379  00285A  D005               	goto	l3173
  6380  00285C  5003               	movf	___awdiv@divisor,w,c
  6381  00285E  5E01               	subwf	___awdiv@dividend,f,c
  6382  002860  5004               	movf	___awdiv@divisor+1,w,c
  6383  002862  5A02               	subwfb	___awdiv@dividend+1,f,c
  6384  002864  8007               	bsf	___awdiv@quotient,0,c
  6385  002866                     l3173:
  6386  002866  90D8               	bcf	status,0,c
  6387  002868  3204               	rrcf	___awdiv@divisor+1,f,c
  6388  00286A  3203               	rrcf	___awdiv@divisor,f,c
  6389  00286C  2E05               	decfsz	___awdiv@counter,f,c
  6390  00286E  D7ED               	goto	u3650
  6391  002870                     l3177:
  6392  002870  5006               	movf	___awdiv@sign,w,c
  6393  002872  B4D8               	btfsc	status,2,c
  6394  002874  D004               	goto	l3181
  6395  002876  6C07               	negf	___awdiv@quotient,c
  6396  002878  1E08               	comf	___awdiv@quotient+1,f,c
  6397  00287A  B0D8               	btfsc	status,0,c
  6398  00287C  2A08               	incf	___awdiv@quotient+1,f,c
  6399  00287E                     l3181:
  6400  00287E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6401  002882  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6402  002886  0012               	return		;funcret
  6403  002888                     __end_of___awdiv:
  6404                           	opt callstack 0
  6405                           
  6406 ;; *************** function _atoi *****************
  6407 ;; Defined at:
  6408 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6411 ;;		 -> STR_1(5), 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  n               2   20[COMRAM] int 
  6414 ;;  neg             2   13[COMRAM] int 
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  2    7[COMRAM] int 
  6417 ;; Registers used:
  6418 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6424 ;;      Params:         2       0       0       0       0       0       0       0       0
  6425 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6426 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6427 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6428 ;;Total ram usage:       15 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    1
  6431 ;; This function calls:
  6432 ;;		___wmul
  6433 ;;		_isdigit
  6434 ;;		_isspace
  6435 ;; This function is called by:
  6436 ;;		_vfpfcnvrt
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text27
  6441  001FE6                     __ptext27:
  6442                           	opt callstack 0
  6443  001FE6                     _atoi:
  6444                           	opt callstack 26
  6445                           
  6446                           ;incstack = 0
  6447  001FE6  0E00               	movlw	0
  6448  001FE8  6E16               	movwf	atoi@n+1,c
  6449  001FEA  0E00               	movlw	0
  6450  001FEC  6E15               	movwf	atoi@n,c
  6451  001FEE  0E00               	movlw	0
  6452  001FF0  6E0F               	movwf	atoi@neg+1,c
  6453  001FF2  0E00               	movlw	0
  6454  001FF4  6E0E               	movwf	atoi@neg,c
  6455  001FF6  D002               	goto	l3625
  6456  001FF8                     l3623:
  6457  001FF8  4A08               	infsnz	atoi@s,f,c
  6458  001FFA  2A09               	incf	atoi@s+1,f,c
  6459  001FFC                     l3625:
  6460  001FFC  0E01               	movlw	1
  6461  001FFE  6E14               	movwf	_atoi$705,c
  6462  002000  C008  FFF6         	movff	atoi@s,tblptrl
  6463  002004  C009  FFF7         	movff	atoi@s+1,tblptrh
  6464  002008                     	if	0	;tblptru may be non-zero
  6465  002008                     	endif
  6466  002008                     	if	0	;tblptru may be non-zero
  6467  002008                     	endif
  6468  002008  0008               	tblrd		*
  6469  00200A  50F5               	movf	tablat,w,c
  6470  00200C  0A20               	xorlw	32
  6471  00200E  B4D8               	btfsc	status,2,c
  6472  002010  D018               	goto	l3633
  6473  002012  0EF7               	movlw	247
  6474  002014  6E0A               	movwf	??_atoi& (0+255),c
  6475  002016  0EFF               	movlw	255
  6476  002018  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6477  00201A  C008  FFF6         	movff	atoi@s,tblptrl
  6478  00201E  C009  FFF7         	movff	atoi@s+1,tblptrh
  6479  002022                     	if	0	;tblptru may be non-zero
  6480  002022                     	endif
  6481  002022                     	if	0	;tblptru may be non-zero
  6482  002022                     	endif
  6483  002022  0008               	tblrd		*
  6484  002024  50F5               	movf	tablat,w,c
  6485  002026  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6486  002028  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6487  00202A  500A               	movf	??_atoi,w,c
  6488  00202C  260C               	addwf	??_atoi+2,f,c
  6489  00202E  500B               	movf	??_atoi+1,w,c
  6490  002030  220D               	addwfc	??_atoi+3,f,c
  6491  002032  500D               	movf	??_atoi+3,w,c
  6492  002034  E104               	bnz	u4450
  6493  002036  0E05               	movlw	5
  6494  002038  5C0C               	subwf	??_atoi+2,w,c
  6495  00203A  A0D8               	btfss	status,0,c
  6496  00203C  D002               	goto	l3633
  6497  00203E                     u4450:
  6498  00203E  0E00               	movlw	0
  6499  002040  6E14               	movwf	_atoi$705,c
  6500  002042                     l3633:
  6501  002042  C014  F010         	movff	_atoi$705,_atoi$704
  6502  002046  6A11               	clrf	_atoi$704+1,c
  6503  002048  5010               	movf	_atoi$704,w,c
  6504  00204A  1011               	iorwf	_atoi$704+1,w,c
  6505  00204C  B4D8               	btfsc	status,2,c
  6506  00204E  D008               	goto	l3643
  6507  002050  D7D3               	goto	l3623
  6508  002052                     l3639:
  6509  002052  0E00               	movlw	0
  6510  002054  6E0F               	movwf	atoi@neg+1,c
  6511  002056  0E01               	movlw	1
  6512  002058  6E0E               	movwf	atoi@neg,c
  6513  00205A                     l3641:
  6514  00205A  4A08               	infsnz	atoi@s,f,c
  6515  00205C  2A09               	incf	atoi@s+1,f,c
  6516  00205E  D02E               	goto	l3649
  6517  002060                     l3643:
  6518  002060  C008  FFF6         	movff	atoi@s,tblptrl
  6519  002064  C009  FFF7         	movff	atoi@s+1,tblptrh
  6520  002068                     	if	0	;tblptru may be non-zero
  6521  002068                     	endif
  6522  002068                     	if	0	;tblptru may be non-zero
  6523  002068                     	endif
  6524  002068  0008               	tblrd		*
  6525  00206A  50F5               	movf	tablat,w,c
  6526  00206C  6E0A               	movwf	??_atoi& (0+255),c
  6527  00206E  6A0B               	clrf	(??_atoi+1)& (0+255),c
  6528                           
  6529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6530                           ; Switch size 1, requested type "simple"
  6531                           ; Number of cases is 1, Range of values is 0 to 0
  6532                           ; switch strategies available:
  6533                           ; Name         Instructions Cycles
  6534                           ; simple_byte            4     3 (average)
  6535                           ;	Chosen strategy is simple_byte
  6536  002070  500B               	movf	??_atoi+1,w,c
  6537  002072  0A00               	xorlw	0	; case 0
  6538  002074  A4D8               	btfss	status,2,c
  6539  002076  D022               	goto	l3649
  6540                           
  6541                           ; Switch size 1, requested type "simple"
  6542                           ; Number of cases is 2, Range of values is 43 to 45
  6543                           ; switch strategies available:
  6544                           ; Name         Instructions Cycles
  6545                           ; simple_byte            7     4 (average)
  6546                           ;	Chosen strategy is simple_byte
  6547  002078  500A               	movf	??_atoi,w,c
  6548  00207A  0A2B               	xorlw	43	; case 43
  6549  00207C  B4D8               	btfsc	status,2,c
  6550  00207E  D7ED               	goto	l3641
  6551  002080  0A06               	xorlw	6	; case 45
  6552  002082  B4D8               	btfsc	status,2,c
  6553  002084  D7E6               	goto	l3639
  6554  002086  D01A               	goto	l3649
  6555  002088                     l3645:
  6556  002088  C015  F001         	movff	atoi@n,___wmul@multiplier
  6557  00208C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6558  002090  0E00               	movlw	0
  6559  002092  6E04               	movwf	___wmul@multiplicand+1,c
  6560  002094  0E0A               	movlw	10
  6561  002096  6E03               	movwf	___wmul@multiplicand,c
  6562  002098  ECDC  F016         	call	___wmul	;wreg free
  6563  00209C  C008  FFF6         	movff	atoi@s,tblptrl
  6564  0020A0  C009  FFF7         	movff	atoi@s+1,tblptrh
  6565  0020A4                     	if	0	;tblptru may be non-zero
  6566  0020A4                     	endif
  6567  0020A4                     	if	0	;tblptru may be non-zero
  6568  0020A4                     	endif
  6569  0020A4  0008               	tblrd		*
  6570  0020A6  50F5               	movf	tablat,w,c
  6571  0020A8  5E01               	subwf	?___wmul,f,c
  6572  0020AA  0E00               	movlw	0
  6573  0020AC  5A02               	subwfb	?___wmul+1,f,c
  6574  0020AE  0E30               	movlw	48
  6575  0020B0  2401               	addwf	?___wmul,w,c
  6576  0020B2  6E15               	movwf	atoi@n,c
  6577  0020B4  0E00               	movlw	0
  6578  0020B6  2002               	addwfc	?___wmul+1,w,c
  6579  0020B8  6E16               	movwf	atoi@n+1,c
  6580  0020BA  D7CF               	goto	l3641
  6581  0020BC                     l3649:
  6582  0020BC  0ED0               	movlw	208
  6583  0020BE  6E0A               	movwf	??_atoi& (0+255),c
  6584  0020C0  0EFF               	movlw	255
  6585  0020C2  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6586  0020C4  C008  FFF6         	movff	atoi@s,tblptrl
  6587  0020C8  C009  FFF7         	movff	atoi@s+1,tblptrh
  6588  0020CC                     	if	0	;tblptru may be non-zero
  6589  0020CC                     	endif
  6590  0020CC                     	if	0	;tblptru may be non-zero
  6591  0020CC                     	endif
  6592  0020CC  0008               	tblrd		*
  6593  0020CE  50F5               	movf	tablat,w,c
  6594  0020D0  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6595  0020D2  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6596  0020D4  500A               	movf	??_atoi,w,c
  6597  0020D6  260C               	addwf	??_atoi+2,f,c
  6598  0020D8  500B               	movf	??_atoi+1,w,c
  6599  0020DA  220D               	addwfc	??_atoi+3,f,c
  6600  0020DC  500D               	movf	??_atoi+3,w,c
  6601  0020DE  E106               	bnz	u4470
  6602  0020E0  0E0A               	movlw	10
  6603  0020E2  5C0C               	subwf	??_atoi+2,w,c
  6604  0020E4  B0D8               	btfsc	status,0,c
  6605  0020E6  D002               	goto	u4470
  6606  0020E8  0E01               	movlw	1
  6607  0020EA  D001               	goto	u4480
  6608  0020EC                     u4470:
  6609  0020EC  0E00               	movlw	0
  6610  0020EE                     u4480:
  6611  0020EE  6E12               	movwf	_atoi$706,c
  6612  0020F0  6A13               	clrf	_atoi$706+1,c
  6613  0020F2  5012               	movf	_atoi$706,w,c
  6614  0020F4  1013               	iorwf	_atoi$706+1,w,c
  6615  0020F6  A4D8               	btfss	status,2,c
  6616  0020F8  D7C7               	goto	l3645
  6617  0020FA  500E               	movf	atoi@neg,w,c
  6618  0020FC  100F               	iorwf	atoi@neg+1,w,c
  6619  0020FE  A4D8               	btfss	status,2,c
  6620  002100  D00D               	goto	l960
  6621  002102  C015  F00A         	movff	atoi@n,??_atoi
  6622  002106  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6623  00210A  1E0A               	comf	??_atoi,f,c
  6624  00210C  1E0B               	comf	??_atoi+1,f,c
  6625  00210E  4A0A               	infsnz	??_atoi,f,c
  6626  002110  2A0B               	incf	??_atoi+1,f,c
  6627  002112  C00A  F008         	movff	??_atoi,?_atoi
  6628  002116  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6629  00211A  0012               	return	
  6630  00211C                     l960:
  6631  00211C  C015  F008         	movff	atoi@n,?_atoi
  6632  002120  C016  F009         	movff	atoi@n+1,?_atoi+1
  6633  002124  0012               	return		;funcret
  6634  002126                     __end_of_atoi:
  6635                           	opt callstack 0
  6636                           
  6637 ;; *************** function _isspace *****************
  6638 ;; Defined at:
  6639 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;  c               2    0[COMRAM] int 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;		None
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  2    0[COMRAM] int 
  6646 ;; Registers used:
  6647 ;;		wreg, status,2, status,0
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6653 ;;      Params:         2       0       0       0       0       0       0       0       0
  6654 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6655 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6656 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6657 ;;Total ram usage:        7 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; This function calls:
  6660 ;;		Nothing
  6661 ;; This function is called by:
  6662 ;;		_atoi
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           	psect	text28
  6667  002B9C                     __ptext28:
  6668                           	opt callstack 0
  6669  002B9C                     _isspace:
  6670                           	opt callstack 26
  6671                           
  6672                           ;incstack = 0
  6673  002B9C  0E01               	movlw	1
  6674  002B9E  6E07               	movwf	_isspace$735,c
  6675  002BA0  0E20               	movlw	32
  6676  002BA2  1801               	xorwf	isspace@c,w,c
  6677  002BA4  1002               	iorwf	isspace@c+1,w,c
  6678  002BA6  B4D8               	btfsc	status,2,c
  6679  002BA8  D014               	goto	l3319
  6680  002BAA  0EF7               	movlw	247
  6681  002BAC  6E03               	movwf	??_isspace& (0+255),c
  6682  002BAE  0EFF               	movlw	255
  6683  002BB0  6E04               	movwf	(??_isspace+1)& (0+255),c
  6684  002BB2  C001  F005         	movff	isspace@c,??_isspace+2
  6685  002BB6  C002  F006         	movff	isspace@c+1,??_isspace+3
  6686  002BBA  5003               	movf	??_isspace,w,c
  6687  002BBC  2605               	addwf	??_isspace+2,f,c
  6688  002BBE  5004               	movf	??_isspace+1,w,c
  6689  002BC0  2206               	addwfc	??_isspace+3,f,c
  6690  002BC2  5006               	movf	??_isspace+3,w,c
  6691  002BC4  E104               	bnz	u3910
  6692  002BC6  0E05               	movlw	5
  6693  002BC8  5C05               	subwf	??_isspace+2,w,c
  6694  002BCA  A0D8               	btfss	status,0,c
  6695  002BCC  D002               	goto	l3319
  6696  002BCE                     u3910:
  6697  002BCE  0E00               	movlw	0
  6698  002BD0  6E07               	movwf	_isspace$735,c
  6699  002BD2                     l3319:
  6700  002BD2  C007  F001         	movff	_isspace$735,?_isspace
  6701  002BD6  6A02               	clrf	?_isspace+1,c
  6702  002BD8  0012               	return		;funcret
  6703  002BDA                     __end_of_isspace:
  6704                           	opt callstack 0
  6705                           
  6706 ;; *************** function _isdigit *****************
  6707 ;; Defined at:
  6708 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;  c               2    0[COMRAM] int 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;		None
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  2    0[COMRAM] int 
  6715 ;; Registers used:
  6716 ;;		wreg, status,2, status,0
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6722 ;;      Params:         2       0       0       0       0       0       0       0       0
  6723 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6724 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6725 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6726 ;;Total ram usage:        6 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_vfpfcnvrt
  6732 ;;		_atoi
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text29
  6737  002CE4                     __ptext29:
  6738                           	opt callstack 0
  6739  002CE4                     _isdigit:
  6740                           	opt callstack 27
  6741                           
  6742                           ;incstack = 0
  6743  002CE4  0ED0               	movlw	208
  6744  002CE6  6E03               	movwf	??_isdigit& (0+255),c
  6745  002CE8  0EFF               	movlw	255
  6746  002CEA  6E04               	movwf	(??_isdigit+1)& (0+255),c
  6747  002CEC  C001  F005         	movff	isdigit@c,??_isdigit+2
  6748  002CF0  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6749  002CF4  5003               	movf	??_isdigit,w,c
  6750  002CF6  2605               	addwf	??_isdigit+2,f,c
  6751  002CF8  5004               	movf	??_isdigit+1,w,c
  6752  002CFA  2206               	addwfc	??_isdigit+3,f,c
  6753  002CFC  5006               	movf	??_isdigit+3,w,c
  6754  002CFE  E106               	bnz	u3180
  6755  002D00  0E0A               	movlw	10
  6756  002D02  5C05               	subwf	??_isdigit+2,w,c
  6757  002D04  B0D8               	btfsc	status,0,c
  6758  002D06  D002               	goto	u3180
  6759  002D08  0E01               	movlw	1
  6760  002D0A  D001               	goto	u3190
  6761  002D0C                     u3180:
  6762  002D0C  0E00               	movlw	0
  6763  002D0E                     u3190:
  6764  002D0E  6E01               	movwf	?_isdigit,c
  6765  002D10  6A02               	clrf	?_isdigit+1,c
  6766  002D12  0012               	return		;funcret
  6767  002D14                     __end_of_isdigit:
  6768                           	opt callstack 0
  6769                           
  6770 ;; *************** function ___wmul *****************
  6771 ;; Defined at:
  6772 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  multiplier      2    0[COMRAM] unsigned int 
  6775 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;  product         2    4[COMRAM] unsigned int 
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  2    0[COMRAM] unsigned int 
  6780 ;; Registers used:
  6781 ;;		wreg, status,2, status,0, prodl, prodh
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6787 ;;      Params:         4       0       0       0       0       0       0       0       0
  6788 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6790 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6791 ;;Total ram usage:        6 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; This function calls:
  6794 ;;		Nothing
  6795 ;; This function is called by:
  6796 ;;		_atoi
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text30
  6801  002DB8                     __ptext30:
  6802                           	opt callstack 0
  6803  002DB8                     ___wmul:
  6804                           	opt callstack 26
  6805                           
  6806                           ;incstack = 0
  6807  002DB8  5001               	movf	___wmul@multiplier,w,c
  6808  002DBA  0203               	mulwf	___wmul@multiplicand,c
  6809  002DBC  CFF3 F005          	movff	prodl,___wmul@product
  6810  002DC0  CFF4 F006          	movff	prodh,___wmul@product+1
  6811  002DC4  5001               	movf	___wmul@multiplier,w,c
  6812  002DC6  0204               	mulwf	___wmul@multiplicand+1,c
  6813  002DC8  50F3               	movf	prodl,w,c
  6814  002DCA  2606               	addwf	___wmul@product+1,f,c
  6815  002DCC  5002               	movf	___wmul@multiplier+1,w,c
  6816  002DCE  0203               	mulwf	___wmul@multiplicand,c
  6817  002DD0  50F3               	movf	prodl,w,c
  6818  002DD2  2606               	addwf	___wmul@product+1,f,c
  6819  002DD4  C005  F001         	movff	___wmul@product,?___wmul
  6820  002DD8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6821  002DDC  0012               	return		;funcret
  6822  002DDE                     __end_of___wmul:
  6823                           	opt callstack 0
  6824                           
  6825 ;; *************** function _send_string *****************
  6826 ;; Defined at:
  6827 ;;		line 65 in file "../../projects/lcd_45/lcd_45.X/lcd_45.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  row             1    wreg     unsigned char 
  6830 ;;  col             1    9[COMRAM] unsigned char 
  6831 ;;  string          2   10[COMRAM] PTR unsigned char 
  6832 ;;		 -> STR_3(8), main@data(10), 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;  row             1   12[COMRAM] unsigned char 
  6835 ;;  loc             1   13[COMRAM] unsigned char 
  6836 ;; Return value:  Size  Location     Type
  6837 ;;                  1    wreg      void 
  6838 ;; Registers used:
  6839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6845 ;;      Params:         3       0       0       0       0       0       0       0       0
  6846 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6848 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6849 ;;Total ram usage:        5 bytes
  6850 ;; Hardware stack levels used:    1
  6851 ;; Hardware stack levels required when called:    2
  6852 ;; This function calls:
  6853 ;;		_send_chr
  6854 ;;		_send_cmd
  6855 ;; This function is called by:
  6856 ;;		_main
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text31
  6861  002888                     __ptext31:
  6862                           	opt callstack 0
  6863  002888                     _send_string:
  6864                           	opt callstack 28
  6865                           
  6866                           ;incstack = 0
  6867                           ;send_string@row stored from wreg
  6868  002888  6E0D               	movwf	send_string@row,c
  6869                           
  6870                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 66:     unsigned char loc;;../../projects/lcd_
      +                          45/lcd_45.X/lcd_45.c: 67:     if(row==1){
  6871  00288A  040D               	decf	send_string@row,w,c
  6872  00288C  A4D8               	btfss	status,2,c
  6873  00288E  D008               	goto	l3899
  6874                           
  6875                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 68:         loc = 0x80 | (col & 0x0F);
  6876  002890  500A               	movf	send_string@col,w,c
  6877  002892  0B0F               	andlw	15
  6878  002894  0980               	iorlw	128
  6879  002896  6E0E               	movwf	send_string@loc,c
  6880                           
  6881                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 69:         send_cmd(loc);
  6882  002898  500E               	movf	send_string@loc,w,c
  6883  00289A  EC5D  F015         	call	_send_cmd
  6884                           
  6885                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 70:     }
  6886  00289E  D01C               	goto	l3907
  6887  0028A0                     l3899:
  6888                           
  6889                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 72:         loc = 0xc0 | (col & 0x0F);
  6890  0028A0  500A               	movf	send_string@col,w,c
  6891  0028A2  0B0F               	andlw	15
  6892  0028A4  09C0               	iorlw	192
  6893  0028A6  6E0E               	movwf	send_string@loc,c
  6894                           
  6895                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 73:         send_cmd(loc);
  6896  0028A8  500E               	movf	send_string@loc,w,c
  6897  0028AA  EC5D  F015         	call	_send_cmd
  6898  0028AE  D014               	goto	l3907
  6899  0028B0                     l3903:
  6900                           
  6901                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 76:         send_chr(*string);
  6902  0028B0  C00B  FFF6         	movff	send_string@string,tblptrl
  6903  0028B4  C00C  FFF7         	movff	send_string@string+1,tblptrh
  6904  0028B8  6AF8               	clrf	tblptru,c
  6905  0028BA  0E07               	movlw	(high __ramtop+-1)
  6906  0028BC  64F7               	cpfsgt	tblptrh,c
  6907  0028BE  D003               	bra	u4757
  6908  0028C0  0008               	tblrd		*
  6909  0028C2  50F5               	movf	tablat,w,c
  6910  0028C4  D005               	bra	u4750
  6911  0028C6                     u4757:
  6912  0028C6  CFF6 FFE1          	movff	tblptrl,fsr1l
  6913  0028CA  CFF7 FFE2          	movff	tblptrh,fsr1h
  6914  0028CE  50E7               	movf	indf1,w,c
  6915  0028D0                     u4750:
  6916  0028D0  EC35  F015         	call	_send_chr
  6917                           
  6918                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 77:         string++;
  6919  0028D4  4A0B               	infsnz	send_string@string,f,c
  6920  0028D6  2A0C               	incf	send_string@string+1,f,c
  6921  0028D8                     l3907:
  6922                           
  6923                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 75:     while((*string) != '\0'){
  6924  0028D8  C00B  FFF6         	movff	send_string@string,tblptrl
  6925  0028DC  C00C  FFF7         	movff	send_string@string+1,tblptrh
  6926  0028E0  6AF8               	clrf	tblptru,c
  6927  0028E2  0E07               	movlw	(high __ramtop+-1)
  6928  0028E4  64F7               	cpfsgt	tblptrh,c
  6929  0028E6  D003               	bra	u4767
  6930  0028E8  0008               	tblrd		*
  6931  0028EA  50F5               	movf	tablat,w,c
  6932  0028EC  D005               	bra	u4760
  6933  0028EE                     u4767:
  6934  0028EE  CFF6 FFE1          	movff	tblptrl,fsr1l
  6935  0028F2  CFF7 FFE2          	movff	tblptrh,fsr1h
  6936  0028F6  50E7               	movf	indf1,w,c
  6937  0028F8                     u4760:
  6938  0028F8  0900               	iorlw	0
  6939  0028FA  B4D8               	btfsc	status,2,c
  6940  0028FC  0012               	return	
  6941  0028FE  D7D8               	goto	l3903
  6942  002900                     __end_of_send_string:
  6943                           	opt callstack 0
  6944                           
  6945 ;; *************** function _send_chr *****************
  6946 ;; Defined at:
  6947 ;;		line 42 in file "../../projects/lcd_45/lcd_45.X/lcd_45.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  chr             1    wreg     unsigned char 
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;  chr             1    8[COMRAM] unsigned char 
  6952 ;;  copy            1    7[COMRAM] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6962 ;;      Params:         0       0       0       0       0       0       0       0       0
  6963 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6964 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6965 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6966 ;;Total ram usage:        3 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    1
  6969 ;; This function calls:
  6970 ;;		_MSdelay
  6971 ;; This function is called by:
  6972 ;;		_send_string
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text32
  6977  002A6A                     __ptext32:
  6978                           	opt callstack 0
  6979  002A6A                     _send_chr:
  6980                           	opt callstack 28
  6981                           
  6982                           ;incstack = 0
  6983                           ;send_chr@chr stored from wreg
  6984  002A6A  6E09               	movwf	send_chr@chr,c
  6985                           
  6986                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 43:     unsigned char copy = chr;
  6987  002A6C  C009  F008         	movff	send_chr@chr,send_chr@copy
  6988                           
  6989                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 44:     LATD = (LATD & 0xF0) | (copy >> 4);
  6990  002A70  C008  F007         	movff	send_chr@copy,??_send_chr
  6991  002A74  3A07               	swapf	??_send_chr,f,c
  6992  002A76  0E0F               	movlw	15
  6993  002A78  1607               	andwf	??_send_chr,f,c
  6994  002A7A  508C               	movf	3980,w,c	;volatile
  6995  002A7C  0BF0               	andlw	240
  6996  002A7E  1007               	iorwf	??_send_chr,w,c
  6997  002A80  6E8C               	movwf	3980,c	;volatile
  6998                           
  6999                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 45:     LD4 = 1;
  7000  002A82  888C               	bsf	3980,4,c	;volatile
  7001                           
  7002                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 46:     LD5 = 1;
  7003  002A84  8A8C               	bsf	3980,5,c	;volatile
  7004                           
  7005                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 47:     __nop();
  7006  002A86  F000               	nop	
  7007                           
  7008                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 48:     LD5 = 0;
  7009  002A88  9A8C               	bcf	3980,5,c	;volatile
  7010                           
  7011                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 49:     MSdelay(1);
  7012  002A8A  0E00               	movlw	0
  7013  002A8C  6E02               	movwf	MSdelay@val+1,c
  7014  002A8E  0E01               	movlw	1
  7015  002A90  6E01               	movwf	MSdelay@val,c
  7016  002A92  EC40  F016         	call	_MSdelay	;wreg free
  7017                           
  7018                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 51:     LATD = (LATD & 0xF0) | (chr & 0x0F);
  7019  002A96  C009  F007         	movff	send_chr@chr,??_send_chr
  7020  002A9A  0E0F               	movlw	15
  7021  002A9C  1607               	andwf	??_send_chr,f,c
  7022  002A9E  508C               	movf	3980,w,c	;volatile
  7023  002AA0  0BF0               	andlw	240
  7024  002AA2  1007               	iorwf	??_send_chr,w,c
  7025  002AA4  6E8C               	movwf	3980,c	;volatile
  7026                           
  7027                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 52:     LD5 = 1;
  7028  002AA6  8A8C               	bsf	3980,5,c	;volatile
  7029                           
  7030                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 53:     __nop();
  7031  002AA8  F000               	nop	
  7032                           
  7033                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 54:     LD5 = 0;
  7034  002AAA  9A8C               	bcf	3980,5,c	;volatile
  7035                           
  7036                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 55:     MSdelay(3);
  7037  002AAC  0E00               	movlw	0
  7038  002AAE  6E02               	movwf	MSdelay@val+1,c
  7039  002AB0  0E03               	movlw	3
  7040  002AB2  6E01               	movwf	MSdelay@val,c
  7041  002AB4  EC40  F016         	call	_MSdelay	;wreg free
  7042  002AB8  0012               	return		;funcret
  7043  002ABA                     __end_of_send_chr:
  7044                           	opt callstack 0
  7045                           
  7046 ;; *************** function _adc_read *****************
  7047 ;; Defined at:
  7048 ;;		line 22 in file "adc.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  adc             2    0[COMRAM] int 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  digital         2    4[COMRAM] int 
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  2    0[COMRAM] int 
  7055 ;; Registers used:
  7056 ;;		wreg, status,2, status,0
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7062 ;;      Params:         2       0       0       0       0       0       0       0       0
  7063 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7064 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7065 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7066 ;;Total ram usage:        6 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; This function calls:
  7069 ;;		Nothing
  7070 ;; This function is called by:
  7071 ;;		_main
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text33
  7076  002C12                     __ptext33:
  7077                           	opt callstack 0
  7078  002C12                     _adc_read:
  7079                           	opt callstack 30
  7080                           
  7081                           ;adc.c: 23:     int digital;;adc.c: 24:     ADCON0 = (ADCON0 & (0b11000011)) | (adc<<2);
  7082                           
  7083                           ;incstack = 0
  7084  002C12  C001  F003         	movff	adc_read@adc,??_adc_read
  7085  002C16  90D8               	bcf	status,0,c
  7086  002C18  3603               	rlcf	??_adc_read,f,c
  7087  002C1A  90D8               	bcf	status,0,c
  7088  002C1C  3603               	rlcf	??_adc_read,f,c
  7089  002C1E  50C2               	movf	4034,w,c	;volatile
  7090  002C20  0BC3               	andlw	195
  7091  002C22  1003               	iorwf	??_adc_read,w,c
  7092  002C24  6EC2               	movwf	4034,c	;volatile
  7093                           
  7094                           ;adc.c: 25:     ADCON0 |= (1<<0);
  7095  002C26  80C2               	bsf	4034,0,c	;volatile
  7096                           
  7097                           ;adc.c: 26:     ADCON0 |= (1<<1);
  7098  002C28  82C2               	bsf	4034,1,c	;volatile
  7099  002C2A                     l18:
  7100  002C2A  B2C2               	btfsc	4034,1,c	;volatile
  7101  002C2C  D7FE               	goto	l18
  7102                           
  7103                           ;adc.c: 29:     digital = (ADRESH<<8) + ADRESL;
  7104  002C2E  50C4               	movf	4036,w,c	;volatile
  7105  002C30  6E04               	movwf	(??_adc_read+1)& (0+255),c
  7106  002C32  6A03               	clrf	??_adc_read& (0+255),c
  7107  002C34  50C3               	movf	4035,w,c	;volatile
  7108  002C36  2403               	addwf	??_adc_read,w,c
  7109  002C38  6E05               	movwf	adc_read@digital,c
  7110  002C3A  0E00               	movlw	0
  7111  002C3C  2004               	addwfc	??_adc_read+1,w,c
  7112  002C3E  6E06               	movwf	adc_read@digital+1,c
  7113                           
  7114                           ;adc.c: 30:     return (digital);
  7115  002C40  C005  F001         	movff	adc_read@digital,?_adc_read
  7116  002C44  C006  F002         	movff	adc_read@digital+1,?_adc_read+1
  7117  002C48  0012               	return		;funcret
  7118  002C4A                     __end_of_adc_read:
  7119                           	opt callstack 0
  7120                           
  7121 ;; *************** function _adc_init *****************
  7122 ;; Defined at:
  7123 ;;		line 14 in file "adc.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;		None
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;		None
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      void 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7137 ;;      Params:         0       0       0       0       0       0       0       0       0
  7138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7140 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7141 ;;Total ram usage:        0 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; This function calls:
  7144 ;;		Nothing
  7145 ;; This function is called by:
  7146 ;;		_main
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text34
  7151  002DDE                     __ptext34:
  7152                           	opt callstack 0
  7153  002DDE                     _adc_init:
  7154                           	opt callstack 30
  7155                           
  7156                           ;adc.c: 15:     TRISA = 0xFF;
  7157                           
  7158                           ;incstack = 0
  7159  002DDE  6892               	setf	3986,c	;volatile
  7160                           
  7161                           ;adc.c: 16:     ADCON1 = 0x0E;
  7162  002DE0  0E0E               	movlw	14
  7163  002DE2  6EC1               	movwf	4033,c	;volatile
  7164                           
  7165                           ;adc.c: 17:     ADCON2 = 0x92;
  7166  002DE4  0E92               	movlw	146
  7167  002DE6  6EC0               	movwf	4032,c	;volatile
  7168                           
  7169                           ;adc.c: 18:     ADRESH=0;
  7170  002DE8  0E00               	movlw	0
  7171  002DEA  6EC4               	movwf	4036,c	;volatile
  7172                           
  7173                           ;adc.c: 19:     ADRESL=0;
  7174  002DEC  0E00               	movlw	0
  7175  002DEE  6EC3               	movwf	4035,c	;volatile
  7176  002DF0  0012               	return		;funcret
  7177  002DF2                     __end_of_adc_init:
  7178                           	opt callstack 0
  7179                           
  7180 ;; *************** function __init_lcd *****************
  7181 ;; Defined at:
  7182 ;;		line 29 in file "../../projects/lcd_45/lcd_45.X/lcd_45.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;		None
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;		None
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  1    wreg      void 
  7189 ;; Registers used:
  7190 ;;		wreg, status,2, status,0, cstack
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7196 ;;      Params:         0       0       0       0       0       0       0       0       0
  7197 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7198 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7199 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7200 ;;Total ram usage:        0 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; Hardware stack levels required when called:    2
  7203 ;; This function calls:
  7204 ;;		_MSdelay
  7205 ;;		_send_cmd
  7206 ;; This function is called by:
  7207 ;;		_main
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           	psect	text35
  7212  002C4A                     __ptext35:
  7213                           	opt callstack 0
  7214  002C4A                     __init_lcd:
  7215                           	opt callstack 28
  7216                           
  7217                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 30:     TRISD = 0;
  7218                           
  7219                           ;incstack = 0
  7220  002C4A  0E00               	movlw	0
  7221  002C4C  6E95               	movwf	3989,c	;volatile
  7222                           
  7223                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 31:     MSdelay(15);
  7224  002C4E  0E00               	movlw	0
  7225  002C50  6E02               	movwf	MSdelay@val+1,c
  7226  002C52  0E0F               	movlw	15
  7227  002C54  6E01               	movwf	MSdelay@val,c
  7228  002C56  EC40  F016         	call	_MSdelay	;wreg free
  7229                           
  7230                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 32:     send_cmd(0x02);
  7231  002C5A  0E02               	movlw	2
  7232  002C5C  EC5D  F015         	call	_send_cmd
  7233                           
  7234                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 33:     send_cmd(0x28);
  7235  002C60  0E28               	movlw	40
  7236  002C62  EC5D  F015         	call	_send_cmd
  7237                           
  7238                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 34:     send_cmd(0x01);
  7239  002C66  0E01               	movlw	1
  7240  002C68  EC5D  F015         	call	_send_cmd
  7241                           
  7242                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 36:     send_cmd(0x0c);
  7243  002C6C  0E0C               	movlw	12
  7244  002C6E  EC5D  F015         	call	_send_cmd
  7245                           
  7246                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 37:     send_cmd(0x14);
  7247  002C72  0E14               	movlw	20
  7248  002C74  EC5D  F015         	call	_send_cmd
  7249                           
  7250                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 38:     send_cmd(0x06);
  7251  002C78  0E06               	movlw	6
  7252  002C7A  EC5D  F015         	call	_send_cmd
  7253  002C7E  0012               	return		;funcret
  7254  002C80                     __end_of__init_lcd:
  7255                           	opt callstack 0
  7256                           
  7257 ;; *************** function _send_cmd *****************
  7258 ;; Defined at:
  7259 ;;		line 12 in file "../../projects/lcd_45/lcd_45.X/lcd_45.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;  cmd             1    wreg     unsigned char 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;  cmd             1    8[COMRAM] unsigned char 
  7264 ;;  copy            1    7[COMRAM] unsigned char 
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  1    wreg      void 
  7267 ;; Registers used:
  7268 ;;		wreg, status,2, status,0, cstack
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7274 ;;      Params:         0       0       0       0       0       0       0       0       0
  7275 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7276 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7277 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7278 ;;Total ram usage:        3 bytes
  7279 ;; Hardware stack levels used:    1
  7280 ;; Hardware stack levels required when called:    1
  7281 ;; This function calls:
  7282 ;;		_MSdelay
  7283 ;; This function is called by:
  7284 ;;		__init_lcd
  7285 ;;		_send_string
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           	psect	text36
  7290  002ABA                     __ptext36:
  7291                           	opt callstack 0
  7292  002ABA                     _send_cmd:
  7293                           	opt callstack 28
  7294                           
  7295                           ;incstack = 0
  7296                           ;send_cmd@cmd stored from wreg
  7297  002ABA  6E09               	movwf	send_cmd@cmd,c
  7298                           
  7299                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 13:     unsigned char copy = cmd;
  7300  002ABC  C009  F008         	movff	send_cmd@cmd,send_cmd@copy
  7301                           
  7302                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 14:     LATD = (LATD & 0xF0) | (copy >> 4);
  7303  002AC0  C008  F007         	movff	send_cmd@copy,??_send_cmd
  7304  002AC4  3A07               	swapf	??_send_cmd,f,c
  7305  002AC6  0E0F               	movlw	15
  7306  002AC8  1607               	andwf	??_send_cmd,f,c
  7307  002ACA  508C               	movf	3980,w,c	;volatile
  7308  002ACC  0BF0               	andlw	240
  7309  002ACE  1007               	iorwf	??_send_cmd,w,c
  7310  002AD0  6E8C               	movwf	3980,c	;volatile
  7311                           
  7312                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 15:     LD4 = 0;
  7313  002AD2  988C               	bcf	3980,4,c	;volatile
  7314                           
  7315                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 16:     LD5 = 1;
  7316  002AD4  8A8C               	bsf	3980,5,c	;volatile
  7317                           
  7318                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 17:     __nop();
  7319  002AD6  F000               	nop	
  7320                           
  7321                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 18:     LD5 = 0;
  7322  002AD8  9A8C               	bcf	3980,5,c	;volatile
  7323                           
  7324                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 19:     MSdelay(1);
  7325  002ADA  0E00               	movlw	0
  7326  002ADC  6E02               	movwf	MSdelay@val+1,c
  7327  002ADE  0E01               	movlw	1
  7328  002AE0  6E01               	movwf	MSdelay@val,c
  7329  002AE2  EC40  F016         	call	_MSdelay	;wreg free
  7330                           
  7331                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 21:     LATD = (LATD & 0xF0) | (cmd & 0x0F);
  7332  002AE6  C009  F007         	movff	send_cmd@cmd,??_send_cmd
  7333  002AEA  0E0F               	movlw	15
  7334  002AEC  1607               	andwf	??_send_cmd,f,c
  7335  002AEE  508C               	movf	3980,w,c	;volatile
  7336  002AF0  0BF0               	andlw	240
  7337  002AF2  1007               	iorwf	??_send_cmd,w,c
  7338  002AF4  6E8C               	movwf	3980,c	;volatile
  7339                           
  7340                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 22:     LD5 = 1;
  7341  002AF6  8A8C               	bsf	3980,5,c	;volatile
  7342                           
  7343                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 23:     __nop();
  7344  002AF8  F000               	nop	
  7345                           
  7346                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 24:     LD5 = 0;
  7347  002AFA  9A8C               	bcf	3980,5,c	;volatile
  7348                           
  7349                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 25:     MSdelay(3);
  7350  002AFC  0E00               	movlw	0
  7351  002AFE  6E02               	movwf	MSdelay@val+1,c
  7352  002B00  0E03               	movlw	3
  7353  002B02  6E01               	movwf	MSdelay@val,c
  7354  002B04  EC40  F016         	call	_MSdelay	;wreg free
  7355  002B08  0012               	return		;funcret
  7356  002B0A                     __end_of_send_cmd:
  7357                           	opt callstack 0
  7358                           
  7359 ;; *************** function _MSdelay *****************
  7360 ;; Defined at:
  7361 ;;		line 58 in file "../../projects/lcd_45/lcd_45.X/lcd_45.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  val             2    0[COMRAM] unsigned int 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  j               2    4[COMRAM] unsigned int 
  7366 ;;  i               2    2[COMRAM] unsigned int 
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  1    wreg      void 
  7369 ;; Registers used:
  7370 ;;		wreg, status,2, status,0
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7376 ;;      Params:         2       0       0       0       0       0       0       0       0
  7377 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7378 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7379 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7380 ;;Total ram usage:        6 bytes
  7381 ;; Hardware stack levels used:    1
  7382 ;; This function calls:
  7383 ;;		Nothing
  7384 ;; This function is called by:
  7385 ;;		_send_cmd
  7386 ;;		__init_lcd
  7387 ;;		_send_chr
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text37
  7392  002C80                     __ptext37:
  7393                           	opt callstack 0
  7394  002C80                     _MSdelay:
  7395                           	opt callstack 28
  7396                           
  7397                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 58: void MSdelay(unsigned int val);../../proje
      +                          cts/lcd_45/lcd_45.X/lcd_45.c: 59: {;../../projects/lcd_45/lcd_45.X/lcd_45.c: 60:  unsign
      +                          ed int i,j;;../../projects/lcd_45/lcd_45.X/lcd_45.c: 61:  for(i=0;i<val;i++)
  7398                           
  7399                           ;incstack = 0
  7400  002C80  0E00               	movlw	0
  7401  002C82  6E04               	movwf	MSdelay@i+1,c
  7402  002C84  0E00               	movlw	0
  7403  002C86  6E03               	movwf	MSdelay@i,c
  7404  002C88  D00E               	goto	l3697
  7405  002C8A                     l3685:
  7406                           
  7407                           ;../../projects/lcd_45/lcd_45.X/lcd_45.c: 62:      for(j=0;j<165;j++);
  7408  002C8A  0E00               	movlw	0
  7409  002C8C  6E06               	movwf	MSdelay@j+1,c
  7410  002C8E  0E00               	movlw	0
  7411  002C90  6E05               	movwf	MSdelay@j,c
  7412  002C92                     l3691:
  7413  002C92  4A05               	infsnz	MSdelay@j,f,c
  7414  002C94  2A06               	incf	MSdelay@j+1,f,c
  7415  002C96  5006               	movf	MSdelay@j+1,w,c
  7416  002C98  E104               	bnz	u4560
  7417  002C9A  0EA5               	movlw	165
  7418  002C9C  5C05               	subwf	MSdelay@j,w,c
  7419  002C9E  A0D8               	btfss	status,0,c
  7420  002CA0  D7F8               	goto	l3691
  7421  002CA2                     u4560:
  7422  002CA2  4A03               	infsnz	MSdelay@i,f,c
  7423  002CA4  2A04               	incf	MSdelay@i+1,f,c
  7424  002CA6                     l3697:
  7425  002CA6  5001               	movf	MSdelay@val,w,c
  7426  002CA8  5C03               	subwf	MSdelay@i,w,c
  7427  002CAA  5002               	movf	MSdelay@val+1,w,c
  7428  002CAC  5804               	subwfb	MSdelay@i+1,w,c
  7429  002CAE  B0D8               	btfsc	status,0,c
  7430  002CB0  0012               	return	
  7431  002CB2  D7EB               	goto	l3685
  7432  002CB4                     __end_of_MSdelay:
  7433                           	opt callstack 0
  7434                           
  7435 ;; *************** function ___xxtofl *****************
  7436 ;; Defined at:
  7437 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;  sign            1    wreg     unsigned char 
  7440 ;;  val             4    0[COMRAM] long 
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;  sign            1    8[COMRAM] unsigned char 
  7443 ;;  arg             4   10[COMRAM] unsigned long 
  7444 ;;  exp             1    9[COMRAM] unsigned char 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  4    0[COMRAM] unsigned char 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2, status,0
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7454 ;;      Params:         4       0       0       0       0       0       0       0       0
  7455 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7456 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7457 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7458 ;;Total ram usage:       14 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; This function calls:
  7461 ;;		Nothing
  7462 ;; This function is called by:
  7463 ;;		_main
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           	psect	text38
  7468  002126                     __ptext38:
  7469                           	opt callstack 0
  7470  002126                     ___xxtofl:
  7471                           	opt callstack 30
  7472                           
  7473                           ;incstack = 0
  7474                           ;___xxtofl@sign stored from wreg
  7475  002126  6E09               	movwf	___xxtofl@sign,c
  7476  002128  5009               	movf	___xxtofl@sign,w,c
  7477  00212A  A4D8               	btfss	status,2,c
  7478  00212C  AE04               	btfss	___xxtofl@val+3,7,c
  7479  00212E  D01A               	goto	l905
  7480  002130  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7481  002134  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7482  002138  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7483  00213C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7484  002140  1E05               	comf	??___xxtofl,f,c
  7485  002142  1E06               	comf	??___xxtofl+1,f,c
  7486  002144  1E07               	comf	??___xxtofl+2,f,c
  7487  002146  1E08               	comf	??___xxtofl+3,f,c
  7488  002148  2A05               	incf	??___xxtofl,f,c
  7489  00214A  0E00               	movlw	0
  7490  00214C  2206               	addwfc	??___xxtofl+1,f,c
  7491  00214E  2207               	addwfc	??___xxtofl+2,f,c
  7492  002150  2208               	addwfc	??___xxtofl+3,f,c
  7493  002152  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7494  002156  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7495  00215A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7496  00215E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7497  002162  D008               	goto	l3915
  7498  002164                     l905:
  7499  002164  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7500  002168  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7501  00216C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7502  002170  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7503  002174                     l3915:
  7504  002174  5001               	movf	___xxtofl@val,w,c
  7505  002176  1002               	iorwf	___xxtofl@val+1,w,c
  7506  002178  1003               	iorwf	___xxtofl@val+2,w,c
  7507  00217A  1004               	iorwf	___xxtofl@val+3,w,c
  7508  00217C  A4D8               	btfss	status,2,c
  7509  00217E  D009               	goto	l3921
  7510  002180  0E00               	movlw	0
  7511  002182  6E01               	movwf	?___xxtofl,c
  7512  002184  0E00               	movlw	0
  7513  002186  6E02               	movwf	?___xxtofl+1,c
  7514  002188  0E00               	movlw	0
  7515  00218A  6E03               	movwf	?___xxtofl+2,c
  7516  00218C  0E00               	movlw	0
  7517  00218E  6E04               	movwf	?___xxtofl+3,c
  7518  002190  0012               	return	
  7519  002192                     l3921:
  7520  002192  0E96               	movlw	150
  7521  002194  6E0A               	movwf	___xxtofl@exp,c
  7522  002196  D006               	goto	l3925
  7523  002198                     l3923:
  7524  002198  2A0A               	incf	___xxtofl@exp,f,c
  7525  00219A  90D8               	bcf	status,0,c
  7526  00219C  320E               	rrcf	___xxtofl@arg+3,f,c
  7527  00219E  320D               	rrcf	___xxtofl@arg+2,f,c
  7528  0021A0  320C               	rrcf	___xxtofl@arg+1,f,c
  7529  0021A2  320B               	rrcf	___xxtofl@arg,f,c
  7530  0021A4                     l3925:
  7531  0021A4  0E00               	movlw	0
  7532  0021A6  140B               	andwf	___xxtofl@arg,w,c
  7533  0021A8  6E05               	movwf	??___xxtofl& (0+255),c
  7534  0021AA  0E00               	movlw	0
  7535  0021AC  140C               	andwf	___xxtofl@arg+1,w,c
  7536  0021AE  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7537  0021B0  0E00               	movlw	0
  7538  0021B2  140D               	andwf	___xxtofl@arg+2,w,c
  7539  0021B4  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7540  0021B6  0EFE               	movlw	254
  7541  0021B8  140E               	andwf	___xxtofl@arg+3,w,c
  7542  0021BA  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7543  0021BC  5005               	movf	??___xxtofl,w,c
  7544  0021BE  1006               	iorwf	??___xxtofl+1,w,c
  7545  0021C0  1007               	iorwf	??___xxtofl+2,w,c
  7546  0021C2  1008               	iorwf	??___xxtofl+3,w,c
  7547  0021C4  B4D8               	btfsc	status,2,c
  7548  0021C6  D00D               	goto	l912
  7549  0021C8  D7E7               	goto	l3923
  7550  0021CA                     l3927:
  7551  0021CA  2A0A               	incf	___xxtofl@exp,f,c
  7552  0021CC  0E01               	movlw	1
  7553  0021CE  260B               	addwf	___xxtofl@arg,f,c
  7554  0021D0  0E00               	movlw	0
  7555  0021D2  220C               	addwfc	___xxtofl@arg+1,f,c
  7556  0021D4  220D               	addwfc	___xxtofl@arg+2,f,c
  7557  0021D6  220E               	addwfc	___xxtofl@arg+3,f,c
  7558  0021D8  90D8               	bcf	status,0,c
  7559  0021DA  320E               	rrcf	___xxtofl@arg+3,f,c
  7560  0021DC  320D               	rrcf	___xxtofl@arg+2,f,c
  7561  0021DE  320C               	rrcf	___xxtofl@arg+1,f,c
  7562  0021E0  320B               	rrcf	___xxtofl@arg,f,c
  7563  0021E2                     l912:
  7564  0021E2  0E00               	movlw	0
  7565  0021E4  140B               	andwf	___xxtofl@arg,w,c
  7566  0021E6  6E05               	movwf	??___xxtofl& (0+255),c
  7567  0021E8  0E00               	movlw	0
  7568  0021EA  140C               	andwf	___xxtofl@arg+1,w,c
  7569  0021EC  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7570  0021EE  0E00               	movlw	0
  7571  0021F0  140D               	andwf	___xxtofl@arg+2,w,c
  7572  0021F2  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7573  0021F4  0EFF               	movlw	255
  7574  0021F6  140E               	andwf	___xxtofl@arg+3,w,c
  7575  0021F8  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7576  0021FA  5005               	movf	??___xxtofl,w,c
  7577  0021FC  1006               	iorwf	??___xxtofl+1,w,c
  7578  0021FE  1007               	iorwf	??___xxtofl+2,w,c
  7579  002200  1008               	iorwf	??___xxtofl+3,w,c
  7580  002202  B4D8               	btfsc	status,2,c
  7581  002204  D007               	goto	l3935
  7582  002206  D7E1               	goto	l3927
  7583  002208                     l3933:
  7584  002208  060A               	decf	___xxtofl@exp,f,c
  7585  00220A  90D8               	bcf	status,0,c
  7586  00220C  360B               	rlcf	___xxtofl@arg,f,c
  7587  00220E  360C               	rlcf	___xxtofl@arg+1,f,c
  7588  002210  360D               	rlcf	___xxtofl@arg+2,f,c
  7589  002212  360E               	rlcf	___xxtofl@arg+3,f,c
  7590  002214                     l3935:
  7591  002214  BE0D               	btfsc	___xxtofl@arg+2,7,c
  7592  002216  D003               	goto	u4840
  7593  002218  0E02               	movlw	2
  7594  00221A  600A               	cpfslt	___xxtofl@exp,c
  7595  00221C  D7F5               	goto	l3933
  7596  00221E                     u4840:
  7597  00221E  A00A               	btfss	___xxtofl@exp,0,c
  7598  002220  9E0D               	bcf	___xxtofl@arg+2,7,c
  7599  002222  90D8               	bcf	status,0,c
  7600  002224  320A               	rrcf	___xxtofl@exp,f,c
  7601  002226  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7602  00222A  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  7603  00222C  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  7604  00222E  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  7605  002230  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7606  002234  6A07               	clrf	??___xxtofl+2,c
  7607  002236  6A06               	clrf	??___xxtofl+1,c
  7608  002238  6A05               	clrf	??___xxtofl,c
  7609  00223A  5005               	movf	??___xxtofl,w,c
  7610  00223C  120B               	iorwf	___xxtofl@arg,f,c
  7611  00223E  5006               	movf	??___xxtofl+1,w,c
  7612  002240  120C               	iorwf	___xxtofl@arg+1,f,c
  7613  002242  5007               	movf	??___xxtofl+2,w,c
  7614  002244  120D               	iorwf	___xxtofl@arg+2,f,c
  7615  002246  5008               	movf	??___xxtofl+3,w,c
  7616  002248  120E               	iorwf	___xxtofl@arg+3,f,c
  7617  00224A  5009               	movf	___xxtofl@sign,w,c
  7618  00224C  A4D8               	btfss	status,2,c
  7619  00224E  AE04               	btfss	___xxtofl@val+3,7,c
  7620  002250  D001               	goto	l3951
  7621  002252  8E0E               	bsf	___xxtofl@arg+3,7,c
  7622  002254                     l3951:
  7623  002254  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7624  002258  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7625  00225C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7626  002260  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7627  002264  0012               	return		;funcret
  7628  002266                     __end_of___xxtofl:
  7629                           	opt callstack 0
  7630                           
  7631                           	psect	rparam
  7632  0000                     tosu	equ	0xFFF
  7633                           tosh	equ	0xFFE
  7634                           tosl	equ	0xFFD
  7635                           stkptr	equ	0xFFC
  7636                           pclatu	equ	0xFFB
  7637                           pclath	equ	0xFFA
  7638                           pcl	equ	0xFF9
  7639                           tblptru	equ	0xFF8
  7640                           tblptrh	equ	0xFF7
  7641                           tblptrl	equ	0xFF6
  7642                           tablat	equ	0xFF5
  7643                           prodh	equ	0xFF4
  7644                           prodl	equ	0xFF3
  7645                           indf0	equ	0xFEF
  7646                           postinc0	equ	0xFEE
  7647                           postdec0	equ	0xFED
  7648                           preinc0	equ	0xFEC
  7649                           plusw0	equ	0xFEB
  7650                           fsr0h	equ	0xFEA
  7651                           fsr0l	equ	0xFE9
  7652                           wreg	equ	0xFE8
  7653                           indf1	equ	0xFE7
  7654                           postinc1	equ	0xFE6
  7655                           postdec1	equ	0xFE5
  7656                           preinc1	equ	0xFE4
  7657                           plusw1	equ	0xFE3
  7658                           fsr1h	equ	0xFE2
  7659                           fsr1l	equ	0xFE1
  7660                           bsr	equ	0xFE0
  7661                           indf2	equ	0xFDF
  7662                           postinc2	equ	0xFDE
  7663                           postdec2	equ	0xFDD
  7664                           preinc2	equ	0xFDC
  7665                           plusw2	equ	0xFDB
  7666                           fsr2h	equ	0xFDA
  7667                           fsr2l	equ	0xFD9
  7668                           status	equ	0xFD8


Data Sizes:
    Strings     38
    Constant    0
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     92     106
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), main@data(BANK0[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), main@data(BANK0[10]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), main@data(BANK0[10]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), main@data(BANK0[10]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), STR_2(CODE[6]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), STR_2(CODE[6]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK0[10]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK0[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S748_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), main@data(BANK0[10]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    send_string@string	PTR unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[8]), main@data(BANK0[10]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK0[10]), 


Critical Paths under _main in COMRAM

    _strcat->_strcpy
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _strcpy->_strlen
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _send_string->_send_chr
    _send_string->_send_cmd
    _send_chr->_MSdelay
    __init_lcd->_send_cmd
    _send_cmd->_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   35185
                                             74 BANK0     18    18      0
                            ___flmul
                           ___xxtofl
                          __init_lcd
                           _adc_init
                           _adc_read
                        _send_string
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     0      4    1474
                                             14 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   27949
                                             56 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27592
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   27220
                                             63 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   21921
                                             51 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _strcpy                                              10     6      4    1008
                                              4 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3241
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _send_string                                          5     2      3    1539
                                              9 COMRAM     5     2      3
                           _send_chr
                           _send_cmd
 ---------------------------------------------------------------------------------
 (2) _send_chr                                             3     3      0     539
                                              6 COMRAM     3     3      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             6     4      2     121
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) __init_lcd                                            0     0      0    1011
                            _MSdelay
                           _send_cmd
 ---------------------------------------------------------------------------------
 (2) _send_cmd                                             3     3      0     539
                                              6 COMRAM     3     3      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _MSdelay                                              6     4      2     472
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   __init_lcd
     _MSdelay
     _send_cmd
       _MSdelay
   _adc_init
   _adc_read
   _send_string
     _send_chr
       _MSdelay
     _send_cmd
       _MSdelay
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
             _strlen (ARG)
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
   _strcat
     _strcpy
       _strlen (ARG)
     _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      6A       5       66.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     119      20        0.0%
DATA                 0      0     119       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Aug 31 18:55:04 2019

           ___fldiv@aexp 0019             ___fldiv@bexp 0018             ___fldiv@sign 0011  
                     l18 2C2A             ___awdiv@sign 0006              __CFG_BOR$ON 000000  
    ___wmul@multiplicand 0003              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l120 2712                      l161 0B64  
                    l515 23E0                      l187 0E46                      l804 1B16  
                    l805 1B12                      l912 21E2                      l905 2164  
                    l834 1D1A                      l780 19BC                      l845 1D88  
                    l846 1D84                      l960 211C                      l864 15CA  
                    l881 1868                      l873 17E2                      l874 17DE  
                    l795 1AB0                      l779 19DE                      l972 1F46  
                    _LD4 007C64                      _LD5 007C65             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      _pad 26E4             ___awmod@sign 0006  
                    wreg 000FE8             ___flmul@aexp 0020             ___flmul@bexp 0021  
            _tolower$827 000D             ___flmul@sign 001B             ___flmul@temp 0026  
           ___flmul@prod 0022              main@dig_old 00B8              main@digital 00BA  
           ___fltol@exp1 000A             __CFG_WDT$OFF 000000                     l1059 2B4C  
                   l3021 158A                     l3201 292E                     l3113 1826  
                   l3017 1576                     l3203 2936                     l3035 15B6  
                   l3019 157A                     l3213 2958                     l3117 1844  
                   l3045 15E8                     l3037 15BA                     l3301 2574  
                   l3161 283E                     l3217 2966                     l3209 294E  
                   l3233 2800                     l3225 27AE                     l3241 2380  
                   l3129 1886                     l3401 0ABC                     l3163 2846  
                   l3155 2828                     l3307 2590                     l3181 287E  
                   l3173 2866                     l3149 2818                     l3229 27E2  
                   l3245 23B4                     l3093 17A8                     l2605 1910  
                   l3421 0B6E                     l3405 0AF8                     l3333 0872  
                   l3319 2BD2                     l3255 2418                     l3087 178A  
                   l3263 2D30                     l2711 1AD4                     l2703 1AA0  
                   l3177 2870                     l3193 2914                     l3249 23CA  
                   l2721 1AEA                     l2617 1934                     l2609 1914  
                   l3273 2506                     l2801 2494                     l2553 2BFA  
                   l3417 0B4C                     l3345 08A0                     l3353 08B6  
                   l2811 24DE                     l2539 265C                     l3507 0EE2  
                   l3435 0BBC                     l3427 0B74                     l3363 0922  
                   l3371 096A                     l3197 2920                     l2661 19CE  
                   l2581 18C8                     l3293 2560                     l2805 249E  
                   l2549 2BE4                     l2557 2D4C                     l3453 0C02  
                   l3437 0BC0                     l3381 09D6                     l3365 093A  
                   l3623 1FF8                     l2911 1C4C                     l2903 1C18  
                   l2727 1AF4                     l2647 1970                     l2559 2D50  
                   l3519 0F12                     l3527 0F32                     l3535 0F56  
                   l3543 0FEE                     l3463 0C3C                     l3471 0D32  
                   l3447 0BDE                     l3367 0944                     l3641 205A  
                   l3633 2042                     l3625 1FFC                     l2761 1B8C  
                   l2585 18CC                     l3289 2550                     l2817 2A28  
                   l3609 1168                     l3457 0C12                     l3721 1292  
                   l3643 2060                     l2755 1B82                     l2747 1B5C  
                   l2683 1A24                     l2675 1A02                     l2659 19CA  
                   l3299 2568                     l2835 1EA8                     l3571 107C  
                   l3555 1030                     l3395 0A34                     l3645 2088  
                   l2925 1C7A                     l2917 1C62                     l2685 1A28  
                   l2693 1A3A                     l2853 1FD4                     l2845 1F68  
                   l2781 271C                     l3573 1086                     l3493 0E3E  
                   l3485 0DE6                     l3389 09F0                     l3717 1266  
                   ?_pad 0011                     l3903 28B0                     l3639 2052  
                   l2943 1CF2                     l2935 1CCA                     l2759 1B8A  
                   l2775 26FC                     l3583 10DC                     l3495 0E60  
                   l3479 0DA8                     l3399 0A6E                     l3671 25DA  
                   l3719 1284                     l3921 2192                     l3649 20BC  
                   l2961 1D4E                     l2849 1FA6                     l2785 2734  
                   l3593 1108                     l3745 13C0                     l3737 1364  
                   l3841 2984                     l3923 2198                     l3915 2174  
                   l3691 2C92                     l3907 28D8                     l2955 1D30  
                   l2883 1BD8                     l2779 270A                     l3771 14F4  
                   l3843 29AA                     l3933 2208                     l3925 21A4  
                   l3685 2C8A                     l2981 1DCC                     l2949 1D18  
                   l2789 2760                     l3669 25CC                     l3765 14B8  
                   l3749 13EA                     l3781 1516                     l3951 2254  
                   l3935 2214                     l3927 21CA                     l2879 1BD4  
                   l3775 14FE                     l3697 2CA6                     l2985 1DF0  
                   l3961 2274                     l2995 1E26                     l2899 1C14  
                   l2997 1E28                     l2989 1E1A                     l3899 28A0  
                   STR_1 080F                     STR_2 0809                     STR_3 0801  
                   STR_4 0814                     STR_5 081C                     STR_8 0818  
                   STR_9 0820                     u3010 24D6                     u3020 24D8  
                   u3005 24B8                     u3030 2A60                     _LATD 000F8C  
                   u3130 1F26                     u3050 2B32                     u4010 09AC  
                   u3115 1EC0                     u3116 1EC6                     u3060 2B34  
                   u4020 09AE                     u3117 1ED4                     u3037 2A56  
                   u3150 1F86                     u2510 2CDC                     u3135 1F1C  
                   u3400 1DDA                     u3080 1E76                     u2520 2CDE  
                   u4120 0B8C                     u3410 1DFE                     u3090 1E96  
                   u3155 1F7C                     u3180 2D0C                     u3500 15D6  
                   u2620 1992                     u2460 2654                     u4060 0B20  
                   u3085 1E6C                     u3190 2D0E                     u3510 174C  
                   u2630 19A2                     u3360 1D7E                     u3600 1852  
                   u2800 1AF8                     u2640 19A4                     u2480 269C  
                   u4160 0BDA                     u4410 1152                     u4330 1012  
                   u4090 0B5A                     u3515 1742                     u2820 1B0C  
                   u4420 1154                     u3710 293A                     u3550 17D8  
                   u2670 19E6                     u4450 203E                     u3650 284A  
                   u4610 12CA                     u4620 12CC                     u3910 2BCE  
                   u4470 20EC                     u3590 1834                     u3830 24F4  
                   u4390 10F2                     u4550 2620                     u4630 12D8  
                   u4560 2CA2                     u4480 20EE                     u3760 27FC  
                   u2880 1B68                     u3840 2524                     u2960 245A  
                   u3940 0890                     u3845 251A                     u2965 2450  
                   u4750 28D0                     u4840 221E                     u4760 28F8  
                   u3880 257A                     u4680 146C                     u3970 08F8  
                   u4690 146E                     u3980 08FA                     u4757 28C6  
                   u4767 28EE                     u4880 2298                     _dbuf 0100  
                   _atoi 1FE6                     _main 2266                     _prec 00C8  
                   _nout 00C4                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9            ___fpclassifyf 241C                     prodh 000FF4  
                   prodl 000FF3                     start 0000          __end_of_MSdelay 2CB4  
          __CFG_IESO$OFF 000000          ___fldiv@new_exp 0012              main@voltage 00B4  
           ___param_bank 000000                    ??_pad 0017            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000            ___fltol@sign1 0009                    ?_atoi 0008  
        __end_of___fladd 1BA8                    ?_main 0001          __end_of___fldiv 1E30  
        __end_of___awdiv 2888          __end_of___flneg 2D42                    STR_12 0824  
                  STR_14 0824          __end_of___awmod 2970          __end_of___flmul 189C  
        __end_of___flsub 2B9C          __end_of___fltol 25A2          ___awdiv@divisor 0003  
        ___awdiv@counter 0005             vfpfcnvrt@fmt 0042            __CFG_USBDIV$1 000000  
                  _TRISA 000F92                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _flags 005E                    _fputc 2644  
                  _fputs 2BDA          __end_of_isdigit 2D14                    atoi@n 0015  
                  pad@fp 0011                    atoi@s 0008                    _width 00C6  
                  _putch 2DF2          __end_of_isspace 2BDA          __end_of_isupper 2CE4  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 2A18  
         ?___fpclassifyf 0001          __end_of_tolower 2B56          __end_of_strncmp 2644  
         __CFG_ICPRT$OFF 000000           __CFG_MCLRE$OFF 000000          __initialization 2D6C  
           __end_of_atoi 2126             __end_of_main 234C                   ??_atoi 000A  
                 ??_main 005E            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_fputc 0001  
                 ?_fputs 000A                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0001                   ?_putch 0001         __end_of_adc_init 2DF2  
       __end_of_adc_read 2C4A                ??_MSdelay 0003             ?_send_string 000A  
       __end_of___xxtofl 2266           send_string@col 000A           send_string@loc 000E  
         send_string@row 000D           __CFG_XINST$OFF 000000             vfprintf@cfmt 005C  
                 ___flge 234C                   ___fleq 277A                ??___fladd 0009  
                 ___wmul 2DB8                ??___fldiv 0009                ??___awdiv 0005  
              ??___flneg 0005           __CFG_STVREN$ON 000000                ??___awmod 0005  
              ??___flmul 0017                ??___flsub 0030                ??___fltol 0005  
                 _efgtoa 0828                   _floorf 1E30                   clear_0 2D72  
                 clear_1 2D7E         ___awdiv@quotient 0007          ___awmod@divisor 0003  
        ___awmod@counter 0005                   pad@buf 0013                   _strcat 2D92  
                 _strcpy 2A18                   _strlen 2D42         __end_of_send_cmd 2B0A  
       __end_of_send_chr 2ABA                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_isdigit 0003  
        ___fpclassifyf@e 0009          ___fpclassifyf@u 000B          ___fpclassifyf@x 0001  
           __mediumconst 0000                ??_isspace 0003                   tblptrh 000FF7  
              ??_isupper 0003                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 29C6                ??_sprintf 005E  
              ??_tolower 0009                ??_strncmp 0007               ___flge@ff1 0028  
             ___flge@ff2 002C          ??___fpclassifyf 0005             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001               ___fleq@ff1 0001  
             ___fleq@ff2 0005               __accesstop 0060  __end_of__initialization 2D88  
        __CFG_PBADEN$OFF 000000               ___flneg@f1 0001            ___rparam_used 000001  
             ___fltol@f1 0001           __pcstackCOMRAM 0001       __size_of__init_lcd 0036  
          __end_of_fputc 26E4            __end_of_fputs 2C12            __end_of_putch 2DF4  
                ??_fputc 0005                  ??_fputs 000E                  ??_putch 0001  
             __pbssBANK0 00BC               __pbssBANK1 0100               _efgtoa$203 0064  
             _efgtoa$204 0066               _efgtoa$213 006A               _efgtoa$214 006C  
             _efgtoa$215 006E               _efgtoa$209 0068                  ?___flge 0028  
                ?___fleq 0001                  ?___wmul 0001                  ?_efgtoa 0034  
                ?_floorf 001A                ?_adc_init 0001                ?_adc_read 0001  
                ?_strcat 000F                  ?_strcpy 0005                  ?_strlen 0001  
              ?___xxtofl 0001       __size_of_vfpfcnvrt 03A4              send_cmd@cmd 0009  
            send_chr@chr 0009        __end_of__init_lcd 2C80                  _MSdelay 2C80  
        __CFG_VREGEN$OFF 000000     __size_of_send_string 0078                ?_send_cmd 0001  
              ?_send_chr 0001                  __Hparam 0000                  __Lparam 0000  
        __size_of___flge 00D0          __size_of___fleq 008A                  ___fladd 189C  
                ___fldiv 1BA8                  ___awdiv 2804                  ___flneg 2D14  
                ___awmod 2900                  ___flmul 154A                  ___flsub 2B56  
                ___fltol 24E8          __size_of___wmul 0026                ?_vfprintf 0056  
           __psmallconst 0800          __size_of_efgtoa 097E          __size_of_floorf 01B6  
                __pcinit 2D6C                  __ramtop 0800               ??_adc_init 0001  
             ??_adc_read 0003                  __ptext0 2266                  __ptext1 2D92  
                __ptext2 29C6                  __ptext3 2970                  __ptext4 11A6  
                __ptext5 25A2                  __ptext6 0828                  __ptext7 2B0A  
                __ptext8 2CB4                  __ptext9 2A18          __size_of_strcat 0026  
        __size_of_strcpy 0052          __size_of_strlen 002A             __size_of_pad 0096  
                _isdigit 2CE4               ??___xxtofl 0005         ___awmod@dividend 0001  
                _isspace 2B9C                  _isupper 2CB4                  efgtoa@c 003A  
                efgtoa@d 0078                  efgtoa@e 0090                  efgtoa@f 0036  
                efgtoa@g 008C                  efgtoa@h 0082                  efgtoa@i 008A  
                efgtoa@l 0086                  efgtoa@m 0074                  efgtoa@n 0092  
                efgtoa@p 007C                  efgtoa@t 0070                  efgtoa@u 0094  
                efgtoa@w 007F                  atoi@neg 000E                  _sprintf 29C6  
                _tolower 2B0A                  _strncmp 25A2     end_of_initialization 2D88  
                floorf@e 0028                  floorf@m 0024                  floorf@u 002A  
                floorf@x 001A                  fputc@fp 0003            __Lmediumconst 0000  
                fputs@fp 000C               ??_send_cmd 0007               ??_send_chr 0007  
      __end_of_vfpfcnvrt 154A               efgtoa@mode 0081               efgtoa@sign 007A  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 005C                  strcpy@d 000D  
                strlen@a 0003                  strcpy@s 000B                  strlen@s 0001  
            ___fladd@grs 0010            ___xxtofl@sign 0009              ___fldiv@grs 0014  
            ___fldiv@rem 000D              ___flmul@grs 001C        send_string@string 000B  
         __end_of___flge 241C           __end_of___fleq 2804              vfpfcnvrt@ap 0044  
            vfpfcnvrt@ct 0052              vfpfcnvrt@fp 0040           __end_of___wmul 2DDE  
         __end_of_efgtoa 11A6           __end_of_floorf 1FE6               floorf@F524 00BC  
         __end_of_strcat 2DB8           __end_of_strcpy 2A6A           __end_of_strlen 2D6C  
    start_initialization 2D6C              __end_of_pad 277A    __end_of___fpclassifyf 24E8  
            vfprintf@fmt 0058                 ??___flge 0030                 ??___fleq 0009  
               ??___wmul 0005                 ??_efgtoa 003B                 ??_floorf 001E  
       __CFG_LPT1OSC$OFF 000000                 ??_strcat 0013                 ??_strcpy 0009  
               ??_strlen 0003                ___fladd@a 0005                ___fladd@b 0001  
              ___fldiv@a 0005                ___fldiv@b 0001        __size_of_adc_init 0014  
      __size_of_adc_read 0038                ___flmul@a 0013                ___flmul@b 000F  
            __pbssCOMRAM 005E                ___flsub@a 002C                ___flsub@b 0028  
        adc_read@digital 0005            __pcstackBANK0 0060        __size_of___xxtofl 0140  
               ?_MSdelay 0001                __init_lcd 2C4A              adc_read@adc 0001  
      __size_of_send_cmd 0050        __size_of_send_chr 0050                 ?___fladd 0001  
               ?___fldiv 0001                 ?___awdiv 0001                 ?___flneg 0001  
               ?___awmod 0001                 ?___flmul 000F                 ?___flsub 0028  
               ?___fltol 0001        __size_of_vfprintf 0056              __smallconst 0800  
               ?_isdigit 0001                 ?_isspace 0001                 ?_isupper 0001  
               ?_sprintf 0098                 ?_tolower 0007           __size_of_fputc 00A0  
         __size_of_fputs 0038                 ?_strncmp 0001           __size_of_putch 0002  
          ??_send_string 000D                 MSdelay@i 0003                 MSdelay@j 0005  
         ___wmul@product 0005               ?__init_lcd 0001         __CFG_WDTPS$32768 000000  
           send_cmd@copy 0008             send_chr@copy 0008                _vfpfcnvrt 11A6  
      ___wmul@multiplier 0001               vfpfcnvrt@c 0055               vfpfcnvrt@f 004E  
       __size_of_MSdelay 0034                 __Hrparam 0000      __end_of_send_string 2900  
             vfprintf@ap 005A                 __Lrparam 0000               vfprintf@fp 0056  
       __size_of___fladd 030C         __size_of___fldiv 0288         __size_of___awdiv 0084  
       __size_of___flneg 002E         __size_of___awmod 0070         __size_of___flmul 0352  
       __size_of___flsub 0046         __size_of___fltol 00BA               ?_vfpfcnvrt 0040  
               _adc_init 2DDE                 _adc_read 2C12    __CFG_FOSC$INTOSCIO_EC 000000  
     ___fpclassifyf@F463 00C0               sprintf@fmt 009A                 ___xxtofl 2126  
             strcat@dest 000F                 _atoi$704 0010                 _atoi$705 0014  
               _atoi$706 0012         __size_of_isdigit 0030         __size_of_isspace 003E  
               __ptext10 26E4                 __ptext11 2D42                 __ptext20 2D14  
               __ptext12 2BDA                 __ptext21 154A                 __ptext13 2644  
               __ptext30 2DB8                 __ptext22 234C                 __ptext14 2DF2  
               __ptext31 2888                 __ptext23 277A                 __ptext15 1E30  
               __ptext32 2A6A                 __ptext24 1BA8                 __ptext16 241C  
               __ptext33 2C12                 __ptext25 2900                 __ptext17 24E8  
               __ptext34 2DDE                 __ptext26 2804                 __ptext18 2B56  
               __ptext35 2C4A                 __ptext27 1FE6                 __ptext19 189C  
               __ptext36 2ABA                 __ptext28 2B9C                 __ptext37 2C80  
               __ptext29 2CE4                 __ptext38 2126         __size_of_isupper 0030  
       __size_of_sprintf 0052         __size_of_tolower 004C               strcpy@dest 0005  
       __size_of_strncmp 00A2            __size_of_atoi 0140            __size_of_main 00E6  
            ??__init_lcd 000A                 _send_cmd 2ABA                 _send_chr 2A6A  
             MSdelay@val 0001                 efgtoa@fp 0034                 efgtoa@ne 0076  
               efgtoa@pp 0072                 efgtoa@ou 0060                 _vfprintf 2970  
               main@data 00AA              _isspace$735 0007    __CFG_CPUDIV$OSC1_PLL2 000000  
               isdigit@c 0001                sprintf@ap 00A2                strcat@src 0011  
            _send_string 2888                 isspace@c 0001                strcpy@src 0007  
               isupper@c 0001                strncmp@_l 0001                strncmp@_r 0003  
            efgtoa@nmode 007E              ??_vfpfcnvrt 0046            _vfpfcnvrt$233 004C  
          _vfpfcnvrt$229 004A                 sprintf@f 00A4                 tolower@c 0007  
               sprintf@s 0098   __size_of___fpclassifyf 00CC                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A            ___fladd@signs 000D  
           ___fladd@aexp 000E             ___fladd@bexp 000F  
