

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jul 28 18:18:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4550 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _LATC	set	3979
    48  0000                     _TRISC	set	3988
    49  0000                     _OSCCON	set	4051
    50                           
    51                           ; #config settings
    52  0000                     
    53                           	psect	cinit
    54  007FA8                     __pcinit:
    55                           	opt callstack 0
    56  007FA8                     start_initialization:
    57                           	opt callstack 0
    58  007FA8                     __initialization:
    59                           	opt callstack 0
    60  007FA8                     end_of_initialization:
    61                           	opt callstack 0
    62  007FA8                     __end_of__initialization:
    63                           	opt callstack 0
    64  007FA8  0100               	movlb	0
    65  007FAA  EFD7  F03F         	goto	_main	;jump to C main() function
    66                           
    67                           	psect	cstackCOMRAM
    68  000001                     __pcstackCOMRAM:
    69                           	opt callstack 0
    70  000001                     MSdelay@val:
    71                           	opt callstack 0
    72                           
    73                           ; 2 bytes @ 0x0
    74  000001                     	ds	2
    75  000003                     MSdelay@i:
    76                           	opt callstack 0
    77                           
    78                           ; 2 bytes @ 0x2
    79  000003                     	ds	2
    80  000005                     MSdelay@j:
    81                           	opt callstack 0
    82                           
    83                           ; 2 bytes @ 0x4
    84  000005                     	ds	2
    85  000007                     
    86                           ; 1 bytes @ 0x6
    87 ;;
    88 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    89 ;;
    90 ;; *************** function _main *****************
    91 ;; Defined at:
    92 ;;		line 11 in file "main.c"
    93 ;; Parameters:    Size  Location     Type
    94 ;;		None
    95 ;; Auto vars:     Size  Location     Type
    96 ;;		None
    97 ;; Return value:  Size  Location     Type
    98 ;;                  1    wreg      void 
    99 ;; Registers used:
   100 ;;		wreg, status,2, status,0, cstack
   101 ;; Tracked objects:
   102 ;;		On entry : 0/0
   103 ;;		On exit  : 0/0
   104 ;;		Unchanged: 0/0
   105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   106 ;;      Params:         0       0       0       0       0       0       0       0       0
   107 ;;      Locals:         0       0       0       0       0       0       0       0       0
   108 ;;      Temps:          0       0       0       0       0       0       0       0       0
   109 ;;      Totals:         0       0       0       0       0       0       0       0       0
   110 ;;Total ram usage:        0 bytes
   111 ;; Hardware stack levels required when called:    2
   112 ;; This function calls:
   113 ;;		_fun
   114 ;; This function is called by:
   115 ;;		Startup code after reset
   116 ;; This function uses a non-reentrant model
   117 ;;
   118                           
   119                           	psect	text0
   120  007FAE                     __ptext0:
   121                           	opt callstack 0
   122  007FAE                     _main:
   123                           	opt callstack 29
   124                           
   125                           ;main.c: 12:     OSCCON = 0x72;
   126                           
   127                           ;incstack = 0
   128  007FAE  0E72               	movlw	114
   129  007FB0  6ED3               	movwf	4051,c	;volatile
   130                           
   131                           ;main.c: 13:     TRISC &= ~(1<<0);
   132  007FB2  9094               	bcf	3988,0,c	;volatile
   133  007FB4                     l755:
   134                           
   135                           ;main.c: 15:         fun();
   136  007FB4  ECDD  F03F         	call	_fun	;wreg free
   137  007FB8  D7FD               	goto	l755
   138  007FBA                     __end_of_main:
   139                           	opt callstack 0
   140                           
   141 ;; *************** function _fun *****************
   142 ;; Defined at:
   143 ;;		line 12 in file "exp.c"
   144 ;; Parameters:    Size  Location     Type
   145 ;;		None
   146 ;; Auto vars:     Size  Location     Type
   147 ;;		None
   148 ;; Return value:  Size  Location     Type
   149 ;;                  1    wreg      void 
   150 ;; Registers used:
   151 ;;		wreg, status,2, status,0, cstack
   152 ;; Tracked objects:
   153 ;;		On entry : 0/0
   154 ;;		On exit  : 0/0
   155 ;;		Unchanged: 0/0
   156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   157 ;;      Params:         0       0       0       0       0       0       0       0       0
   158 ;;      Locals:         0       0       0       0       0       0       0       0       0
   159 ;;      Temps:          0       0       0       0       0       0       0       0       0
   160 ;;      Totals:         0       0       0       0       0       0       0       0       0
   161 ;;Total ram usage:        0 bytes
   162 ;; Hardware stack levels used:    1
   163 ;; Hardware stack levels required when called:    1
   164 ;; This function calls:
   165 ;;		_MSdelay
   166 ;; This function is called by:
   167 ;;		_main
   168 ;; This function uses a non-reentrant model
   169 ;;
   170                           
   171                           	psect	text1
   172  007FBA                     __ptext1:
   173                           	opt callstack 0
   174  007FBA                     _fun:
   175                           	opt callstack 29
   176                           
   177                           ;exp.c: 13:     MSdelay(300);
   178                           
   179                           ;incstack = 0
   180  007FBA  0E01               	movlw	1
   181  007FBC  6E02               	movwf	MSdelay@val+1,c
   182  007FBE  0E2C               	movlw	44
   183  007FC0  6E01               	movwf	MSdelay@val,c
   184  007FC2  ECE6  F03F         	call	_MSdelay	;wreg free
   185                           
   186                           ;exp.c: 14:     LATC ^= (1<<0);
   187  007FC6  0E01               	movlw	1
   188  007FC8  1A8B               	xorwf	3979,f,c	;volatile
   189  007FCA  0012               	return		;funcret
   190  007FCC                     __end_of_fun:
   191                           	opt callstack 0
   192                           
   193 ;; *************** function _MSdelay *****************
   194 ;; Defined at:
   195 ;;		line 9 in file "delay.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;  val             2    0[COMRAM] unsigned int 
   198 ;; Auto vars:     Size  Location     Type
   199 ;;  j               2    4[COMRAM] unsigned int 
   200 ;;  i               2    2[COMRAM] unsigned int 
   201 ;; Return value:  Size  Location     Type
   202 ;;                  1    wreg      void 
   203 ;; Registers used:
   204 ;;		wreg, status,2, status,0
   205 ;; Tracked objects:
   206 ;;		On entry : 0/0
   207 ;;		On exit  : 0/0
   208 ;;		Unchanged: 0/0
   209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   210 ;;      Params:         2       0       0       0       0       0       0       0       0
   211 ;;      Locals:         4       0       0       0       0       0       0       0       0
   212 ;;      Temps:          0       0       0       0       0       0       0       0       0
   213 ;;      Totals:         6       0       0       0       0       0       0       0       0
   214 ;;Total ram usage:        6 bytes
   215 ;; Hardware stack levels used:    1
   216 ;; This function calls:
   217 ;;		Nothing
   218 ;; This function is called by:
   219 ;;		_fun
   220 ;; This function uses a non-reentrant model
   221 ;;
   222                           
   223                           	psect	text2
   224  007FCC                     __ptext2:
   225                           	opt callstack 0
   226  007FCC                     _MSdelay:
   227                           	opt callstack 29
   228                           
   229                           ;delay.c: 9: void MSdelay(unsigned int val);delay.c: 10: {;delay.c: 11:     unsigned int
      +                           i,j;;delay.c: 12:     for(i=0;i<val;i++){
   230                           
   231                           ;incstack = 0
   232  007FCC  0E00               	movlw	0
   233  007FCE  6E04               	movwf	MSdelay@i+1,c
   234  007FD0  0E00               	movlw	0
   235  007FD2  6E03               	movwf	MSdelay@i,c
   236  007FD4  D00E               	goto	l745
   237  007FD6                     l733:
   238                           
   239                           ;delay.c: 13:         for(j=0;j<165;j++){}
   240  007FD6  0E00               	movlw	0
   241  007FD8  6E06               	movwf	MSdelay@j+1,c
   242  007FDA  0E00               	movlw	0
   243  007FDC  6E05               	movwf	MSdelay@j,c
   244  007FDE                     l739:
   245  007FDE  4A05               	infsnz	MSdelay@j,f,c
   246  007FE0  2A06               	incf	MSdelay@j+1,f,c
   247  007FE2  5006               	movf	MSdelay@j+1,w,c
   248  007FE4  E104               	bnz	u30
   249  007FE6  0EA5               	movlw	165
   250  007FE8  5C05               	subwf	MSdelay@j,w,c
   251  007FEA  A0D8               	btfss	status,0,c
   252  007FEC  D7F8               	goto	l739
   253  007FEE                     u30:
   254                           
   255                           ;delay.c: 14:     }
   256  007FEE  4A03               	infsnz	MSdelay@i,f,c
   257  007FF0  2A04               	incf	MSdelay@i+1,f,c
   258  007FF2                     l745:
   259  007FF2  5001               	movf	MSdelay@val,w,c
   260  007FF4  5C03               	subwf	MSdelay@i,w,c
   261  007FF6  5002               	movf	MSdelay@val+1,w,c
   262  007FF8  5804               	subwfb	MSdelay@i+1,w,c
   263  007FFA  B0D8               	btfsc	status,0,c
   264  007FFC  0012               	return	
   265  007FFE  D7EB               	goto	l733
   266  008000                     __end_of_MSdelay:
   267                           	opt callstack 0
   268  0000                     
   269                           	psect	rparam
   270  0000                     tosu	equ	0xFFF
   271                           tosh	equ	0xFFE
   272                           tosl	equ	0xFFD
   273                           stkptr	equ	0xFFC
   274                           pclatu	equ	0xFFB
   275                           pclath	equ	0xFFA
   276                           pcl	equ	0xFF9
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           prodh	equ	0xFF4
   282                           prodl	equ	0xFF3
   283                           indf0	equ	0xFEF
   284                           postinc0	equ	0xFEE
   285                           postdec0	equ	0xFED
   286                           preinc0	equ	0xFEC
   287                           plusw0	equ	0xFEB
   288                           fsr0h	equ	0xFEA
   289                           fsr0l	equ	0xFE9
   290                           wreg	equ	0xFE8
   291                           indf1	equ	0xFE7
   292                           postinc1	equ	0xFE6
   293                           postdec1	equ	0xFE5
   294                           preinc1	equ	0xFE4
   295                           plusw1	equ	0xFE3
   296                           fsr1h	equ	0xFE2
   297                           fsr1l	equ	0xFE1
   298                           bsr	equ	0xFE0
   299                           indf2	equ	0xFDF
   300                           postinc2	equ	0xFDE
   301                           postdec2	equ	0xFDD
   302                           preinc2	equ	0xFDC
   303                           plusw2	equ	0xFDB
   304                           fsr2h	equ	0xFDA
   305                           fsr2l	equ	0xFD9
   306                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _fun->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     168
                                _fun
 ---------------------------------------------------------------------------------
 (1) _fun                                                  0     0      0     168
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2     168
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _fun
     _MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jul 28 18:18:56 2019

                     u30 7FEE              __CFG_BOR$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000                      l733 7FD6  
                    l745 7FF2                      l739 7FDE                      l755 7FB4  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      _fun 7FBA  
           __CFG_WDT$OFF 000000                     ?_fun 0001                     _LATC 000F8B  
                   _main 7FAE                     start 0000          __end_of_MSdelay 8000  
          __CFG_IESO$OFF 000000             ___param_bank 000000                    ??_fun 0007  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
          __CFG_USBDIV$1 000000                    _TRISC 000F94            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    status 000FD8           __CFG_ICPRT$OFF 000000  
         __CFG_PBADEN$ON 000000           __CFG_MCLRE$OFF 000000          __initialization 7FA8  
           __end_of_main 7FBA                   ??_main 0007            __activetblptr 000000  
              ??_MSdelay 0003                   _OSCCON 000FD3           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000               __accesstop 0060  __end_of__initialization 7FA8  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  _MSdelay 7FCC  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7FA8                  __ramtop 0800                  __ptext0 7FAE  
                __ptext1 7FBA                  __ptext2 7FCC             __size_of_fun 0012  
   end_of_initialization 7FA8      start_initialization 7FA8              __end_of_fun 7FCC  
       __CFG_LPT1OSC$OFF 000000                 ?_MSdelay 0001                 MSdelay@i 0003  
               MSdelay@j 0005         __CFG_WDTPS$32768 000000         __size_of_MSdelay 0034  
               __Hrparam 0000                 __Lrparam 0000    __CFG_FOSC$INTOSCIO_EC 000000  
          __size_of_main 000C               MSdelay@val 0001    __CFG_CPUDIV$OSC1_PLL2 000000  
