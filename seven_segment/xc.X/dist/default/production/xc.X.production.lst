

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 03 18:42:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F2220
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 2.05
    15                           ; Generated 20/12/2018 GMT
    16                           ; 
    17                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F2220 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     
    49                           	psect	idataCOMRAM
    50  000F78                     __pidataCOMRAM:
    51                           	opt callstack 0
    52                           
    53                           ;initializer for _arr
    54  000F78  3F                 	db	63
    55  000F79  06                 	db	6
    56  000F7A  5B                 	db	91
    57  000F7B  4F                 	db	79
    58  000F7C  66                 	db	102
    59  000F7D  6D                 	db	109
    60  000F7E  7D                 	db	125
    61  000F7F  07                 	db	7
    62  000F80  7F                 	db	127
    63  000F81  6F                 	db	111
    64  0000                     _PORTCbits	set	3970
    65  0000                     _LATB	set	3978
    66  0000                     _OSCCON	set	4051
    67  0000                     _TRISB	set	3987
    68  0000                     _TRISCbits	set	3988
    69                           
    70                           ; #config settings
    71  0000                     
    72                           	psect	cinit
    73  000F82                     __pcinit:
    74                           	opt callstack 0
    75  000F82                     start_initialization:
    76                           	opt callstack 0
    77  000F82                     __initialization:
    78                           	opt callstack 0
    79                           
    80                           ; Initialize objects allocated to COMRAM (10 bytes)
    81                           ; load TBLPTR registers with __pidataCOMRAM
    82  000F82  0E78               	movlw	low __pidataCOMRAM
    83  000F84  6EF6               	movwf	tblptrl,c
    84  000F86  0E0F               	movlw	high __pidataCOMRAM
    85  000F88  6EF7               	movwf	tblptrh,c
    86  000F8A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    87  000F8C  6EF8               	movwf	tblptru,c
    88  000F8E  EE00  F001         	lfsr	0,__pdataCOMRAM
    89  000F92  EE10 F00A          	lfsr	1,10
    90  000F96                     copy_data0:
    91  000F96  0009               	tblrd		*+
    92  000F98  CFF5 FFEE          	movff	tablat,postinc0
    93  000F9C  50E5               	movf	postdec1,w,c
    94  000F9E  50E1               	movf	fsr1l,w,c
    95  000FA0  E1FA               	bnz	copy_data0
    96                           
    97                           ; Clear objects allocated to COMRAM (1 bytes)
    98  000FA2  6A0D               	clrf	__pbssCOMRAM& (0+255),c
    99  000FA4                     end_of_initialization:
   100                           	opt callstack 0
   101  000FA4                     __end_of__initialization:
   102                           	opt callstack 0
   103  000FA4  0100               	movlb	0
   104  000FA6  EFD5  F007         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	bssCOMRAM
   107  00000D                     __pbssCOMRAM:
   108                           	opt callstack 0
   109  00000D                     _count:
   110                           	opt callstack 0
   111  00000D                     	ds	1
   112                           
   113                           	psect	dataCOMRAM
   114  000001                     __pdataCOMRAM:
   115                           	opt callstack 0
   116  000001                     _arr:
   117                           	opt callstack 0
   118  000001                     	ds	10
   119                           
   120                           	psect	cstackCOMRAM
   121  00000B                     __pcstackCOMRAM:
   122                           	opt callstack 0
   123  00000B                     ??_main:
   124                           
   125                           ; 1 bytes @ 0x0
   126  00000B                     	ds	2
   127                           
   128 ;;
   129 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   130 ;;
   131 ;; *************** function _main *****************
   132 ;; Defined at:
   133 ;;		line 15 in file "xc.c"
   134 ;; Parameters:    Size  Location     Type
   135 ;;		None
   136 ;; Auto vars:     Size  Location     Type
   137 ;;		None
   138 ;; Return value:  Size  Location     Type
   139 ;;                  1    wreg      void 
   140 ;; Registers used:
   141 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   142 ;; Tracked objects:
   143 ;;		On entry : 0/0
   144 ;;		On exit  : 0/0
   145 ;;		Unchanged: 0/0
   146 ;; Data sizes:     COMRAM   BANK0   BANK1
   147 ;;      Params:         0       0       0
   148 ;;      Locals:         0       0       0
   149 ;;      Temps:          2       0       0
   150 ;;      Totals:         2       0       0
   151 ;;Total ram usage:        2 bytes
   152 ;; This function calls:
   153 ;;		Nothing
   154 ;; This function is called by:
   155 ;;		Startup code after reset
   156 ;; This function uses a non-reentrant model
   157 ;;
   158                           
   159                           	psect	text0
   160  000FAA                     __ptext0:
   161                           	opt callstack 0
   162  000FAA                     _main:
   163                           	opt callstack 31
   164                           
   165                           ;xc.c: 17:     TRISCbits.RC0 = 1;
   166                           
   167                           ;incstack = 0
   168  000FAA  8094               	bsf	3988,0,c	;volatile
   169                           
   170                           ;xc.c: 18:     TRISB = 0;
   171  000FAC  0E00               	movlw	0
   172  000FAE  6E93               	movwf	3987,c	;volatile
   173                           
   174                           ;xc.c: 19:     OSCCON = 0x76;
   175  000FB0  0E76               	movlw	118
   176  000FB2  6ED3               	movwf	4051,c	;volatile
   177                           
   178                           ;xc.c: 20:     LATB = arr[count];
   179  000FB4  0E01               	movlw	low _arr
   180  000FB6  240D               	addwf	_count,w,c
   181  000FB8  6ED9               	movwf	fsr2l,c
   182  000FBA  6ADA               	clrf	fsr2h,c
   183  000FBC  0E00               	movlw	high _arr
   184  000FBE  22DA               	addwfc	fsr2h,f,c
   185  000FC0  50DF               	movf	indf2,w,c
   186  000FC2  6E8A               	movwf	3978,c	;volatile
   187  000FC4                     l708:
   188                           
   189                           ;xc.c: 22:         if(PORTCbits.RC0==0){
   190  000FC4  B082               	btfsc	3970,0,c	;volatile
   191  000FC6  D014               	goto	l716
   192                           
   193                           ;xc.c: 23:             count++;
   194  000FC8  2A0D               	incf	_count,f,c
   195                           
   196                           ;xc.c: 24:             LATB = arr[count];
   197  000FCA  0E01               	movlw	low _arr
   198  000FCC  240D               	addwf	_count,w,c
   199  000FCE  6ED9               	movwf	fsr2l,c
   200  000FD0  6ADA               	clrf	fsr2h,c
   201  000FD2  0E00               	movlw	high _arr
   202  000FD4  22DA               	addwfc	fsr2h,f,c
   203  000FD6  50DF               	movf	indf2,w,c
   204  000FD8  6E8A               	movwf	3978,c	;volatile
   205                           
   206                           ;xc.c: 25:             _delay((unsigned long)((300)*(8000000/4000.0)));
   207  000FDA  0E04               	movlw	4
   208  000FDC  6E0C               	movwf	(??_main+1)& (0+255),c
   209  000FDE  0E0C               	movlw	12
   210  000FE0  6E0B               	movwf	??_main& (0+255),c
   211  000FE2  0E34               	movlw	52
   212  000FE4                     u37:
   213  000FE4  2EE8               	decfsz	wreg,f,c
   214  000FE6  D7FE               	bra	u37
   215  000FE8  2E0B               	decfsz	??_main& (0+255),f,c
   216  000FEA  D7FC               	bra	u37
   217  000FEC  2E0C               	decfsz	(??_main+1)& (0+255),f,c
   218  000FEE  D7FA               	bra	u37
   219  000FF0                     l716:
   220                           
   221                           ;xc.c: 27:         if(count>9){
   222  000FF0  0E09               	movlw	9
   223  000FF2  640D               	cpfsgt	_count,c
   224  000FF4  D7E7               	goto	l708
   225                           
   226                           ;xc.c: 28:             count = 0;
   227  000FF6  0E00               	movlw	0
   228  000FF8  6E0D               	movwf	_count,c
   229                           
   230                           ;xc.c: 29:             LATB = arr[count];
   231  000FFA  C001  FF8A         	movff	_arr,3978	;volatile
   232  000FFE  D7E2               	goto	l708
   233  001000                     __end_of_main:
   234                           	opt callstack 0
   235  0000                     
   236                           	psect	rparam
   237  0000                     tosu	equ	0xFFF
   238                           tosh	equ	0xFFE
   239                           tosl	equ	0xFFD
   240                           stkptr	equ	0xFFC
   241                           pclatu	equ	0xFFB
   242                           pclath	equ	0xFFA
   243                           pcl	equ	0xFF9
   244                           tblptru	equ	0xFF8
   245                           tblptrh	equ	0xFF7
   246                           tblptrl	equ	0xFF6
   247                           tablat	equ	0xFF5
   248                           prodh	equ	0xFF4
   249                           prodl	equ	0xFF3
   250                           indf0	equ	0xFEF
   251                           postinc0	equ	0xFEE
   252                           postdec0	equ	0xFED
   253                           preinc0	equ	0xFEC
   254                           plusw0	equ	0xFEB
   255                           fsr0h	equ	0xFEA
   256                           fsr0l	equ	0xFE9
   257                           wreg	equ	0xFE8
   258                           indf1	equ	0xFE7
   259                           postinc1	equ	0xFE6
   260                           postdec1	equ	0xFE5
   261                           preinc1	equ	0xFE4
   262                           plusw1	equ	0xFE3
   263                           fsr1h	equ	0xFE2
   264                           fsr1l	equ	0xFE1
   265                           bsr	equ	0xFE0
   266                           indf2	equ	0xFDF
   267                           postinc2	equ	0xFDE
   268                           postdec2	equ	0xFDD
   269                           preinc2	equ	0xFDC
   270                           plusw2	equ	0xFDB
   271                           fsr2h	equ	0xFDA
   272                           fsr2l	equ	0xFD9
   273                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2      13
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      2       D       1       10.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D       7        0.0%
DATA                 0      0       D       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 03 18:42:11 2019

                     u37 0FE4             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
            __CFG_LVP$ON 000000                      l716 0FF0                      l708 0FC4  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000  
                    _arr 0001             __CFG_BORV$20 000000                      wreg 000FE8  
           __CFG_FSCM$ON 000000             __CFG_IESO$ON 000000             __CFG_WDT$OFF 000000  
                   _LATB 000F8A             __CFG_STVR$ON 000000                     _main 0FAA  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
          __CFG_PBAD$ANA 000000                     start 0000             ___param_bank 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 000B                    _TRISB 000F93  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _count 000D                    tablat 000FF5           __CFG_MCLRE$OFF 000000  
        __initialization 0F82             __end_of_main 1000                   ??_main 000B  
          __activetblptr 000000                   _OSCCON 000FD3             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 0FA4            ___rparam_used 000001  
         __pcstackCOMRAM 000B          __CFG_OSC$INTIO2 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0F82                  __ramtop 0200  
                __ptext0 0FAA     end_of_initialization 0FA4                  postdec1 000FE5  
                postinc0 000FEE                _PORTCbits 000F82                _TRISCbits 000F94  
          __pidataCOMRAM 0F78      start_initialization 0F82              __pbssCOMRAM 000D  
       __CFG_WDTPS$32768 000000                copy_data0 0F96                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0056  
