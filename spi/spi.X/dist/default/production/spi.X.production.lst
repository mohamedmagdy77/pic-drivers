

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Aug 31 23:18:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4550 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _SSPBUF	set	4041
    48  0000                     _SSPCON1	set	4038
    49  0000                     _TRISA	set	3986
    50  0000                     _TRISB	set	3987
    51  0000                     _TRISC	set	3988
    52  0000                     _LC0	set	31832
    53  0000                     _SSPIF	set	31987
    54  0000                     _CKP	set	32308
    55  0000                     _CKE	set	32318
    56  0000                     _SMP	set	32319
    57                           
    58                           ; #config settings
    59  0000                     
    60                           	psect	cinit
    61  007F2C                     __pcinit:
    62                           	opt callstack 0
    63  007F2C                     start_initialization:
    64                           	opt callstack 0
    65  007F2C                     __initialization:
    66                           	opt callstack 0
    67  007F2C                     end_of_initialization:
    68                           	opt callstack 0
    69  007F2C                     __end_of__initialization:
    70                           	opt callstack 0
    71  007F2C  0100               	movlb	0
    72  007F2E  EFA0  F03F         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75  000001                     __pcstackCOMRAM:
    76                           	opt callstack 0
    77  000001                     spi_init@sample:
    78                           	opt callstack 0
    79  000001                     spi_send@sending:
    80                           	opt callstack 0
    81                           
    82                           ; 1 bytes @ 0x0
    83  000001                     	ds	1
    84  000002                     spi_init@select:
    85                           	opt callstack 0
    86                           
    87                           ; 1 bytes @ 0x1
    88  000002                     	ds	1
    89  000003                     spi_init@pol:
    90                           	opt callstack 0
    91                           
    92                           ; 1 bytes @ 0x2
    93  000003                     	ds	1
    94  000004                     ??_spi_init:
    95                           
    96                           ; 1 bytes @ 0x3
    97  000004                     	ds	1
    98  000005                     spi_init@mode:
    99                           	opt callstack 0
   100                           
   101                           ; 1 bytes @ 0x4
   102  000005                     	ds	1
   103  000006                     main@x:
   104                           	opt callstack 0
   105                           
   106                           ; 2 bytes @ 0x5
   107  000006                     	ds	2
   108  000008                     main@i:
   109                           	opt callstack 0
   110                           
   111                           ; 2 bytes @ 0x7
   112  000008                     	ds	2
   113                           
   114 ;;
   115 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   116 ;;
   117 ;; *************** function _main *****************
   118 ;; Defined at:
   119 ;;		line 11 in file "main.c"
   120 ;; Parameters:    Size  Location     Type
   121 ;;		None
   122 ;; Auto vars:     Size  Location     Type
   123 ;;  x               2    5[COMRAM] int 
   124 ;;  i               2    7[COMRAM] int 
   125 ;; Return value:  Size  Location     Type
   126 ;;                  1    wreg      void 
   127 ;; Registers used:
   128 ;;		wreg, status,2, status,0, cstack
   129 ;; Tracked objects:
   130 ;;		On entry : 0/0
   131 ;;		On exit  : 0/0
   132 ;;		Unchanged: 0/0
   133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   134 ;;      Params:         0       0       0       0       0       0       0       0       0
   135 ;;      Locals:         4       0       0       0       0       0       0       0       0
   136 ;;      Temps:          0       0       0       0       0       0       0       0       0
   137 ;;      Totals:         4       0       0       0       0       0       0       0       0
   138 ;;Total ram usage:        4 bytes
   139 ;; Hardware stack levels required when called:    1
   140 ;; This function calls:
   141 ;;		_spi_init
   142 ;;		_spi_send
   143 ;; This function is called by:
   144 ;;		Startup code after reset
   145 ;; This function uses a non-reentrant model
   146 ;;
   147                           
   148                           	psect	text0
   149  007F40                     __ptext0:
   150                           	opt callstack 0
   151  007F40                     _main:
   152                           	opt callstack 30
   153                           
   154                           ;main.c: 12:     spi_init(2,0,0,0);
   155                           
   156                           ;incstack = 0
   157  007F40  0E00               	movlw	0
   158  007F42  6E01               	movwf	spi_init@sample,c
   159  007F44  0E00               	movlw	0
   160  007F46  6E02               	movwf	spi_init@select,c
   161  007F48  0E00               	movlw	0
   162  007F4A  6E03               	movwf	spi_init@pol,c
   163  007F4C  0E02               	movlw	2
   164  007F4E  ECCC  F03F         	call	_spi_init
   165                           
   166                           ;main.c: 13:     TRISC &= ~(1<<0);
   167  007F52  9094               	bcf	3988,0,c	;volatile
   168  007F54                     l858:
   169                           
   170                           ;main.c: 15:         LC0 = 0;
   171  007F54  908B               	bcf	3979,0,c	;volatile
   172                           
   173                           ;main.c: 16:         for(int i=0;i<16;i++){
   174  007F56  0E00               	movlw	0
   175  007F58  6E09               	movwf	main@i+1,c
   176  007F5A  0E00               	movlw	0
   177  007F5C  6E08               	movwf	main@i,c
   178  007F5E                     l866:
   179                           
   180                           ;main.c: 17:             spi_send(i);
   181  007F5E  5008               	movf	main@i,w,c
   182  007F60  EC99  F03F         	call	_spi_send
   183                           
   184                           ;main.c: 18:             for(int x=0;x<10000;x++){}
   185  007F64  0E00               	movlw	0
   186  007F66  6E07               	movwf	main@x+1,c
   187  007F68  0E00               	movlw	0
   188  007F6A  6E06               	movwf	main@x,c
   189  007F6C                     l874:
   190  007F6C  4A06               	infsnz	main@x,f,c
   191  007F6E  2A07               	incf	main@x+1,f,c
   192  007F70  BE07               	btfsc	main@x+1,7,c
   193  007F72  D7FC               	goto	l874
   194  007F74  0E10               	movlw	16
   195  007F76  5C06               	subwf	main@x,w,c
   196  007F78  0E27               	movlw	39
   197  007F7A  5807               	subwfb	main@x+1,w,c
   198  007F7C  A0D8               	btfss	status,0,c
   199  007F7E  D7F6               	goto	l874
   200                           
   201                           ;main.c: 19:         }
   202  007F80  4A08               	infsnz	main@i,f,c
   203  007F82  2A09               	incf	main@i+1,f,c
   204  007F84  BE09               	btfsc	main@i+1,7,c
   205  007F86  D7EB               	goto	l866
   206  007F88  5009               	movf	main@i+1,w,c
   207  007F8A  E104               	bnz	u220
   208  007F8C  0E10               	movlw	16
   209  007F8E  5C08               	subwf	main@i,w,c
   210  007F90  A0D8               	btfss	status,0,c
   211  007F92  D7E5               	goto	l866
   212  007F94                     u220:
   213                           
   214                           ;main.c: 20:         LC0 = 1;
   215  007F94  808B               	bsf	3979,0,c	;volatile
   216  007F96  D7DE               	goto	l858
   217  007F98                     __end_of_main:
   218                           	opt callstack 0
   219                           
   220 ;; *************** function _spi_send *****************
   221 ;; Defined at:
   222 ;;		line 47 in file "spi.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;  sending         1    wreg     unsigned char 
   225 ;; Auto vars:     Size  Location     Type
   226 ;;  sending         1    0[COMRAM] unsigned char 
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   236 ;;      Params:         0       0       0       0       0       0       0       0       0
   237 ;;      Locals:         1       0       0       0       0       0       0       0       0
   238 ;;      Temps:          0       0       0       0       0       0       0       0       0
   239 ;;      Totals:         1       0       0       0       0       0       0       0       0
   240 ;;Total ram usage:        1 bytes
   241 ;; Hardware stack levels used:    1
   242 ;; This function calls:
   243 ;;		Nothing
   244 ;; This function is called by:
   245 ;;		_main
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	text1
   250  007F32                     __ptext1:
   251                           	opt callstack 0
   252  007F32                     _spi_send:
   253                           	opt callstack 30
   254                           
   255                           ;incstack = 0
   256                           ;spi_send@sending stored from wreg
   257  007F32  6E01               	movwf	spi_send@sending,c
   258                           
   259                           ;spi.c: 48:     SSPBUF = sending;
   260  007F34  C001  FFC9         	movff	spi_send@sending,4041	;volatile
   261  007F38                     l37:
   262  007F38  A69E               	btfss	3998,3,c	;volatile
   263  007F3A  D7FE               	goto	l37
   264                           
   265                           ;spi.c: 50:     SSPIF = 0;
   266  007F3C  969E               	bcf	3998,3,c	;volatile
   267  007F3E  0012               	return		;funcret
   268  007F40                     __end_of_spi_send:
   269                           	opt callstack 0
   270                           
   271 ;; *************** function _spi_init *****************
   272 ;; Defined at:
   273 ;;		line 12 in file "spi.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;  mode            1    wreg     unsigned char 
   276 ;;  sample          1    0[COMRAM] unsigned char 
   277 ;;  select          1    1[COMRAM] unsigned char 
   278 ;;  pol             1    2[COMRAM] unsigned char 
   279 ;; Auto vars:     Size  Location     Type
   280 ;;  mode            1    4[COMRAM] unsigned char 
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2, status,0
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   290 ;;      Params:         3       0       0       0       0       0       0       0       0
   291 ;;      Locals:         1       0       0       0       0       0       0       0       0
   292 ;;      Temps:          1       0       0       0       0       0       0       0       0
   293 ;;      Totals:         5       0       0       0       0       0       0       0       0
   294 ;;Total ram usage:        5 bytes
   295 ;; Hardware stack levels used:    1
   296 ;; This function calls:
   297 ;;		Nothing
   298 ;; This function is called by:
   299 ;;		_main
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           	psect	text2
   304  007F98                     __ptext2:
   305                           	opt callstack 0
   306  007F98                     _spi_init:
   307                           	opt callstack 30
   308                           
   309                           ;incstack = 0
   310                           ;spi_init@mode stored from wreg
   311  007F98  6E05               	movwf	spi_init@mode,c
   312                           
   313                           ;spi.c: 13:     if(mode==5 || mode==4){
   314  007F9A  0E05               	movlw	5
   315  007F9C  1805               	xorwf	spi_init@mode,w,c
   316  007F9E  B4D8               	btfsc	status,2,c
   317  007FA0  D004               	goto	u140
   318  007FA2  0E04               	movlw	4
   319  007FA4  1805               	xorwf	spi_init@mode,w,c
   320  007FA6  A4D8               	btfss	status,2,c
   321  007FA8  D004               	goto	l822
   322  007FAA                     u140:
   323                           
   324                           ;spi.c: 14:         TRISC &= ~(1<<7);
   325  007FAA  9E94               	bcf	3988,7,c	;volatile
   326                           
   327                           ;spi.c: 15:         TRISB |= (1<<1);
   328  007FAC  8293               	bsf	3987,1,c	;volatile
   329                           
   330                           ;spi.c: 16:         TRISA |= (1<<5);
   331  007FAE  8A92               	bsf	3986,5,c	;volatile
   332                           
   333                           ;spi.c: 17:     }
   334  007FB0  D002               	goto	l824
   335  007FB2                     l822:
   336                           
   337                           ;spi.c: 19:         TRISC &= ~(1<<7);
   338  007FB2  9E94               	bcf	3988,7,c	;volatile
   339                           
   340                           ;spi.c: 20:         TRISB &= ~(1<<1);
   341  007FB4  9293               	bcf	3987,1,c	;volatile
   342  007FB6                     l824:
   343                           
   344                           ;spi.c: 22:     SSPCON1 = (SSPCON1 & 0xF0) | (mode & 0x0F);
   345  007FB6  C005  F004         	movff	spi_init@mode,??_spi_init
   346  007FBA  0E0F               	movlw	15
   347  007FBC  1604               	andwf	??_spi_init,f,c
   348  007FBE  50C6               	movf	4038,w,c	;volatile
   349  007FC0  0BF0               	andlw	240
   350  007FC2  1004               	iorwf	??_spi_init,w,c
   351  007FC4  6EC6               	movwf	4038,c	;volatile
   352                           
   353                           ;spi.c: 23:     if(sample==0){
   354  007FC6  5001               	movf	spi_init@sample,w,c
   355  007FC8  A4D8               	btfss	status,2,c
   356  007FCA  D002               	goto	l830
   357                           
   358                           ;spi.c: 24:         SMP = 0;
   359  007FCC  9EC7               	bcf	4039,7,c	;volatile
   360                           
   361                           ;spi.c: 25:     }
   362  007FCE  D003               	goto	l834
   363  007FD0                     l830:
   364  007FD0  0401               	decf	spi_init@sample,w,c
   365  007FD2  B4D8               	btfsc	status,2,c
   366                           
   367                           ;spi.c: 27:         SMP = 1;
   368  007FD4  8EC7               	bsf	4039,7,c	;volatile
   369  007FD6                     l834:
   370                           
   371                           ;spi.c: 29:     if(select==0){
   372  007FD6  5002               	movf	spi_init@select,w,c
   373  007FD8  A4D8               	btfss	status,2,c
   374  007FDA  D002               	goto	l838
   375                           
   376                           ;spi.c: 30:         CKE = 0;
   377  007FDC  9CC7               	bcf	4039,6,c	;volatile
   378                           
   379                           ;spi.c: 31:     }
   380  007FDE  D003               	goto	l842
   381  007FE0                     l838:
   382  007FE0  0402               	decf	spi_init@select,w,c
   383  007FE2  B4D8               	btfsc	status,2,c
   384                           
   385                           ;spi.c: 33:         CKE = 1;
   386  007FE4  8CC7               	bsf	4039,6,c	;volatile
   387  007FE6                     l842:
   388                           
   389                           ;spi.c: 35:     if(pol==0){
   390  007FE6  5003               	movf	spi_init@pol,w,c
   391  007FE8  A4D8               	btfss	status,2,c
   392  007FEA  D002               	goto	l846
   393                           
   394                           ;spi.c: 36:         CKP = 0;
   395  007FEC  98C6               	bcf	4038,4,c	;volatile
   396                           
   397                           ;spi.c: 37:     }
   398  007FEE  D003               	goto	l850
   399  007FF0                     l846:
   400  007FF0  0403               	decf	spi_init@pol,w,c
   401  007FF2  B4D8               	btfsc	status,2,c
   402                           
   403                           ;spi.c: 39:         CKP = 1;
   404  007FF4  88C6               	bsf	4038,4,c	;volatile
   405  007FF6                     l850:
   406                           
   407                           ;spi.c: 41:     SSPCON1 |= (1<<5);
   408  007FF6  8AC6               	bsf	4038,5,c	;volatile
   409                           
   410                           ;spi.c: 42:     SSPCON1 &= ~(1<<7);
   411  007FF8  9EC6               	bcf	4038,7,c	;volatile
   412                           
   413                           ;spi.c: 43:     SSPCON1 &= ~(1<<6);
   414  007FFA  9CC6               	bcf	4038,6,c	;volatile
   415                           
   416                           ;spi.c: 44:     SSPIF = 0;
   417  007FFC  969E               	bcf	3998,3,c	;volatile
   418  007FFE  0012               	return		;funcret
   419  008000                     __end_of_spi_init:
   420                           	opt callstack 0
   421  0000                     
   422                           	psect	rparam
   423  0000                     tosu	equ	0xFFF
   424                           tosh	equ	0xFFE
   425                           tosl	equ	0xFFD
   426                           stkptr	equ	0xFFC
   427                           pclatu	equ	0xFFB
   428                           pclath	equ	0xFFA
   429                           pcl	equ	0xFF9
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           prodh	equ	0xFF4
   435                           prodl	equ	0xFF3
   436                           indf0	equ	0xFEF
   437                           postinc0	equ	0xFEE
   438                           postdec0	equ	0xFED
   439                           preinc0	equ	0xFEC
   440                           plusw0	equ	0xFEB
   441                           fsr0h	equ	0xFEA
   442                           fsr0l	equ	0xFE9
   443                           wreg	equ	0xFE8
   444                           indf1	equ	0xFE7
   445                           postinc1	equ	0xFE6
   446                           postdec1	equ	0xFE5
   447                           preinc1	equ	0xFE4
   448                           plusw1	equ	0xFE3
   449                           fsr1h	equ	0xFE2
   450                           fsr1l	equ	0xFE1
   451                           bsr	equ	0xFE0
   452                           indf2	equ	0xFDF
   453                           postinc2	equ	0xFDE
   454                           postdec2	equ	0xFDD
   455                           preinc2	equ	0xFDC
   456                           plusw2	equ	0xFDB
   457                           fsr2h	equ	0xFDA
   458                           fsr2l	equ	0xFD9
   459                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_spi_init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     555
                                              5 COMRAM     4     4      0
                           _spi_init
                           _spi_send
 ---------------------------------------------------------------------------------
 (1) _spi_send                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             5     2      3     426
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _spi_init
   _spi_send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      9       9       1        9.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Aug 31 23:18:45 2019

                     l37 7F38              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l830 7FD0                      l822 7FB2  
                    l824 7FB6                      l850 7FF6                      l842 7FE6  
                    l834 7FD6                      l846 7FF0                      l838 7FE0  
                    _LC0 007C58                      _CKE 007E3E                      l874 7F6C  
                    l866 7F5E                      l858 7F54                      _CKP 007E34  
           __CFG_CPB$OFF 000000                      u140 7FAA                      u220 7F94  
           __CFG_CPD$OFF 000000                      _SMP 007E3F             __CFG_BOR$OFF 000000  
           __CFG_WDT$OFF 000000                     _main 7F40             spi_init@mode 0005  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001            __CFG_USBDIV$1 000000                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _SSPIF 007CF3  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    main@i 0008  
                  main@x 0006                    status 000FD8           __CFG_ICPRT$OFF 000000  
        __initialization 7F2C             __end_of_main 7F98                   ??_main 0006  
          __activetblptr 000000                   _SSPBUF 000FC9           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000           spi_init@sample 0001           spi_init@select 0002  
       __end_of_spi_init 8000         __end_of_spi_send 7F40               __accesstop 0060  
__end_of__initialization 7F2C          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  _SSPCON1 000FC6          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                ?_spi_init 0001  
              ?_spi_send 0001                  __pcinit 7F2C                  __ramtop 0800  
                __ptext0 7F40                  __ptext1 7F32                  __ptext2 7F98  
   end_of_initialization 7F2C               ??_spi_init 0004               ??_spi_send 0001  
            spi_init@pol 0003      start_initialization 7F2C          spi_send@sending 0001  
       __CFG_LPT1OSC$OFF 000000        __size_of_spi_init 0068        __size_of_spi_send 000E  
       __CFG_WDTPS$32768 000000                 __Hrparam 0000                 __Lrparam 0000  
  __CFG_FOSC$INTOSCIO_EC 000000            __size_of_main 0058                 _spi_init 7F98  
               _spi_send 7F32    __CFG_CPUDIV$OSC1_PLL2 000000  
